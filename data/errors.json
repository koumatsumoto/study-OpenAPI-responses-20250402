[
  {
    "number": "3.451",
    "name": "C4I",
    "definitions": [
      {
        "text": "command, control, communications, computer, and intelligence",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "指揮、制御、通信、コンピュータ、インテリジェンス"
      }
    ]
  },
  {
    "number": "3.452",
    "name": "cache",
    "definitions": [
      {
        "text": "temporary storage in computer memory, to improve operations by having frequently used data readily available for retrieval2. RAM with very high operating speed used for data storage within a processor",
        "textJa": "頻繁に使用されるデータをすぐに取得できるようにすることで、操作を改善するためのコンピュータ メモリ内の一時ストレージ2。プロセッサ内のデータストレージに使用される非常に高速な動作速度を備えたRAM"
      }
    ]
  },
  {
    "number": "3.453",
    "name": "CAD",
    "definitions": [
      {
        "text": "Computer Aided Design",
        "reference": "ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview",
        "textJa": "コンピュータ支援設計"
      }
    ]
  },
  {
    "number": "3.454",
    "name": "cadence",
    "definitions": [
      {
        "text": "frequency of performing a periodic activity, such as incremental product release",
        "reference": "Software Extension to the PMBOK® Guide Fifth Edition",
        "textJa": "製品の増分リリースなどの定期的なアクティビティを実行する頻度"
      }
    ]
  },
  {
    "number": "3.455",
    "name": "CAI",
    "definitions": [
      {
        "text": "critical application item",
        "reference": "IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.2",
        "textJa": "重要なアプリケーション項目"
      }
    ]
  },
  {
    "number": "3.456",
    "name": "calculator",
    "definitions": [
      {
        "text": "device that is suitable for performing arithmetic operations, but that requires human intervention to alter its stored program, if any, and to initiate each operation or sequence of operations",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "算術演算の実行には適しているが、格納されているプログラムがある場合にはそれを変更し、各演算または一連の演算を開始するには人間の介入が必要な装置"
      }
    ],
    "note": "A calculator performs some of the functions of a computer, but usually operates only with frequent human intervention.",
    "noteJa": "電卓はコンピューターの機能の一部を実行しますが、通常は人間が頻繁に介入しないと動作しません。"
  },
  {
    "number": "3.457",
    "name": "calendar unit",
    "definitions": [
      {
        "text": "smallest unit of time used in scheduling a project",
        "textJa": "プロジェクトのスケジュールに使用される最小の時間単位"
      }
    ],
    "note": "Calendar units are generally in hours, days, or weeks, but can also be in quarter years, months, shifts, or even in minutes.",
    "noteJa": "カレンダーの単位は通常、時間、日、または週ですが、四半期、月、シフト、または分単位にすることもできます。"
  },
  {
    "number": "3.458",
    "name": "call",
    "definitions": [
      {
        "text": "transfer of control from one software module to another, usually with the implication that control will be returned to the calling module",
        "textJa": "あるソフトウェア モジュールから別のソフトウェア モジュールへの制御の移行。通常は制御が呼び出し側モジュールに返されることを意味します。"
      },
      {
        "text": "computer instruction that transfers control from one software module to another as in (1) and often specifies the parameters to be passed to and from the module",
        "textJa": "(1) のように、あるソフトウェア モジュールから別のソフトウェア モジュールに制御を移し、多くの場合、モジュール間で受け渡されるパラメータを指定するコンピュータ命令。"
      },
      {
        "text": "to transfer control from one software module to another as in (1) and, often, to pass parameters to the other module",
        "textJa": "(1) のように、あるソフトウェア モジュールから別のソフトウェア モジュールに制御を転送し、多くの場合、パラメータを他のモジュールに渡します。"
      },
      {
        "text": "request for service(s) or action(s) with respect to an application or a related service",
        "reference": "ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.9",
        "textJa": "アプリケーションまたは関連サービスに関するサービスまたはアクションのリクエスト"
      }
    ],
    "confer": [
      "go to"
    ],
    "note": "A call might concern a request for service, information or advice; disruption or error reporting (incident); request for change; assignment (for instance an instruction to start an off-schedule production run); and complaint",
    "noteJa": "電話は、サービス、情報、またはアドバイスの要求に関するものである場合があります。中断またはエラーの報告 (インシデント)。変更の要求。割り当て（たとえば、スケジュール外の生産実行を開始する指示）。そして苦情"
  },
  {
    "number": "3.459",
    "name": "call arrow",
    "definitions": [
      {
        "text": "arrow that enables the sharing of detail between IDEF0 models (linking them together) or within an IDEF0 model",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.23",
        "textJa": "IDEF0 モデル間 (リンク) または IDEF0 モデル内で詳細の共有を可能にする矢印"
      }
    ],
    "note": "The tail of a call arrow is attached to the bottom side of a box. One or more page references are attached to a call arrow.",
    "noteJa": "コールアローの尾部はボックスの底面に取り付けられます。 1 つ以上のページ参照が呼び出し矢印に付加されます。"
  },
  {
    "number": "3.460",
    "name": "call by name",
    "definitions": [
      {
        "text": "method for passing parameters, in which the calling module provides to the called module a symbolic expression representing the parameter to be passed, and a service routine evaluates the expression and provides the resulting value to the called module",
        "textJa": "パラメーターを渡すためのメソッド。呼び出し側モジュールが、渡されるパラメーターを表すシンボリック式を呼び出されたモジュールに提供し、サービス ルーチンがその式を評価して、結果の値を呼び出されたモジュールに提供します。"
      }
    ],
    "confer": [
      "call by reference",
      "call by value"
    ],
    "note": "Because the expression is evaluated each time its corresponding formal parameter is used in the called module, the value of the parameter can change during the execution of the called module.",
    "noteJa": "式は、対応する仮パラメータが呼び出されるモジュールで使用されるたびに評価されるため、パラメータの値は呼び出されるモジュールの実行中に変更される可能性があります。"
  },
  {
    "number": "3.461",
    "name": "call by reference",
    "definitions": [
      {
        "text": "a method for passing parameters, in which the calling module provides to the called module the address of the parameter to be passed",
        "textJa": "パラメータを渡すためのメソッド。呼び出し側モジュールが呼び出されたモジュールに、渡されるパラメータのアドレスを提供します。"
      }
    ],
    "alias": [
      "call by address",
      "call by location"
    ],
    "confer": [
      "call by name",
      "call by value"
    ],
    "note": "With this method, the called module has the ability to change the value of the parameter stored by the calling module.",
    "noteJa": "このメソッドを使用すると、呼び出されたモジュールは、呼び出し側モジュールによって保存されたパラメータの値を変更できます。"
  },
  {
    "number": "3.462",
    "name": "call by value",
    "definitions": [
      {
        "text": "method of passing parameters, in which the calling module provides to the called module the actual value of the parameter to be passed",
        "textJa": "パラメーターを渡すメソッド。呼び出し側モジュールが呼び出されたモジュールに、渡されるパラメーターの実際の値を提供します。"
      }
    ],
    "confer": [
      "call by name",
      "call by reference"
    ],
    "note": "With this method, the called module cannot change the value of the parameter as stored by the calling module.",
    "noteJa": "このメソッドを使用すると、呼び出されたモジュールは、呼び出しモジュールによって保存されたパラメーターの値を変更できません。"
  },
  {
    "number": "3.463",
    "name": "call graph",
    "definitions": [
      {
        "text": "diagram that identifies the modules in a system or computer program and shows which modules call one another",
        "textJa": "システムまたはコンピュータ プログラム内のモジュールを識別し、どのモジュールが相互に呼び出しているかを示す図"
      }
    ],
    "alias": [
      "call tree,",
      "tier chart"
    ],
    "confer": [
      "structure chart",
      "control flow diagram",
      "data flow diagram",
      "data structure diagram",
      "state diagram"
    ],
    "note": "The result is not necessarily the same as that shown in a structure chart.",
    "noteJa": "結果は構造図に示されるものと必ずしも同じではありません。"
  },
  {
    "number": "3.464",
    "name": "call list",
    "definitions": [
      {
        "text": "ordered list of arguments used in a call to a software module",
        "textJa": "ソフトウェアモジュールの呼び出しで使用される引数の順序付きリスト"
      }
    ]
  },
  {
    "number": "3.465",
    "name": "call reference",
    "definitions": [
      {
        "text": "page reference attached to a call arrow",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.24",
        "textJa": "呼び出し矢印に添付されたページ参照"
      }
    ]
  },
  {
    "number": "3.466",
    "name": "called diagram",
    "definitions": [
      {
        "text": "decomposition diagram invoked by a calling box and identified by a page reference attached to a call arrow",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.25",
        "textJa": "呼び出しボックスによって呼び出され、呼び出し矢印に添付されたページ参照によって識別される分解図"
      }
    ]
  },
  {
    "number": "3.467",
    "name": "calling box",
    "definitions": [
      {
        "text": "box that is detailed by a decomposition diagram that is not the box's child diagram",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.26",
        "textJa": "ボックスの子図ではない分解図によって詳細が説明されているボックス"
      }
    ],
    "note": "A call arrow is attached to the bottom of a calling box.",
    "noteJa": "呼び出しボックスの底部には呼び出し矢印が取り付けられています。"
  },
  {
    "number": "3.468",
    "name": "calling sequence",
    "definitions": [
      {
        "text": "sequence of computer instructions and, possibly, data necessary to perform a call to another module",
        "textJa": "一連のコンピューター命令と、場合によっては別のモジュールの呼び出しを実行するために必要なデータ"
      }
    ]
  },
  {
    "number": "3.469",
    "name": "CAN",
    "definitions": [
      {
        "text": "controller area network",
        "textJa": "コントローラエリアネットワーク"
      }
    ]
  },
  {
    "number": "3.470",
    "name": "candidate FSM method",
    "definitions": [
      {
        "text": "documented software size measurement method submitted for conformity evaluation",
        "reference": "ISO/IEC 14143-2:2011 Information technology — Software measurement — Functional size measurement — Part 2: Conformity evaluation of software size measurement methods to ISO/IEC 14143-1, 3.1",
        "textJa": "適合性評価のために提出された文書化されたソフトウェア サイズ測定方法"
      }
    ]
  },
  {
    "number": "3.471",
    "name": "candidate key",
    "definitions": [
      {
        "text": "attribute, or combination of attributes, of an entity for which no two instances agree on the values",
        "reference": "IEEE 1320.2- 1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.14",
        "textJa": "2 つのインスタンスが値に一致しないエンティティの属性、または属性の組み合わせ"
      }
    ],
    "note": "[key style]",
    "noteJa": "【キースタイル】"
  },
  {
    "number": "3.472",
    "name": "capability maturity model",
    "definitions": [
      {
        "text": "model that contains the essential elements of effective processes for one or more disciplines and describes an evolutionary improvement path from ad hoc, immature processes to disciplined, mature processes with improved quality and effectiveness",
        "textJa": "1 つ以上の分野の効果的なプロセスの必須要素を含み、その場限りの未熟なプロセスから品質と有効性が向上した規律ある成熟したプロセスへの進化的な改善パスを記述するモデル。"
      }
    ]
  },
  {
    "number": "3.473",
    "name": "capable process",
    "definitions": [
      {
        "text": "process that can satisfy specified product quality, service quality, and process-performance objective",
        "textJa": "指定された製品品質、サービス品質、およびプロセスパフォーマンス目標を満たすことができるプロセス"
      }
    ],
    "confer": [
      "stable process",
      "standard process",
      "statistically managed process"
    ]
  },
  {
    "number": "3.474",
    "name": "capacity",
    "definitions": [
      {
        "text": "degree to which the maximum limits of a product or system parameter meet requirements",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.2.3",
        "textJa": "製品またはシステムパラメータの最大制限が要件をどの程度満たしているか"
      }
    ],
    "note": "Parameters can include the number of items that can be stored, the number of concurrent users, the communication bandwidth, throughput of transactions, and size of database.",
    "noteJa": "パラメータには、保存できるアイテムの数、同時ユーザーの数、通信帯域幅、トランザクションのスループット、データベースのサイズなどを含めることができます。"
  },
  {
    "number": "3.475",
    "name": "capacity testing",
    "definitions": [
      {
        "text": "type of performance efficiency testing conducted to evaluate the level at which increasing load (of users, transactions, data storage, etc.) compromises a test item's ability to sustain required performance",
        "reference": "ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.5",
        "textJa": "(ユーザー、トランザクション、データストレージなどの) 負荷の増加により、必要なパフォーマンスを維持するためのテスト項目の能力が損なわれるレベルを評価するために実施されるパフォーマンス効率テストの一種"
      }
    ]
  },
  {
    "number": "3.476",
    "name": "capital expenditure",
    "definitions": [
      {
        "text": "spending by an enterprise to acquire tangible infrastructure or facilities items, such as furniture, computers, and the like",
        "textJa": "家具やコンピュータなどの有形のインフラストラクチャまたは施設アイテムを取得するために企業が支出する支出"
      }
    ],
    "note": "does not include acquisition of consumable supplies or of items to be included in finished products for sale",
    "noteJa": "消耗品や販売用の完成品に含まれる品目の取得は含まれません。"
  },
  {
    "number": "3.477",
    "name": "capsule",
    "definitions": [
      {
        "text": "configuration of engineering objects forming a single unit for the purpose of encapsulation of processing and storage",
        "reference": "ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.4",
        "textJa": "処理と保存をカプセル化する目的で単一のユニットを形成するエンジニアリング オブジェクトの構成"
      }
    ],
    "example": "a virtual machine (e.g. a process)",
    "exampleJa": "仮想マシン (プロセスなど)"
  },
  {
    "number": "3.478",
    "name": "capsule manager",
    "definitions": [
      {
        "text": "engineering object which manages the engineering objects in a capsule",
        "reference": "ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.5",
        "textJa": "カプセル内のエンジニアリングオブジェクトを管理するエンジニアリングオブジェクト"
      }
    ]
  },
  {
    "number": "3.479",
    "name": "CARD",
    "definitions": [
      {
        "text": "cost analysis requirements description",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "コスト分析要件の説明"
      }
    ]
  },
  {
    "number": "3.480",
    "name": "cardinality",
    "definitions": [
      {
        "text": "constraint on the number of entity instances that are related to the subject entity through a relationship",
        "reference": "ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2",
        "textJa": "関係を通じて対象エンティティに関連付けられるエンティティ インスタンスの数に対する制約"
      },
      {
        "text": "specification of how many instances of a first class can or are required to exist for each instance of a second (not necessarily distinct) class, and how many instances of a second class can or are required to exist for each instance of a first class",
        "reference": "IEEE 1320.2- 1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.15",
        "textJa": "2 番目の (必ずしも別個の) クラスのインスタンスごとに最初のクラスのインスタンスがいくつ存在できるか、または存在する必要があるか、および最初のクラスのインスタンスごとに 2 番目のクラスのインスタンスが何個存在できるか、または存在する必要があるかの仕様"
      }
    ],
    "confer": [
      "cardinality constraint"
    ],
    "note": "For each direction of a relationship, the cardinality can be constrained.",
    "noteJa": "関係の方向ごとに、カーディナリティを制約できます。"
  },
  {
    "number": "3.481",
    "name": "cardinality constraint",
    "definitions": [
      {
        "text": "constraint that limits the number of instances that can be associated with each other in a relationship",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.16",
        "textJa": "関係内で相互に関連付けることができるインスタンスの数を制限する制約"
      },
      {
        "text": "constraint that limits the number of members in a collection",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.16",
        "textJa": "コレクション内のメンバーの数を制限する制約"
      }
    ],
    "confer": [
      "cardinality"
    ]
  },
  {
    "number": "3.482",
    "name": "carrier",
    "definitions": [
      {
        "text": "set of a many-sorted algebra",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets Part 1: Concepts, definitions and graphical notation, 2.1.6",
        "textJa": "さまざまに分類された代数のセット"
      }
    ]
  },
  {
    "number": "3.483",
    "name": "case",
    "definitions": [
      {
        "text": "single-entry, single-exit multiple-way branch that defines a control expression, specifies the processing to performed for each value of the control expression, and returns control in all instances to the statement immediately following the overall construct",
        "textJa": "制御式を定義し、制御式の各値に対して実行する処理を指定し、すべてのインスタンスの制御を構造全体の直後のステートメントに返す、単一入口、単一出口の複数方向分岐。"
      },
      {
        "text": "Computer Aided Software Engineering",
        "reference": "ISO/IEC 14102:2008 Information Technology - Guideline for the evaluation and selection of CASE tools, 4",
        "textJa": "コンピュータ支援ソフトウェアエンジニアリング"
      }
    ],
    "alias": [
      "multiple exclusive selective construct"
    ],
    "confer": [
      "go to",
      "jump",
      "if-then-else",
      "multiple inclusive selective construct"
    ]
  },
  {
    "number": "3.484",
    "name": "CASE needs",
    "definitions": [
      {
        "text": "organizational requirements which are met by CASE tool characteristics",
        "reference": "ISO/IEC TR 14471:2007 Information technology — Software engineering — Guidelines for the adoption of CASE tools, 2.1.3",
        "textJa": "CASEツールの特性によって満たされる組織の要件"
      }
    ],
    "note": "These characteristics are detailed in ISO/IEC 14102:2008. They include management process, development process, maintenance, documentation, configuration management, quality assurance, verification, validation, environment needs, CASE tool integrability, quality characteristics, acquisition needs, implementation needs, support indicators, and certification requirements.",
    "noteJa": "これらの特性は ISO/IEC 14102:2008 で詳しく説明されています。これらには、管理プロセス、開発プロセス、メンテナンス、文書化、構成管理、品質保証、検証、検証、環境ニーズ、CASE ツールの統合性、品質特性、取得ニーズ、実装ニーズ、サポート指標、認証要件が含まれます。"
  },
  {
    "number": "3.485",
    "name": "CASE tool",
    "definitions": [
      {
        "text": "software tool used for computer-aided software engineering (CASE)",
        "reference": "IEEE 1175.1-2002 (R2007) IEEE Guide for CASE Tool Interconnections-Classification and Description, 3.3",
        "textJa": "コンピュータ支援ソフトウェアエンジニアリング (CASE) に使用されるソフトウェアツール"
      },
      {
        "text": "software product that can assist software engineers by providing automated support for software life-cycle activities",
        "reference": "ISO/IEC 14102:2008 Information Technology - Guideline for the evaluation and selection of CASE tools, 3.2",
        "textJa": "ソフトウェア ライフサイクル アクティビティの自動サポートを提供することでソフトウェア エンジニアを支援できるソフトウェア製品"
      },
      {
        "text": "software product that can assist software and system engineers by providing automated support for software and system engineering life-cycle activitie",
        "reference": "ISO/IEC 15940:2013 Systems and software engineering — Software Engineering Environment Services, 2.3",
        "textJa": "ソフトウェアおよびシステム エンジニアリングのライフサイクル アクティビティの自動サポートを提供することにより、ソフトウェア エンジニアおよびシステム エンジニアを支援できるソフトウェア製品"
      }
    ],
    "note": "A CASE tool can provide support in only selected functional areas or in a wide variety of functional areas.",
    "noteJa": "CASE ツールは、選択された機能領域のみ、またはさまざまな機能領域のサポートを提供できます。"
  },
  {
    "number": "3.486",
    "name": "cast",
    "definitions": [
      {
        "text": "to treat an object of one type as an object of another type",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.17",
        "textJa": "ある型のオブジェクトを別の型のオブジェクトとして扱うこと"
      }
    ],
    "confer": [
      "coerce"
    ]
  },
  {
    "number": "3.487",
    "name": "catastrophic failure",
    "definitions": [
      {
        "text": "failure of critical software",
        "textJa": "重要なソフトウェアの障害"
      }
    ]
  },
  {
    "number": "3.488",
    "name": "categorization",
    "definitions": [
      {
        "text": "specific way to allocate a target system into a category",
        "reference": "ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.5",
        "textJa": "ターゲット システムをカテゴリに割り当てる具体的な方法"
      }
    ],
    "confer": [
      "generalization"
    ]
  },
  {
    "number": "3.489",
    "name": "categorization scheme",
    "definitions": [
      {
        "text": "orderly combination of views and categories related to software.",
        "textJa": "ソフトウェアに関連するビューとカテゴリの秩序ある組み合わせ。"
      }
    ]
  },
  {
    "number": "3.490",
    "name": "categorization space",
    "definitions": [
      {
        "text": "universal set of systems and software which has one or more classification axes as its individual dimension, by which stakeholder's concerns on categorization are expressed",
        "reference": "ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.6",
        "textJa": "個別の次元として 1 つ以上の分類軸を持ち、分類に対する利害関係者の懸念を表現するシステムおよびソフトウェアの普遍的なセット。"
      }
    ]
  },
  {
    "number": "3.491",
    "name": "category",
    "definitions": [
      {
        "text": "specifically defined division or grouping of software based upon one or more attributes or characteristics",
        "textJa": "1 つ以上の属性または特性に基づいて、ソフトウェアを具体的に定義した分割またはグループ化"
      },
      {
        "text": "subset of categorization space, which the stakeholders are interested in, specified using a combination of one or more equivalence classes",
        "reference": "ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.9",
        "textJa": "利害関係者が関心を持つ分類空間のサブセット。1 つ以上の同値クラスの組み合わせを使用して指定されます。"
      }
    ]
  },
  {
    "number": "3.492",
    "name": "category entity",
    "definitions": [
      {
        "text": "entity whose instances represent a subtype or subclassification of another entity (generic entity)",
        "reference": "IEEE 1320.2- 1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.21",
        "textJa": "インスタンスが別のエンティティのサブタイプまたはサブ分類を表すエンティティ (汎用エンティティ)"
      }
    ],
    "confer": [
      "subclass",
      "subtype"
    ],
    "note": "[key style]",
    "noteJa": "【キースタイル】"
  },
  {
    "number": "3.493",
    "name": "causal analysis",
    "definitions": [
      {
        "text": "analysis of a defect to determine its cause",
        "textJa": "欠陥を分析して原因を特定する"
      }
    ]
  },
  {
    "number": "3.494",
    "name": "causal relationship",
    "definitions": [
      {
        "text": "existence dependency between the stimulus of a behavior and the various responses that are caused to occur",
        "reference": "IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.9",
        "textJa": "行動の刺激とそれによって引き起こされるさまざまな反応の間の存在依存性"
      }
    ]
  },
  {
    "number": "3.495",
    "name": "cause and effect diagram",
    "definitions": [
      {
        "text": "a decomposition technique that helps trace an undesirable effect back to its root cause",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "望ましくない影響をその根本原因まで追跡するのに役立つ分解手法"
      }
    ],
    "alias": [
      "fishbone diagram"
    ]
  },
  {
    "number": "3.496",
    "name": "caution",
    "definitions": [
      {
        "text": "advisory in software user documentation that performing some action can lead to consequences that are unwanted or undefined, such as loss of data or an equipment problem",
        "reference": "ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.7",
        "textJa": "ソフトウェアのユーザーマニュアルには、何らかのアクションを実行すると、データの損失や機器の問題など、望ましくない、または未定義の結果が生じる可能性があるという注意事項が記載されています。"
      }
    ],
    "confer": [
      "warning",
      "note"
    ]
  },
  {
    "number": "3.497",
    "name": "CBa",
    "definitions": [
      {
        "text": "conduct benchmarking activity",
        "reference": "ISO/IEC 29155-2:2013: Systems and software engineering — Information technology project performance benchmarking framework — Part 2: Requirements for benchmarking, 4",
        "textJa": "ベンチマーク活動を実施する"
      }
    ]
  },
  {
    "number": "3.498",
    "name": "CCB",
    "definitions": [
      {
        "text": "configuration control board",
        "reference": "IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2; ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes — Project management, 3",
        "textJa": "構成制御ボード"
      },
      {
        "text": "change control board",
        "reference": "IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2; ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes — Project management, 3",
        "textJa": "制御基板を変更する"
      }
    ]
  },
  {
    "number": "3.499",
    "name": "CCCS",
    "definitions": [
      {
        "text": "Client Conversion Code Sets",
        "reference": "ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3",
        "textJa": "クライアント変換コードセット"
      }
    ]
  },
  {
    "number": "3.500",
    "name": "CCM",
    "definitions": [
      {
        "text": "CORBA Component Model",
        "reference": "ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.3",
        "textJa": "CORBAコンポーネントモデル"
      }
    ]
  },
  {
    "number": "3.1501",
    "name": "executable statement",
    "definitions": [
      {
        "text": "statement which, when compiled, is translated into object code, which will be executed procedurally when the test item is running and can perform an action on program data",
        "reference": "ISO/IEC/IEEE 29119-4:2015 Software and systems engineering — Software testing — Part 4: Test techniques, 4.19",
        "textJa": "コンパイル時にオブジェクト コードに変換されるステートメント。テスト項目の実行時に手続き的に実行され、プログラム データに対してアクションを実行できます。"
      }
    ]
  },
  {
    "number": "3.1502",
    "name": "execute",
    "definitions": [
      {
        "text": "to carry out an instruction, process, or computer program2. directing, managing, performing, and accomplishing the project work, providing the deliverables, and providing work performance information",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "命令、プロセス、またはコンピュータ プログラムを実行するため2。プロジェクト作業の指揮、管理、実行、達成、成果物の提供、および作業実績情報の提供"
      }
    ]
  },
  {
    "number": "3.1503",
    "name": "executing process group",
    "definitions": [
      {
        "text": "those processes performed to complete the work defined in the project management plan to satisfy the project specifications",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクト仕様を満たすためにプロジェクト管理計画で定義された作業を完了するために実行されるプロセス"
      }
    ]
  },
  {
    "number": "3.1504",
    "name": "execution efficiency",
    "definitions": [
      {
        "text": "degree to which a system or component performs its designated functions with minimum consumption of time",
        "textJa": "システムまたはコンポーネントが最小限の時間で指定された機能を実行する度合い"
      }
    ],
    "confer": [
      "execution time",
      "storage efficiency"
    ]
  },
  {
    "number": "3.1505",
    "name": "execution time",
    "definitions": [
      {
        "text": "time which elapses between task submission and completion",
        "reference": "ISO/IEC 14756:1999 Information technology — Measurement and rating of performance of computer-based software systems, 4.7",
        "textJa": "タスクの送信から完了までに経過した時間"
      },
      {
        "text": "amount of elapsed time or processor time used in executing a computer program",
        "textJa": "コンピュータプログラムの実行に費やされた経過時間またはプロセッサ時間"
      }
    ],
    "confer": [
      "run time"
    ],
    "note": "Processor time is usually less than elapsed time because the processor can be idle (for example, awaiting needed computer resources) or employed on other tasks during the execution of a program.",
    "noteJa": "プロセッサー時間は、プログラムの実行中にプロセッサーがアイドル状態になったり (必要なコンピューター・リソースを待っているなど)、他のタスクに使用されたりする可能性があるため、通常は経過時間よりも短くなります。"
  },
  {
    "number": "3.1506",
    "name": "execution trace",
    "definitions": [
      {
        "text": "record of the sequence of instructions executed during the execution of a computer program",
        "textJa": "コンピュータープログラムの実行中に実行される一連の命令の記録"
      }
    ],
    "alias": [
      "code trace",
      "control flow trace"
    ],
    "confer": [
      "retrospective trace",
      "subroutine trace",
      "symbolic trace",
      "variable trace"
    ],
    "note": "often takes the form of a list of code labels encountered as the program executes",
    "noteJa": "多くの場合、プログラムの実行時に発生するコード ラベルのリストの形式になります。"
  },
  {
    "number": "3.1507",
    "name": "executor",
    "definitions": [
      {
        "text": "programming artifacts that supply the behavior of a component or a component home",
        "reference": "ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.1",
        "textJa": "コンポーネントまたはコンポーネントホームの動作を提供するプログラミング成果物"
      }
    ]
  },
  {
    "number": "3.1508",
    "name": "existence constraint",
    "definitions": [
      {
        "text": "constraint stating that an instance of one entity cannot exist unless an instance of another related entity also exists",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.59",
        "textJa": "あるエンティティのインスタンスは、別の関連エンティティのインスタンスも存在しない限り存在できないことを示す制約"
      }
    ],
    "note": "[key style]",
    "noteJa": "【キースタイル】"
  },
  {
    "number": "3.1509",
    "name": "existence dependency",
    "definitions": [
      {
        "text": "constraint between two related entities indicating that no instance of one can exist without being related to an instance of the other",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.60",
        "textJa": "2 つの関連するエンティティ間の制約。一方のインスタンスは他方のインスタンスに関連付けられずに存在できないことを示します。"
      }
    ],
    "note": "The following association types represent existence dependencies: identifying relationships, categorization structures and mandatory nonidentifying relationships. [key style]",
    "noteJa": "次の関連付けタイプは存在依存関係を表します: 識別関係、分類構造、および必須の非識別関係。 【キースタイル】"
  },
  {
    "number": "3.1510",
    "name": "existing software",
    "definitions": [
      {
        "text": "software that is already developed and available; is usable either \"as is\" or with modifications; and which is provided by the supplier, acquirer, or a third party",
        "textJa": "すでに開発され利用可能なソフトウェア。 「そのまま」または変更して使用できます。サプライヤー、取得者、または第三者によって提供されるもの"
      }
    ]
  },
  {
    "number": "3.1511",
    "name": "Exit",
    "definitions": [
      {
        "text": "point in a software module at which execution of the module can terminate2. data movement that moves a data group from a functional process across the boundary to the functional user that requires it",
        "reference": "ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.9",
        "textJa": "モジュールの実行を終了できるソフトウェア モジュール内のポイント2.データ移動: データ グループを機能プロセスから境界を越えて、それを必要とする機能ユーザーに移動すること"
      }
    ],
    "alias": [
      "exit type"
    ],
    "confer": [
      "entry point",
      "return"
    ],
    "note": "An exit is considered to account for certain associated data manipulations (e.g. formatting and routing associated with the data to be exited).",
    "noteJa": "終了は、特定の関連するデータ操作 (終了するデータに関連するフォーマットやルーティングなど) を考慮すると考えられます。"
  },
  {
    "number": "3.1512",
    "name": "exit criteria",
    "definitions": [
      {
        "text": "states of being that must be present before an effort can end successfully2. review or audit elements that must be assessed, completed, and action items closed before successful completion of the technical review or audit can be declared",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.1",
        "textJa": "努力が正常に終了する前に存在しなければならない存在の状態2.技術的なレビューまたは監査の正常な完了を宣言する前に評価、完了し、アクションアイテムを終了する必要があるレビューまたは監査の要素"
      }
    ],
    "confer": [
      "entry criteria"
    ]
  },
  {
    "number": "3.1513",
    "name": "exit point",
    "definitions": [
      {
        "text": "last executable statement within a test item",
        "reference": "ISO/IEC/IEEE 29119-4:2015 Software and systems engineering — Software testing — Part 4: Test techniques, 4.20",
        "textJa": "テスト項目内の最後の実行可能ステートメント"
      }
    ],
    "note": "An exit point is a terminal point of a path through a test item, being an executable statement within the test item which either terminates the test item, or returns control to an external process. This is most commonly the last executable statement within the test item.",
    "noteJa": "出口点はテスト項目を通るパスの終端点であり、テスト項目を終了するか外部プロセスに制御を返すテスト項目内の実行可能ステートメントです。最も一般的には、これはテスト項目内の最後の実行可能ステートメントです。"
  },
  {
    "number": "3.1514",
    "name": "exit routine",
    "definitions": [
      {
        "text": "routine that receives control when a specified event, such as an error, occurs",
        "textJa": "エラーなどの指定されたイベントが発生したときに制御を受け取るルーチン"
      }
    ]
  },
  {
    "number": "3.1515",
    "name": "expandability",
    "definitions": [
      {
        "text": "degree of effort required to improve or modify software functions' efficiency",
        "textJa": "ソフトウェア機能の効率を改善または変更するために必要な労力の程度"
      }
    ],
    "confer": [
      "extendability"
    ]
  },
  {
    "number": "3.1516",
    "name": "expected monetary value (EMV) Analysis",
    "definitions": [
      {
        "text": "a statistical technique that calculates the average outcome when the future includes scenarios that may or may not happen. A common use of this technique is within decision tree analysis.",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "将来に起こるか起こらないかのシナリオが含まれる場合に、平均的な結果を計算する統計手法。この手法の一般的な用途は、決定木分析内です。"
      }
    ]
  },
  {
    "number": "3.1517",
    "name": "expected results",
    "definitions": [
      {
        "text": "observable predicted behavior of the test item under specified conditions based on its specification or another source",
        "reference": "ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.15",
        "textJa": "仕様または別のソースに基づいた、指定された条件下でのテスト項目の観察可能な予測動作"
      }
    ]
  },
  {
    "number": "3.1518",
    "name": "expected value",
    "definitions": [
      {
        "text": "estimated outcome that is as likely to be exceeded as not",
        "textJa": "超過する可能性が高いと予想される結果、超過しない可能性が高い"
      }
    ],
    "alias": [
      "50-50 estimat"
    ],
    "note": "the mean of the probability distribution, the point where the cumulative probability function equals 0.5",
    "noteJa": "確率分布の平均、累積確率関数が 0.5 に等しくなる点"
  },
  {
    "number": "3.1519",
    "name": "expected value of perfect information",
    "definitions": [
      {
        "text": "in decision-tree analysis, the difference between the expected value of the decision tree and the value of the decision tree if all random outcomes were known in advance",
        "textJa": "決定木分析において、決定木の期待値と、すべてのランダムな結果が事前にわかっていた場合の決定木の値との差。"
      }
    ],
    "note": "helps the decision maker determine whether it is justifiable to invest in activities that would reduce uncertainties",
    "noteJa": "意思決定者が不確実性を軽減する活動に投資することが正当かどうかを判断するのに役立ちます。"
  },
  {
    "number": "3.1520",
    "name": "expert judgment",
    "definitions": [
      {
        "text": "judgment provided based upon expertise in an application area, knowledge area, discipline, industry, etc. as appropriate for the activity being performed. Such expertise may be provided by any group or person with specialized education, knowledge, skill, experience, or training",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "実行される活動に適切な、応用分野、知識分野、分野、業界などの専門知識に基づいて提供される判断。このような専門知識は、専門的な教育、知識、スキル、経験、またはトレーニングを受けたグループまたは個人によって提供される場合があります。"
      }
    ]
  },
  {
    "number": "3.1521",
    "name": "expert system (ES)",
    "definitions": [
      {
        "text": "computer system that provides for expertly solving problems in a given field or application area by drawing inferences from a knowledge base developed from human expertise",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "人間の専門知識から開発された知識ベースから推論を導き出すことによって、特定の分野または応用分野の問題を専門的に解決できるコンピューター システム"
      }
    ],
    "note": "Some expert systems are able to improve their knowledge base and develop new inference rules based on their experience with previous problems.",
    "noteJa": "一部のエキスパート システムは、知識ベースを改善し、以前の問題の経験に基づいて新しい推論ルールを開発できます。"
  },
  {
    "number": "3.1522",
    "name": "explanatory report",
    "definitions": [
      {
        "text": "document attached to a product for providing complementary information in order to assist understanding and to avoid inappropriate usage of the product",
        "reference": "ISO/IEC 29155-3:2015 Systems and software engineering — Information technology project performance benchmarking framework — Part 3: Guidance for reporting",
        "textJa": "製品の理解を助け、不適切な使用を避けるために補足情報を提供するために製品に添付される文書"
      }
    ],
    "note": "Examples of an explanatory report are data element definitions, data demographics, data source information which are attached to benchmarking repositories or benchmarks. Examples of the product are benchmarking repository, benchmark(s), or software tools to support benchmarking activities.",
    "noteJa": "説明レポートの例としては、データ要素定義、データ人口統計、ベンチマーク リポジトリまたはベンチマークに添付されるデータ ソース情報などがあります。製品の例としては、ベンチマーク リポジトリ、ベンチマーク、ベンチマーク活動をサポートするソフトウェア ツールなどがあります。"
  },
  {
    "number": "3.1523",
    "name": "exploratory testing",
    "definitions": [
      {
        "text": "type of unscripted experience-based testing in which the tester spontaneously designs and executes tests based on the tester's existing relevant knowledge, prior exploration of the test item (including the results of previous tests), and heuristic \"rules of thumb\" regarding common software behaviors and types of failure",
        "reference": "ISO/IEC/IEEE 29119-2:2013 Software and systems engineering — Software testing — Part 2: Test processes, 4.9",
        "textJa": "テスターが既存の関連知識、テスト項目の事前調査 (以前のテストの結果を含む)、および一般的なソフトウェアの動作と障害の種類に関するヒューリスティックな「経験則」に基づいて、テスターが自発的にテストを設計および実行する、台本なしの経験ベースのテストのタイプ。"
      }
    ],
    "note": "Exploratory testing hunts for hidden properties (including hidden behaviors) that, while quite possibly benign by themselves, could interfere with other properties of the software under test, and so constitute a risk that the software will fail.",
    "noteJa": "探索的テストでは、それ自体は無害である可能性が非常に高いものの、テスト対象のソフトウェアの他のプロパティに干渉する可能性があり、ソフトウェアが失敗するリスクとなる隠れたプロパティ (隠れた動作を含む) を探します。"
  },
  {
    "number": "3.1524",
    "name": "export process",
    "definitions": [
      {
        "text": "process of generating a transfer file from a source environment",
        "reference": "ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.1",
        "textJa": "ソース環境から転送ファイルを生成するプロセス"
      }
    ]
  },
  {
    "number": "3.1525",
    "name": "exporter",
    "definitions": [
      {
        "text": "agent of the export process",
        "reference": "ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.1",
        "textJa": "輸出手続きの代理人"
      }
    ]
  },
  {
    "number": "3.1526",
    "name": "extend",
    "definitions": [
      {
        "text": "in UML, a relationship from an extending use case to a base use case, specifying how the behavior defined for the extending use case can be optionally inserted into the behavior defined for the base use case",
        "textJa": "UML において、拡張ユース ケースから基本ユース ケースへの関係。拡張ユース ケースに対して定義された動作を、基本ユース ケースに対して定義された動作にオプションで挿入する方法を指定します。"
      }
    ]
  },
  {
    "number": "3.1527",
    "name": "extendability",
    "definitions": [
      {
        "text": "ease with which a system or component can be modified to increase its storage or functional capacity",
        "textJa": "システムまたはコンポーネントを変更してストレージまたは機能容量を増やすことが容易になること"
      }
    ],
    "alias": [
      "extensibility"
    ],
    "confer": [
      "expandability",
      "flexibility",
      "maintainability"
    ]
  },
  {
    "number": "3.1528",
    "name": "extended component",
    "definitions": [
      {
        "text": "component that offers any type of port",
        "reference": "ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.1",
        "textJa": "任意のタイプのポートを提供するコンポーネント"
      }
    ]
  },
  {
    "number": "3.1529",
    "name": "extended element",
    "definitions": [
      {
        "text": "element within a tag that provides additional information beyond that documented explicitly in the standard",
        "textJa": "標準で明示的に文書化されているものを超える追加情報を提供するタグ内の要素"
      }
    ]
  },
  {
    "number": "3.1530",
    "name": "extended entry table",
    "definitions": [
      {
        "text": "decision table where the conditions and actions are generally described but are incomplete",
        "reference": "ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.15",
        "textJa": "条件とアクションが一般的に説明されているが不完全な意思決定表"
      }
    ],
    "note": "The specifications are completed by the values specified in the rules",
    "noteJa": "仕様はルールで指定された値によって完成します"
  },
  {
    "number": "3.1531",
    "name": "extended process set",
    "definitions": [
      {
        "text": "set of processes specific to a maturity level higher than the basic maturity level that ensures the achievement of the relevant process profile",
        "reference": "ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.3.5",
        "textJa": "関連するプロセスプロファイルの達成を保証する、基本的な成熟度レベルよりも高い成熟度レベルに固有の一連のプロセス"
      }
    ]
  },
  {
    "number": "3.1532",
    "name": "extensible markup language (XML)",
    "definitions": [
      {
        "text": "license-free and platform-independent markup language that carries rules for generating text formats tha contain structured data",
        "reference": "ISO/IEC 19770-5:2015 Information technology — IT asset management — Part 5: Overview and vocabulary, 3.15",
        "textJa": "構造化データを含むテキスト形式を生成するためのルールを備えた、ライセンス不要でプラットフォームに依存しないマークアップ言語"
      }
    ]
  },
  {
    "number": "3.1533",
    "name": "extension of a type",
    "definitions": [
      {
        "text": "set of entities that satisfy the type at any particular time",
        "reference": "ISO/IEC 19500-1:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 1: Interfaces, 5.3.4",
        "textJa": "特定の時点でタイプを満たすエンティティのセット"
      }
    ]
  },
  {
    "number": "3.1534",
    "name": "extensional set",
    "definitions": [
      {
        "text": "set containing the currently existing instances of a class",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.61",
        "textJa": "クラスの現在存在するインスタンスを含むセット"
      }
    ],
    "alias": [
      "current extent"
    ],
    "note": "The instances in the extensional set correspond to the database and data modeling notion of instance.",
    "noteJa": "拡張セット内のインスタンスは、データベースおよびデータ モデリングのインスタンスの概念に対応します。"
  },
  {
    "number": "3.1535",
    "name": "external",
    "definitions": [
      {
        "text": "input information source or output information destination that is outside the scope of the project life cycle.",
        "textJa": "プロジェクトのライフサイクルの範囲外にある入力情報のソースまたは出力情報の宛先。"
      }
    ],
    "confer": [
      "invocation",
      "iteration",
      "mapping"
    ]
  },
  {
    "number": "3.1536",
    "name": "external attribute",
    "definitions": [
      {
        "text": "measurable property of an entity which can only be derived with respect to how it relates to its environment",
        "textJa": "環境との関係に関してのみ導き出すことができる、実体の測定可能な特性"
      }
    ],
    "note": "External attributes are those that relate to requirements (external properties of the software). External attributes can only be derived from the operational behavior of the system of which it is a part.",
    "noteJa": "外部属性は、要件 (ソフトウェアの外部プロパティ) に関連する属性です。外部属性は、それが一部であるシステムの動作動作からのみ導き出すことができます。"
  },
  {
    "number": "3.1537",
    "name": "external dependency",
    "definitions": [
      {
        "text": "a relationship between project activities and non-project activities",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクト活動と非プロジェクト活動との関係"
      }
    ]
  },
  {
    "number": "3.1538",
    "name": "external event",
    "definitions": [
      {
        "text": "event from an external object, typically an interrupt from an external I/O device",
        "textJa": "外部オブジェクトからのイベント、通常は外部 I/O デバイスからの割り込み"
      }
    ]
  },
  {
    "number": "3.1539",
    "name": "external I/O device",
    "definitions": [
      {
        "text": "hardware input and/or output device that is outside the software system and part of the external environment",
        "textJa": "ソフトウェア システムの外部および外部環境の一部にあるハードウェア入力および/または出力デバイス"
      }
    ]
  },
  {
    "number": "3.1540",
    "name": "external input (EI)",
    "definitions": [
      {
        "text": "a unique function recognized by the user in which data and/or control information from outside the application is entered into the application",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "アプリケーションの外部からデータや制御情報をアプリケーションに入力する、ユーザーによって認識される独自の機能"
      },
      {
        "text": "elementary process that processes data or control information sent from outside the boundary",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.27",
        "textJa": "境界外から送信されたデータや制御情報を処理する基本プロセス"
      }
    ],
    "confer": [
      "external inquiry",
      "external output"
    ],
    "note": "The primary intent of an EI is to maintain one or more ILFs and/or to alter the behavior of the system. An external input is a type of base functional component.",
    "noteJa": "EI の主な目的は、1 つ以上の ILF を維持すること、および/またはシステムの動作を変更することです。外部入力は、基本機能コンポーネントの一種です。"
  },
  {
    "number": "3.1541",
    "name": "external inquiry (EQ)",
    "definitions": [
      {
        "text": "a unique input/output combination recognized by the user in which the application distributes an output fully determined in size without further data processing, as a result of the input",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "ユーザーによって認識される固有の入力/出力の組み合わせ。アプリケーションは、入力の結果として、それ以上のデータ処理を行わずに、サイズが完全に決定された出力を配布します。"
      },
      {
        "text": "elementary process that sends data or control information outside the boundary",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.28",
        "textJa": "境界の外にデータまたは制御情報を送信する基本プロセス"
      }
    ],
    "confer": [
      "external input",
      "external output"
    ],
    "note": "The primary intent of an external inquiry is to present information to a user through the retrieval of data or control information from an ILF or EIF. The processing logic contains no mathematical formulas or calculations, and creates no derived data. No ILF is maintained during the processing, nor is the behavior of the system altered. An external inquiry is a type of base functional component.",
    "noteJa": "外部問い合わせの主な目的は、ILF または EIF からのデータまたは制御情報の取得を通じてユーザーに情報を提示することです。処理ロジックには数式や計算は含まれず、派生データは作成されません。処理中に ILF は維持されず、システムの動作も変更されません。外部問い合わせは、基本機能コンポーネントの一種です。"
  },
  {
    "number": "3.1542",
    "name": "external interface file (EIF)",
    "definitions": [
      {
        "text": "a logical group of permanent data seen from the perspective of the user that an application uses but that a different application maintains",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "ユーザーの観点から見た、アプリケーションが使用するが別のア​​プリケーションが維持する永続データの論理グループ"
      },
      {
        "text": "user recognizable group of logically related data or control information, which is referenced by the application being measured, but which is maintained within the boundary of another application",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.29",
        "textJa": "ユーザーが認識できる、論理的に関連したデータまたは制御情報のグループ。測定対象のアプリケーションによって参照されますが、別のアプリケーションの境界内に維持されます。"
      }
    ],
    "confer": [
      "internal logical file"
    ],
    "note": "The primary intent of an EIF is to hold data referenced through one or more elementary processes within the boundary of the application counted. This means an EIF counted for an application must be in an ILF in another application. An external interface file is a type of base functional component.",
    "noteJa": "EIF の主な目的は、アプリケーションの境界内で 1 つ以上の基本プロセスを通じて参照されるデータをカウントしたまま保持することです。これは、アプリケーションに対してカウントされる EIF は、別のアプリケーションの ILF 内に存在する必要があることを意味します。外部インターフェイス ファイルは、基本機能コンポーネントの一種です。"
  },
  {
    "number": "3.1543",
    "name": "external interface requirement",
    "definitions": [
      {
        "text": "system or software requirement that specifies a hardware, software, or database element with which a system/software system or system/software component must interface, or that sets forth constraints on formats, timing, or other factors caused by such an interface",
        "textJa": "システム/ソフトウェア システムまたはシステム/ソフトウェア コンポーネントがインターフェースする必要があるハードウェア、ソフトウェア、またはデータベース要素を指定する、またはそのようなインターフェースによって生じるフォーマット、タイミング、またはその他の要因に関する制約を規定する、システムまたはソフトウェアの要件。"
      }
    ]
  },
  {
    "number": "3.1544",
    "name": "external measure",
    "definitions": [
      {
        "text": "indirect measure of a product derived from measures of the behavior of the system of which it is a part",
        "textJa": "製品がその一部であるシステムの動作の測定値から導出される、製品の間接的な測定値"
      }
    ],
    "note": "The number of failures found during testing is an external measure of the number of faults in the program, because the number of failures is counted during the operation of a computer system running the program. External measures can be used to evaluate quality attributes closer to the ultimate objectives of the design.",
    "noteJa": "障害の数は、プログラムを実行しているコンピュータ システムの動作中にカウントされるため、テスト中に見つかった障害の数は、プログラム内の障害の数の外部測定値となります。外部測定を使用して、設計の最終目標に近い品質特性を評価できます。"
  },
  {
    "number": "3.1545",
    "name": "external measure of software quality",
    "definitions": [
      {
        "text": "measure of the degree to which a software product enables the behavior of a system under specified conditions to satisfy stated and implied needs for the system, including the software to be used under specified conditions",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.3.5",
        "textJa": "ソフトウェア製品が、指定された条件下でシステムの動作を可能にし、指定された条件下で使用されるソフトウェアを含む、システムの明示的および黙示的なニーズを満たす程度を示す尺度"
      }
    ],
    "confer": [
      "external software quality",
      "internal measure of software quality"
    ],
    "example": "The number of failures found during testing is an external measure of software quality related to the internal measure, the number of faults present in the computer system. The two measures are not necessarily identical since testing might not find all faults, and a fault can give rise to apparently different failures in different circumstances.",
    "note": "Attributes of the behavior can be verified or validated by executing the software product during testing and operation.",
    "exampleJa": "テスト中に見つかった障害の数は、コンピュータ システム内に存在する障害の数である内部尺度に関連するソフトウェア品質の外部尺度です。テストではすべての障害が見つかるとは限らず、障害が異なる状況で明らかに異なる障害を引き起こす可能性があるため、2 つの対策は必ずしも同一であるとは限りません。",
    "noteJa": "動作の属性は、テストおよび運用中にソフトウェア製品を実行することによって検証または検証できます。"
  },
  {
    "number": "3.1546",
    "name": "external measure of system or software quality",
    "definitions": [
      {
        "text": "measure of the degree to which a system or software product enables the behavior to satisfy stated and implied needs for the system, including the software to be used under specified conditions",
        "reference": "ISO/IEC 25000:2014 Systems and software Engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Guide to SQuaRE, 4.11",
        "textJa": "システムまたはソフトウェア製品が、指定された条件下で使用されるソフトウェアを含む、システムの明示的および暗黙的なニーズを満たす動作を可能にする程度の尺度"
      }
    ],
    "example": "The number of failures found during testing is an external measure of software quality related to the number of faults present in the computer system. The two measures are not necessarily identical since testing does not find all faults, and a fault can give rise to apparently different failures in different circumstances.",
    "note": "Attributes of the behavior can be verified or validated by executing the system or software product during testing and operation.",
    "exampleJa": "テスト中に見つかった障害の数は、コンピュータ システム内に存在する障害の数に関連するソフトウェア品質の外部尺度です。テストではすべての障害が見つかるわけではなく、障害が異なる状況で明らかに異なる障害を引き起こす可能性があるため、2 つの対策は必ずしも同一であるとは限りません。",
    "noteJa": "動作の属性は、テストおよび運用中にシステムまたはソフトウェア製品を実行することによって検証または検証できます。"
  },
  {
    "number": "3.1547",
    "name": "external output (EO)",
    "definitions": [
      {
        "text": "a unique output recognized by the user which crosses the application boundary",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "アプリケーションの境界を越えてユーザーに認識される固有の出力"
      },
      {
        "text": "elementary process that sends data or control information outside the application's boundary and includes additional processing logic beyond that of an external inquiry",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.30",
        "textJa": "アプリケーションの境界の外にデータまたは制御情報を送信し、外部問い合わせを超える追加の処理ロジックを含む基本プロセス"
      }
    ],
    "confer": [
      "external input",
      "external inquiry"
    ],
    "note": "The primary intent of an external output is to present information to a user through processing logic other than, or in addition to, the retrieval of data or control information. The processing logic must contain at least one mathematical formula or calculation, or create derived data. An external output can also maintain one or more ILFs and/or alter the behavior of the system. An external output is a type of base functional component.",
    "noteJa": "外部出力の主な目的は、データまたは制御情報の取得以外の、またはそれに加えて、処理ロジックを通じてユーザーに情報を提示することです。処理ロジックには、少なくとも 1 つの数式または計算が含まれるか、派生データを作成する必要があります。外部出力は、1 つ以上の ILF を維持したり、システムの動作を変更したりすることもできます。外部出力は、基本機能コンポーネントの一種です。"
  },
  {
    "number": "3.1548",
    "name": "external quality",
    "definitions": [
      {
        "text": "extent to which a product satisfies stated and implied needs when used under specified conditions",
        "textJa": "指定された条件下で使用された場合に、製品が明示的および黙示的なニーズをどの程度満たすか"
      }
    ]
  },
  {
    "number": "3.1549",
    "name": "external variability",
    "definitions": [
      {
        "text": "variability that is visible to customers",
        "reference": "ISO/IEC 26555:2015 Software and systems engineering — Tools and methods for product line technical management, 3.4",
        "textJa": "顧客に見える変動性"
      }
    ]
  },
  {
    "number": "3.1550",
    "name": "extranet",
    "definitions": [
      {
        "text": "set of intranets connected for specific objectives, spanning multiple organizations",
        "textJa": "複数の組織にまたがる、特定の目的のために接続された一連のイントラネット"
      }
    ]
  },
  {
    "number": "3.1551",
    "name": "F-profile",
    "definitions": [
      {
        "text": "Format and presentation profile",
        "reference": "ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview",
        "textJa": "フォーマットとプレゼンテーションプロファイル"
      }
    ]
  },
  {
    "number": "3.1552",
    "name": "facet",
    "definitions": [
      {
        "text": "operation interface in which a computational component plays a server role",
        "reference": "ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.16",
        "textJa": "計算コンポーネントがサーバーの役割を果たす操作インターフェース"
      },
      {
        "text": "distinct named interface provided by the component for client interaction",
        "reference": "ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.1",
        "textJa": "クライアントとの対話のためにコンポーネントによって提供される個別の名前付きインターフェース"
      }
    ],
    "note": "the primary vehicle through which a component exposes its functional application behavior to clients during normal execution",
    "noteJa": "通常の実行中にコンポーネントがその機能的なアプリケーションの動作をクライアントに公開するための主要な手段"
  },
  {
    "number": "3.1553",
    "name": "faceted search",
    "definitions": [
      {
        "text": "progressive search which allows users to narrow the results by selecting values for one or more attributes",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.8",
        "textJa": "ユーザーが 1 つ以上の属性の値を選択して結果を絞り込むことができるプログレッシブ検索"
      }
    ]
  },
  {
    "number": "3.1554",
    "name": "facilitated workshops",
    "definitions": [
      {
        "text": "an elicitation technique using focused sessions that bring key cross-functional stakeholders together to define product requirements",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "製品要件を定義するために主要な部門横断的な関係者を集める集中的なセッションを使用した引き出し手法"
      }
    ]
  },
  {
    "number": "3.1555",
    "name": "facility",
    "definitions": [
      {
        "text": "physical means or equipment for facilitating the performance of an action",
        "reference": "ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes, 4.13; ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.21; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.20",
        "textJa": "行為の実行を容易にするための物理的な手段または装置"
      }
    ],
    "example": "buildings, instruments, tools",
    "exampleJa": "建物、楽器、道具"
  },
  {
    "number": "3.1556",
    "name": "factoring",
    "definitions": [
      {
        "text": "process of decomposing a system into a hierarchy of modules",
        "textJa": "システムをモジュールの階層に分解するプロセス"
      },
      {
        "text": "process of removing a function from a module and placing it into a module of its own",
        "textJa": "モジュールから関数を削除し、それを独自のモジュールに配置するプロセス"
      }
    ],
    "confer": [
      "modular decomposition"
    ]
  },
  {
    "number": "3.1557",
    "name": "factory",
    "definitions": [
      {
        "text": "object that, in response to an interaction initiated by its environment, creates a new object and returns a reference to it to the environment",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.25",
        "textJa": "環境によって開始された対話に応答して、新しいオブジェクトを作成し、そのオブジェクトへの参照を環境に返すオブジェクト"
      }
    ]
  },
  {
    "number": "3.1558",
    "name": "fail safe",
    "definitions": [
      {
        "text": "pertaining to a system or component that automatically places itself in a safe operating mode in the event of a failure",
        "textJa": "障害が発生した場合に自動的に安全な動作モードに移行するシステムまたはコンポーネントに関するもの"
      }
    ],
    "confer": [
      "fail soft",
      "fault secure",
      "fault tolerance"
    ],
    "example": "a traffic light that reverts to blinking red in all directions when normal operation fails",
    "exampleJa": "通常の動作が失敗すると、全方向に赤の点滅に戻る信号機"
  },
  {
    "number": "3.1559",
    "name": "fail soft",
    "definitions": [
      {
        "text": "pertaining to a system or component that continues to provide partial operational capability in the event of certain failures",
        "textJa": "特定の障害が発生した場合でも部分的な運用機能を提供し続けるシステムまたはコンポーネントに関するもの"
      }
    ],
    "confer": [
      "fail safe",
      "fault secure",
      "fault tolerance"
    ],
    "example": "a traffic light that continues to alternate between red and green if the yellow light fails",
    "exampleJa": "黄色信号が消えた場合、赤と緑が交互に切り替わり続ける信号機"
  },
  {
    "number": "3.1560",
    "name": "failure",
    "definitions": [
      {
        "text": "termination of the ability of a system to perform a required function or its inability to perform within previously specified limits; an externally visible deviation from the system's specification",
        "reference": "ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.4.8",
        "textJa": "必要な機能を実行するシステムの能力の終了、または以前に指定された制限内でシステムが実行できなくなること。システムの仕様からの外部から見える逸脱"
      },
      {
        "text": "violation of a contract",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.6.1",
        "textJa": "契約違反"
      }
    ],
    "note": "A failure can be produced when a fault is encountered.",
    "noteJa": "障害が発生すると、障害が発生する可能性があります。"
  },
  {
    "number": "3.1561",
    "name": "failure mode",
    "definitions": [
      {
        "text": "physical or functional manifestation of a failure",
        "textJa": "障害の物理的または機能的兆候"
      }
    ],
    "example": "a system in failure mode is characterized by slow operation, incorrect outputs, or complete termination of execution",
    "exampleJa": "障害モードにあるシステムは、動作の遅さ、誤った出力、または実行の完全な終了によって特徴付けられます。"
  },
  {
    "number": "3.1562",
    "name": "failure mode and effect analysis (FMEA)",
    "definitions": [
      {
        "text": "an analytical procedure in which each potential failure mode in every component of a product is analyzed to determine its effect on the reliability of that component and, by itself or in combination with other possible failure modes, on the reliability of the product or system and on the required function of the component; or the examination of a product (at the system and/or lower levels) for all ways that a failure may occur. For each potential failure, an estimate is made of its effect on the total system and of its impact. In addition, a review is undertaken of the action planned to minimize the probability of failure and to minimize its effects",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "製品のすべてのコンポーネントの潜在的な各故障モードを分析して、そのコンポーネントの信頼性、および単独で、または他の考えられる故障モードと組み合わせて、製品またはシステムの信頼性、およびコンポーネントの必要な機能に及ぼす影響を判断する分析手順。または、障害が発生する可能性のあるあらゆる方法について製品を (システムおよび/または下位レベルで) 検査します。潜在的な障害ごとに、システム全体への影響とその影響が推定されます。さらに、失敗の可能性を最小限に抑え、その影響を最小限に抑えるために計画されたアクションのレビューが行われます。"
      }
    ]
  },
  {
    "number": "3.1563",
    "name": "failure rate",
    "definitions": [
      {
        "text": "ratio of the number of failures of a given category to a given unit of measure",
        "textJa": "指定された測定単位に対する、指定されたカテゴリの故障数の比率"
      }
    ],
    "alias": [
      "failure ratio"
    ],
    "example": "failures per unit of time, failures per number of transactions, failures per number of computer runs",
    "exampleJa": "単位時間あたりの失敗数、トランザクション数あたりの失敗数、コンピュータ実行数あたりの失敗数"
  },
  {
    "number": "3.1564",
    "name": "failure transparency",
    "definitions": [
      {
        "text": "distribution transparency which masks, from an object, the failure and possible recovery of other objects (or itself), to enable fault tolerance",
        "reference": "ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 4.4.1.2",
        "textJa": "フォールト トレランスを可能にするために、他のオブジェクト (またはそれ自体) の障害と回復の可能性をオブジェクトからマスクする分散透過性"
      }
    ]
  },
  {
    "number": "3.1565",
    "name": "fallback plan",
    "definitions": [
      {
        "text": "an alternative set of actions and tasks available in the event the primary plan must be abandoned because of issues, risks or other causes",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "問題、リスク、またはその他の原因により主計画を放棄しなければならない場合に利用できる、代替のアクションとタスクのセット"
      }
    ]
  },
  {
    "number": "3.1566",
    "name": "families of programs",
    "definitions": [
      {
        "text": "sets of programs that are related by sharing significant portions of requirements, design, and code",
        "textJa": "要件、設計、およびコードの重要な部分を共有することで関連付けられた一連のプログラム"
      }
    ],
    "note": "a program family might include one version of a program developed for an English-speaking audience, a second version of a program developed for a German-speaking audience, and a third version for a Japanese-speaking audien",
    "noteJa": "プログラム ファミリには、英語を話す視聴者向けに開発されたプログラムの 1 つのバージョン、ドイツ語を話す視聴者向けに開発されたプログラムの 2 つ目のバージョン、および日本語を話す視聴者向けに開発された 3 つ目のバージョンが含まれる場合があります。"
  },
  {
    "number": "3.1567",
    "name": "fast tracking",
    "definitions": [
      {
        "text": "a schedule compression technique in which activities or phases normally done in sequence are performed in parallel for at least a portion of their duration",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "通常は順番に実行されるアクティビティまたはフェーズを、その期間の少なくとも一部で並行して実行するスケジュール圧縮手法"
      }
    ],
    "confer": [
      "schedule compression",
      "crashing"
    ]
  },
  {
    "number": "3.1568",
    "name": "fatal error",
    "definitions": [
      {
        "text": "error that results in the complete inability of a system or component to function",
        "textJa": "システムまたはコンポーネントが完全に機能しなくなるエラー"
      }
    ]
  },
  {
    "number": "3.1569",
    "name": "fault",
    "definitions": [
      {
        "text": "manifestation of an error in software",
        "textJa": "ソフトウェアのエラーの兆候"
      },
      {
        "text": "incorrect step, process, or data definition in a computer program",
        "reference": "ISO/IEC 25040:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — Evaluation process, 4.27",
        "textJa": "コンピューター プログラム内の間違ったステップ、プロセス、またはデータ定義"
      },
      {
        "text": "situation that can cause errors to occur in an object",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.6.3",
        "textJa": "オブジェクトでエラーが発生する可能性がある状況"
      },
      {
        "text": "defect in a hardware device or component5. defect in a system or a representation of a system that if executed/activated could potentially result in an error",
        "reference": "ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.4.5",
        "textJa": "ハードウェアデバイスまたはコンポーネントの欠陥5.システムまたはシステムの表現に欠陥があり、実行/アクティブ化するとエラーが発生する可能性があります。"
      }
    ],
    "alias": [
      "bug"
    ],
    "note": "A fault, if encountered, can cause a failure. Faults can occur in specifications when they are not correct.",
    "noteJa": "障害が発生すると、障害が発生する可能性があります。仕様が正しくない場合、欠陥が発生する可能性があります。"
  },
  {
    "number": "3.1570",
    "name": "fault dictionary",
    "definitions": [
      {
        "text": "a list of faults in a system or component, and the tests that have been designed to detect them",
        "textJa": "システムまたはコンポーネントの障害のリスト、およびそれらを検出するために設計されたテスト"
      }
    ]
  },
  {
    "number": "3.1571",
    "name": "fault isolation",
    "definitions": [
      {
        "text": "ability of a subsystem to prevent a fault within the subsystem from causing consequential faults in other subsystems",
        "textJa": "サブシステム内の障害が他のサブシステムに重大な障害を引き起こすことを防ぐサブシステムの能力"
      }
    ]
  },
  {
    "number": "3.1572",
    "name": "fault masking",
    "definitions": [
      {
        "text": "condition in which one fault prevents the detection of another",
        "textJa": "ある障害によって別の障害が検出されなくなる状態"
      }
    ]
  },
  {
    "number": "3.1573",
    "name": "fault secure",
    "definitions": [
      {
        "text": "pertaining to a system or component in which no failures are produced from a prescribed set of faults",
        "textJa": "所定の一連の障害によって障害が発生しないシステムまたはコンポーネントに関するもの"
      }
    ],
    "confer": [
      "fault tolerance",
      "fail safe",
      "fail soft"
    ]
  },
  {
    "number": "3.1574",
    "name": "fault tolerance",
    "definitions": [
      {
        "text": "degree to which a system, product or component operates as intended despite the presence of hardware or software faults",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.5.3",
        "textJa": "ハードウェアまたはソフトウェアの障害が存在するにもかかわらず、システム、製品、またはコンポーネントが意図したとおりに動作する程度"
      },
      {
        "text": "pertaining to the study of errors, faults, and failures, and of methods for enabling systems to continue normal operation in the presence of faults",
        "textJa": "エラー、障害、障害の研究、および障害が存在する場合でもシステムが通常の動作を継続できるようにする方法の研究に関係します。"
      }
    ],
    "confer": [
      "error tolerance",
      "fail safe",
      "fail soft",
      "fault secure",
      "robustness"
    ]
  },
  {
    "number": "3.1575",
    "name": "fault-tolerant",
    "definitions": [
      {
        "text": "pertaining to a system or component that is able to continue normal operation despite the presence of faults",
        "textJa": "障害が存在するにもかかわらず、通常の動作を継続できるシステムまたはコンポーネントに関するもの"
      }
    ]
  },
  {
    "number": "3.1576",
    "name": "FCA",
    "definitions": [
      {
        "text": "functional configuration audit",
        "textJa": "機能構成の監査"
      }
    ]
  },
  {
    "number": "3.1577",
    "name": "FD",
    "definitions": [
      {
        "text": "full deployment",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "完全な展開"
      }
    ]
  },
  {
    "number": "3.1578",
    "name": "FDC",
    "definitions": [
      {
        "text": "functional domain categorization",
        "reference": "ISO/IEC TR 14143-5:2004 Information technology — Software measurement — Functional size measurement — Part 5: Determination of functional domains for use with functional size measurement, 4",
        "textJa": "機能ドメインの分類"
      }
    ]
  },
  {
    "number": "3.1579",
    "name": "FDT",
    "definitions": [
      {
        "text": "formal description techniques",
        "reference": "ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview",
        "textJa": "形式的な記述テクニック"
      }
    ]
  },
  {
    "number": "3.1580",
    "name": "feasibility",
    "definitions": [
      {
        "text": "degree to which the requirements, design, or plans for a system or component can be implemented under existing constraints",
        "textJa": "システムまたはコンポーネントの要件、設計、または計画が既存の制約の下でどの程度実装できるか"
      }
    ]
  },
  {
    "number": "3.1581",
    "name": "feasibility study",
    "definitions": [
      {
        "text": "study to identify and analyze a problem and its potential solutions in order to determine their viability, costs, and benefits.",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "実行可能性、コスト、利点を判断するために、問題とその潜在的な解決策を特定および分析するための研究。"
      }
    ]
  },
  {
    "number": "3.1582",
    "name": "feature",
    "definitions": [
      {
        "text": "distinguishing characteristic of a system item",
        "textJa": "システムアイテムの際立った特徴"
      },
      {
        "text": "functional or non-functional distinguishing characteristic of a system, often an enhancement to an existing system",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.9; ISO/IEC/IEEE 26515: 2011 Systems and software engineering: Developing user documentation in an agile environment, 4.6",
        "textJa": "システムの機能的または非機能的な特徴。多くの場合、既存のシステムの拡張機能"
      },
      {
        "text": "abstract functional characteristic of a system of interest that end-users and other stakeholders can understand",
        "reference": "ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.14",
        "textJa": "エンドユーザーおよび他の利害関係者が理解できる、対象システムの抽象的な機能特性"
      }
    ]
  },
  {
    "number": "3.1583",
    "name": "feature branch",
    "definitions": [
      {
        "text": "branch created for developing a particular set of features",
        "textJa": "特定の機能セットを開発するために作成されたブランチ"
      }
    ],
    "note": "The branch is typically not released but is collapsed back at some point to its parent branch.",
    "noteJa": "通常、ブランチは解放されませんが、ある時点で親ブランチに折りたたまれます。"
  },
  {
    "number": "3.1584",
    "name": "feature freeze",
    "definitions": [
      {
        "text": "period during which no new features are added to a specific branch",
        "textJa": "特定のブランチに新機能が追加されない期間"
      }
    ],
    "note": "allows the branch to stabilize for a release.",
    "noteJa": "リリースに向けてブランチを安定させることができます。"
  },
  {
    "number": "3.1585",
    "name": "feature reference",
    "definitions": [
      {
        "text": "expression that unambiguously identifies a diagram feature in a diagram",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.48",
        "textJa": "図内の図の特徴を明確に識別する式"
      }
    ]
  },
  {
    "number": "3.1586",
    "name": "feature set",
    "definitions": [
      {
        "text": "collection of items which contain the test conditions of the test item to be tested which can be collected from risks, requirements, functions, models, etc.",
        "reference": "ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 1",
        "textJa": "リスク、要件、機能、モデルなどから収集できる、試験対象の試験項目の試験条件をまとめた項目。"
      },
      {
        "text": "logical subset of the test item(s) that could be treated independently of other feature sets in the subsequent test design activities",
        "reference": "ISO/IEC/IEEE 29119-2:2013 Software and systems engineering — Software testing — Part 2: Test processes, 4.10",
        "textJa": "後続のテスト設計アクティビティで他の機能セットとは独立して扱うことができるテスト項目の論理サブセット"
      }
    ]
  },
  {
    "number": "3.1587",
    "name": "fee",
    "definitions": [
      {
        "text": "profit as a component of compensation to a seller",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "売り手への報酬の一部としての利益"
      }
    ]
  },
  {
    "number": "3.1588",
    "name": "fetch",
    "definitions": [
      {
        "text": "to locate and load computer instructions or data from storage",
        "textJa": "コンピューターの命令やデータをストレージから見つけてロードするため"
      }
    ],
    "confer": [
      "move",
      "store"
    ]
  },
  {
    "number": "3.1589",
    "name": "FF",
    "definitions": [
      {
        "text": "finish-to-finish [A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "仕上げから仕上げまで [プロジェクト管理知識体系ガイド (PMBOK® ガイド) - 第 5 版]"
      }
    ]
  },
  {
    "number": "3.1590",
    "name": "FFP",
    "definitions": [
      {
        "text": "firm fixed price (contract)",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "確定固定価格（契約）"
      }
    ]
  },
  {
    "number": "3.1591",
    "name": "field of application (of a specification)",
    "definitions": [
      {
        "text": "properties the environment of the ODP system must have for the specification of that system to be used",
        "reference": "ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.1.2",
        "textJa": "ODP システムの仕様を使用するために ODP システムの環境に必要なプロパティ"
      }
    ]
  },
  {
    "number": "3.1592",
    "name": "field programmable gate array (FPGA)",
    "definitions": [
      {
        "text": "logic device designed to be programmed after it is acquired",
        "textJa": "取得後にプログラムできるように設計されたロジックデバイス"
      }
    ],
    "note": "often based on look-up table architecture",
    "noteJa": "多くの場合、ルックアップ テーブル アーキテクチャに基づいています"
  },
  {
    "number": "3.1593",
    "name": "fieldbus",
    "definitions": [
      {
        "text": "industrial computer network protocol used for real-time distributed contro",
        "textJa": "リアルタイム分散制御に使用される産業用コンピュータネットワークプロトコル"
      }
    ],
    "note": "a family of related standardized interfaces",
    "noteJa": "関連する標準化されたインターフェースのファミリー"
  },
  {
    "number": "3.1594",
    "name": "fifth-generation language (5GL)",
    "definitions": [
      {
        "text": "computer language that incorporates the concepts of knowledge-based systems, expert systems, inference engines, and natural language processing",
        "textJa": "知識ベースのシステム、エキスパート システム、推論エンジン、自然言語処理の概念を組み込んだコンピューター言語"
      }
    ],
    "confer": [
      "assembly language",
      "fourth-generation language",
      "high-order language",
      "machine language"
    ]
  },
  {
    "number": "3.1595",
    "name": "figurative constant",
    "definitions": [
      {
        "text": "data name that is reserved for a specific constant in a programming language",
        "textJa": "プログラミング言語の特定の定数用に予約されているデータ名"
      }
    ],
    "confer": [
      "literal"
    ],
    "example": "The data name THREE is reserved to represent the value 3.",
    "exampleJa": "データ名 THREE は、値 3 を表すために予約されています。"
  },
  {
    "number": "3.1596",
    "name": "file",
    "definitions": [
      {
        "text": "set of related records treated as a unit",
        "textJa": "単位として扱われる関連レコードのセット"
      },
      {
        "text": "named set of records stored or processed as a unit",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "単位として保存または処理される名前付きレコードのセット"
      }
    ],
    "example": "In stock control, a file could consist of a set of invoice records.",
    "exampleJa": "在庫管理では、ファイルは一連の請求書レコードで構成されます。"
  },
  {
    "number": "3.1597",
    "name": "file type referenced (FTR)",
    "definitions": [
      {
        "text": "data function read or maintained by a transactional function",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.31",
        "textJa": "トランザクション関数によって読み取られるか維持されるデータ関数"
      },
      {
        "text": "an internal logical file (ILF) or an external interface file (EIF) maintained or read by a transaction",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "トランザクションによって維持または読み取られる内部論理ファイル (ILF) または外部インターフェース ファイル (EIF)"
      }
    ]
  },
  {
    "number": "3.1598",
    "name": "final function point count",
    "definitions": [
      {
        "text": "a count to determine the number of function points at the end of a project",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "プロジェクト終了時のファンクションポイントの数を決定するためのカウント"
      }
    ]
  },
  {
    "number": "3.1599",
    "name": "final transfer set",
    "definitions": [
      {
        "text": "collection of changed objects that are to be transferred integrally to one or more production environments, including implementation instructions",
        "reference": "ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.18",
        "textJa": "実装手順を含む、1 つ以上の実稼働環境に統合的に転送される変更されたオブジェクトのコレクション"
      }
    ]
  },
  {
    "number": "3.1600",
    "name": "financial independence",
    "definitions": [
      {
        "text": "of software quality assurance (SQA), situation in which control of the SQA budget is vested in an organization independent of the development organization",
        "reference": "IEEE 730-2014 IEEE Standard for Software Quality Assurance Processes, 3.2",
        "textJa": "ソフトウェア品質保証（SQA）の予算管理が開発組織から独立した組織に委ねられている状況"
      }
    ]
  },
  {
    "number": "3.1601",
    "name": "finish date",
    "definitions": [
      {
        "text": "a point in time associated with a schedule activity's completion. Usually qualified by one of the following: actual, planned, estimated, scheduled, early, late, baseline, target, or current",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "スケジュールされたアクティビティの完了に関連付けられた時点。通常、次のいずれかによって修飾されます: 実績、計画、推定、予定、早期、後期、ベースライン、ターゲット、または現在の"
      }
    ]
  },
  {
    "number": "3.1602",
    "name": "finish-to-finish (FF)",
    "definitions": [
      {
        "text": "a logical relationship in which a successor activity cannot finish until a predecessor activity has finished",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "先行アクティビティが終了するまで後続アクティビティは終了できない論理関係"
      }
    ],
    "confer": [
      "logical relationship"
    ]
  },
  {
    "number": "3.1603",
    "name": "finish-to-start (FS)",
    "definitions": [
      {
        "text": "a logical relationship in which a successor activity cannot start until a predecessor activity has finished",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "先行アクティビティが終了するまで後続アクティビティを開始できない論理関係"
      }
    ],
    "confer": [
      "logical relationship"
    ]
  },
  {
    "number": "3.1604",
    "name": "finite state machine",
    "definitions": [
      {
        "text": "computational model consisting of a finite number of states and transitions between those states, possibly with accompanying actions",
        "textJa": "有限数の状態とそれらの状態間の遷移で構成され、場合によってはアクションを伴う計算モデル"
      }
    ]
  },
  {
    "number": "3.1605",
    "name": "firm-fixed-price contract (FFP)",
    "definitions": [
      {
        "text": "a type of fixed price contract where the buyer pays the seller a set amount (as defined by the contract), regardless of the seller's costs",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "固定価格契約の一種で、売り手のコストに関係なく、買い手が売り手に一定の金額（契約で定義されている）を支払うもの"
      }
    ]
  },
  {
    "number": "3.1606",
    "name": "firmware",
    "definitions": [
      {
        "text": "combination of a hardware device and computer instructions or computer data that reside as read-only software on the hardware device",
        "reference": "ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes, 4.14",
        "textJa": "ハードウェア デバイスと、ハードウェア デバイス上に読み取り専用ソフトウェアとして常駐するコンピュータ命令またはコンピュータ データの組み合わせ。"
      },
      {
        "text": "ordered set of instructions and associated data stored in a way that is functionally independent of main storage, usually in a ROM",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "主記憶装置から機能的に独立した方法で、通常は ROM に保存される命令と関連データの順序付きセット"
      }
    ],
    "note": "The software cannot be readily modified under program control.",
    "noteJa": "ソフトウェアはプログラム制御下では容易に変更できません。"
  },
  {
    "number": "3.1607",
    "name": "first input routine",
    "definitions": [
      {
        "text": "those activities required to obtain the logical record, if any, to be processed first",
        "textJa": "最初に処理される論理レコード (存在する場合) を取得するために必要なアクティビティ"
      }
    ]
  },
  {
    "number": "3.1608",
    "name": "FiSMA",
    "definitions": [
      {
        "text": "Finnish Software Measurement Association",
        "reference": "ISO/IEC 29881:2010 Information technology — Software and systems engineering — FiSMA 1.1 functional size measurement method, A.10",
        "textJa": "フィンランドソフトウェア測定協会"
      }
    ],
    "note": "a network of Finnish companies, which share interest in developing software measurement and/or software processes.",
    "noteJa": "ソフトウェア測定および/またはソフトウェアプロセスの開発に関心を共有するフィンランド企業のネットワーク。"
  },
  {
    "number": "3.1609",
    "name": "fixed cost",
    "definitions": [
      {
        "text": "cost that is not dependent on the rate of production",
        "textJa": "生産速度に依存しないコスト"
      }
    ],
    "confer": [
      "variable cost"
    ],
    "note": "such as facilities cost or loan interest",
    "noteJa": "設備費やローン金利など"
  },
  {
    "number": "3.1610",
    "name": "fixed formula method",
    "definitions": [
      {
        "text": "an earned value method for assigning a specified percentage of budget value of a work package to the start milestone of the work package with the remaining budget value percentage assigned when the work package is complete",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "ワークパッケージの予算値の指定された割合をワークパッケージの開始マイルストーンに割り当て、ワークパッケージが完了したときに残りの予算値の割合を割り当てるアーンドバリュー方式。"
      }
    ]
  },
  {
    "number": "3.1611",
    "name": "fixed price with economic price adjustment contract (FP-EPA)",
    "definitions": [
      {
        "text": "A fixed-price contract, but with a special provision allowing for pre-defined final adjustments to the contract pric due to changed conditions, such as inflation changes, or cost increases (or decreases) for specific commodities",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "固定価格契約ですが、インフレの変化や特定の商品のコスト増加（または減少）などの条件変更に応じて、契約価格の事前定義された最終調整を可能にする特別条項が付いています。"
      }
    ]
  },
  {
    "number": "3.1612",
    "name": "fixed-cost analysis",
    "definitions": [
      {
        "text": "analysis that seeks to maximize the effectiveness that can be attained from a fixed, maximum investment",
        "textJa": "一定の最大投資から得られる効果を最大化することを目指す分析"
      }
    ],
    "confer": [
      "fixed-effectiveness analysis"
    ]
  },
  {
    "number": "3.1613",
    "name": "fixed-effectiveness analysis",
    "definitions": [
      {
        "text": "analysis that seeks to minimize the investment needed to attain a fixed, minimum degree of effectiveness",
        "textJa": "一定の最小限の有効性を達成するために必要な投資を最小限に抑えようとする分析"
      }
    ],
    "confer": [
      "fixed-cost analysis"
    ]
  },
  {
    "number": "3.1614",
    "name": "fixed-price contract",
    "definitions": [
      {
        "text": "an agreement that sets the amount that will be paid for a defined scoped of work regardless of cost or effort to deliver it",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "定義された範囲の仕事に対して、それを実現するためのコストや労力に関係なく支払われる金額を設定する契約"
      }
    ]
  },
  {
    "number": "3.1615",
    "name": "fixed-price-incentive-fee (FPIF) contract",
    "definitions": [
      {
        "text": "a type of contract where the buyer pays the seller a set amount (as defined by the contract), and the seller can earn an additional amount if the seller meets defined performance criteria",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "買い手が売り手に（契約で定義された）一定の金額を支払い、売り手が定義された履行基準を満たした場合に売り手が追加の金額を獲得できる契約の一種。"
      }
    ]
  },
  {
    "number": "3.1616",
    "name": "flag",
    "definitions": [
      {
        "text": "variable that is set to a prescribed state, often 'true' or 'false,' based on the results of a process or the occurrence of a specified condition",
        "textJa": "プロセスの結果または指定された条件の発生に基づいて、規定の状態 (多くの場合「true」または「false」) に設定される変数"
      }
    ],
    "confer": [
      "indicator",
      "semaphore"
    ]
  },
  {
    "number": "3.1617",
    "name": "flash memory",
    "definitions": [
      {
        "text": "larger and faster programmable ROM which allows data to be electrically erased from memory and rewritten many times",
        "textJa": "データをメモリから電気的に消去し、何度も書き換えることができる、より大きくて高速なプログラマブル ROM"
      }
    ],
    "alias": [
      "NVRAM",
      "non-volatile random access memory"
    ],
    "confer": [
      "EEPROM"
    ]
  },
  {
    "number": "3.1617.1",
    "name": "flexibility",
    "definitions": [
      {
        "text": "ease with which a system or component can be modified for use in applications or environments other than those for which it was specifically designed",
        "textJa": "システムまたはコンポーネントを、特別に設計されたもの以外のアプリケーションまたは環境で使用するために変更する容易さ"
      },
      {
        "text": "degree to which a product or system can be used with effectiveness, efficiency, freedom from risk and satisfaction in contexts beyond those initially specified in the requirements",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.1.5.2",
        "textJa": "製品またはシステムが、最初に要件で指定されたものを超えた状況において、有効性、効率性、リスクからの解放、および満足感を持って使用できる程度"
      }
    ],
    "confer": [
      "adaptability",
      "extendability",
      "maintainability"
    ],
    "note": "Flexibility enables products to take account of circumstances, opportunities and individual preferences that had not been anticipated in advance. If a product is not designed for flexibility, it might not be safe to use the product in unintended contexts. Flexibility can be measured either as the extent to which a product can be used by additional types of users to achieve additional types of goals with effectiveness, efficiency, freedom from risk and satisfaction in additional types of contexts of use, or by a capability to be modified to support adaptation for new types of users, tasks and environments, and suitability for individualization.",
    "noteJa": "柔軟性により、事前には予想されていなかった状況、機会、個人の好みを製品が考慮できるようになります。製品が柔軟性を考慮して設計されていない場合、意図しない状況で製品を使用するのは安全ではない可能性があります。柔軟性は、追加の種類のユーザーが有効性、効率性、リスクからの解放、および追加の使用状況における満足度を備えて追加の種類の目標を達成するために、追加の種類のユーザーが製品を使用できる程度として、または新しいタイプのユーザー、タスク、環境への適応、および個別化への適合性をサポートするために変更できる機能によって測定できます。"
  },
  {
    "number": "3.1618",
    "name": "flip-flop",
    "definitions": [
      {
        "text": "electronic circuit with one or two stable states",
        "textJa": "1 つまたは 2 つの安定状態を持つ電子回路"
      }
    ],
    "alias": [
      "latch"
    ],
    "note": "can be used to store 0 or 1 as digital data",
    "noteJa": "0または1をデジタルデータとして保存するために使用できます"
  },
  {
    "number": "3.1619",
    "name": "float",
    "definitions": [
      {
        "text": "amount of unscheduled time between sequential activities not on the critical path, which can be used to delay the completion of the earlier activity or advance the start of the later activity",
        "textJa": "クリティカル パス上にない連続したアクティビティ間の予定外の時間。前のアクティビティの完了を遅らせたり、後のアクティビティの開始を早めたりするために使用できます。"
      }
    ],
    "alias": [
      "slack"
    ],
    "confer": [
      "free float",
      "total float"
    ]
  },
  {
    "number": "3.1620",
    "name": "flow",
    "definitions": [
      {
        "text": "abstraction of a sequence of interactions, resulting in conveyance of information from a producer object to a consumer object",
        "reference": "ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.",
        "textJa": "一連のインタラクションの抽象化。その結果、プロデューサー オブジェクトからコンシューマー オブジェクトへの情報の伝達が行われます。"
      }
    ],
    "example": "multimedia data broadcast",
    "note": "A flow can be used to abstract over, for example, the exact structure of a sequence of interactions, or over a continuous interaction including the special case of an analogue information flow.",
    "exampleJa": "マルチメディアデータ放送",
    "noteJa": "フローを使用すると、たとえば、一連のインタラクションの正確な構造、またはアナログ情報フローの特殊なケースを含む連続的なインタラクションを抽象化できます。"
  },
  {
    "number": "3.1621",
    "name": "flowchart",
    "definitions": [
      {
        "text": "graphical representation of a process or the step-by-step solution of a problem, using suitably annotate geometric figures connected by flowlines for the purpose of designing or documenting a process or program",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "プロセスまたはプログラムの設計または文書化を目的として、フローラインで接続された適切に注釈を付けた幾何学的図形を使用した、プロセスまたは問題の段階的な解決策のグラフィック表現"
      },
      {
        "text": "graphical representation of the definition, analysis, or method of solution of a problem in which symbols are used to represent operations, data, flow, equipment, etc.",
        "reference": "ISO 5807:1985 Information processing — Documentation symbols and conventions for data, program and system flowcharts, program network charts and system resources charts, 3.3",
        "textJa": "シンボルを使用して操作、データ、フロー、機器などを表す、問題の定義、分析、または解決方法のグラフィック表現。"
      },
      {
        "text": "control flow diagram in which suitably annotated geometrical figures are used to represent operations, data, or equipment, and arrows are used to indicate the sequential flow from one to another",
        "textJa": "適切に注釈が付けられた幾何学的図形が操作、データ、または機器を表すために使用され、矢印が一方から他方への一連の流れを示すために使用される制御フロー図"
      },
      {
        "text": "the depiction in a diagram format of the inputs, process actions, and outputs of one or more processes within a system",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "システム内の 1 つ以上のプロセスの入力、プロセス アクション、および出力を図形式で表現したもの"
      }
    ],
    "alias": [
      "flow diagram"
    ],
    "confer": [
      "block diagram",
      "box diagram",
      "bubble chart",
      "graph",
      "input-process-output chart",
      "structure chart"
    ]
  },
  {
    "number": "3.1622",
    "name": "flowcharter",
    "definitions": [
      {
        "text": "software tool that accepts as input a design or code representation of a program and produces as output a flowchart of the program",
        "textJa": "プログラムの設計またはコード表現を入力として受け取り、プログラムのフローチャートを出力として生成するソフトウェア ツール"
      }
    ]
  },
  {
    "number": "3.1623",
    "name": "FMEA",
    "definitions": [
      {
        "text": "failure mode and effect analysis",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "故障モードと影響の分析"
      }
    ]
  },
  {
    "number": "3.1624",
    "name": "FMECA",
    "definitions": [
      {
        "text": "failure mode, effects, and criticality analysis",
        "reference": "IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.2",
        "textJa": "故障モード、影響、臨界度の解析"
      }
    ]
  },
  {
    "number": "3.1625",
    "name": "FOC",
    "definitions": [
      {
        "text": "full operational capability",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "完全な運用能力"
      }
    ]
  },
  {
    "number": "3.1626",
    "name": "focus groups",
    "definitions": [
      {
        "text": "an elicitation technique that brings together prequalified stakeholders and subject matter experts to learn about their expectations and attitudes about a proposed product, service, or result",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "提案された製品、サービス、または結果についての期待や態度を知るために、事前に資格を与えられた利害関係者と対象分野の専門家を集めて引き出す手法。"
      }
    ]
  },
  {
    "number": "3.1627",
    "name": "footer",
    "definitions": [
      {
        "text": "material repeated at the bottom of each page",
        "textJa": "各ページの下部に繰り返し記載されている内容"
      }
    ],
    "example": "section title",
    "exampleJa": "セクションのタイトル"
  },
  {
    "number": "3.1628",
    "name": "For Exposition Only (FEO) page",
    "definitions": [
      {
        "text": "model page that contains pictorial and graphical information (in contrast to text) about a specific diagram",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.51",
        "textJa": "特定の図に関する絵やグラフィック情報 (テキストとは対照的に) を含むモデル ページ"
      }
    ],
    "note": "Unlike a diagram, the contents of a For Exposition Only page (FEO page) need not comply with IDEF0 rules.",
    "noteJa": "図とは異なり、For Exposition Only ページ (FEO ページ) のコンテンツは IDEF0 ルールに準拠する必要はありません。"
  },
  {
    "number": "3.1629",
    "name": "forecast",
    "definitions": [
      {
        "text": "estimate or prediction of conditions and events in the project's future based on information and knowledge available at the time of the forecast. The information is based on the project's past performance and expected future performance, and includes information that could impact the project in the future, such as estimate at completion and estimate to complete",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "予測時点で入手可能な情報と知識に基づいて、プロジェクトの将来の状況と出来事を推定または予測すること。この情報は、プロジェクトの過去の実績と予想される将来の実績に基づいており、完了時の見積もりや完了までの見積もりなど、将来のプロジェクトに影響を与える可能性のある情報が含まれます。"
      }
    ]
  },
  {
    "number": "3.1630",
    "name": "foreground",
    "definitions": [
      {
        "text": "in job scheduling, the computing environment in which high-priority processes or those requiring user interaction are executed",
        "textJa": "ジョブ スケジューリングにおいて、優先度の高いプロセスまたはユーザーの対話を必要とするプロセスが実行されるコンピューティング環境"
      }
    ],
    "confer": [
      "background",
      "foreground processing"
    ]
  },
  {
    "number": "3.1631",
    "name": "foreground processing",
    "definitions": [
      {
        "text": "execution of a high-priority process while lower priority processes await the availability of computer resources, or the execution of processes that require user interaction",
        "textJa": "優先度の高いプロセスを実行する一方で、優先度の低いプロセスはコンピュータ リソースが利用可能になるのを待つ、またはユーザーの操作が必要なプロセスの実行"
      }
    ],
    "confer": [
      "background processing"
    ]
  },
  {
    "number": "3.1632",
    "name": "foreign key",
    "definitions": [
      {
        "text": "attribute, or combination of attributes, of a child or category entity instance whose values match those in the primary key of a related parent or generic entity instance",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.62",
        "textJa": "関連する親または汎用エンティティ インスタンスの主キーの値と一致する値を持つ子エンティティ インスタンスまたはカテゴリ エンティティ インスタンスの属性、または属性の組み合わせ"
      }
    ],
    "alias": [
      "migrated key"
    ],
    "note": "A foreign key results from the migration of the parent or generic entity's primary key through a generalization structure or a relationship. [key style]",
    "noteJa": "外部キーは、一般化構造または関係を介した親または汎用エンティティの主キーの移行によって生成されます。 【キースタイル】"
  },
  {
    "number": "3.1633",
    "name": "forking action",
    "definitions": [
      {
        "text": "dividing action, where the enabled chains must (subject to failure) eventually join each other, i.e., the enabled chains cannot join other chains and they cannot terminate separately.",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.1.5",
        "textJa": "分割アクション。有効なチェーンは最終的に (失敗する可能性があります) 互いに結合する必要があります。つまり、有効なチェーンは他のチェーンに結合できず、個別に終了することもできません。"
      }
    ]
  },
  {
    "number": "3.1634",
    "name": "form",
    "definitions": [
      {
        "text": "module or formulary to collect data",
        "reference": "ISO/IEC 25024:2015 Systems and software engineering - Systems and software Quality Requirements and Evaluation (SQuaRE) - Measurement of data, 4.20",
        "textJa": "データを収集するためのモジュールまたは公式"
      }
    ],
    "note": "It can be paper-based (paper form) or digital",
    "noteJa": "紙ベース（紙の形式）でもデジタルでも構いません"
  },
  {
    "number": "3.1635",
    "name": "form, fit, and function",
    "definitions": [
      {
        "text": "in configuration management, that configuration comprising the physical and functional characteristics of an item as an entity, but not including any characteristics of the elements making up the item",
        "textJa": "構成管理において、その構成は、エンティティとしての品目の物理的および機能的特性を含むが、品目を構成する要素の特性は含まない"
      }
    ],
    "confer": [
      "configuration identification"
    ]
  },
  {
    "number": "3.1636",
    "name": "formal design",
    "definitions": [
      {
        "text": "process of using a formal method for software design",
        "textJa": "ソフトウェア設計に正式な手法を使用するプロセス"
      }
    ]
  },
  {
    "number": "3.1637",
    "name": "formal evaluation process",
    "definitions": [
      {
        "text": "structured approach to evaluating alternative solutions against established criteria to determine a recommended solution to address an issue",
        "textJa": "問題に対処するための推奨ソリューションを決定するために、確立された基準に照らして代替ソリューションを評価するための構造化されたアプローチ"
      }
    ]
  },
  {
    "number": "3.1638",
    "name": "formal language",
    "definitions": [
      {
        "text": "language whose rules are explicitly established prior to its use",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "使用前にルールが明示的に確立されている言語"
      }
    ],
    "alias": [
      "artificial language"
    ],
    "confer": [
      "natural language"
    ],
    "example": "programming languages and mathematical languages",
    "exampleJa": "プログラミング言語と数学言語"
  },
  {
    "number": "3.1639",
    "name": "formal parameter",
    "definitions": [
      {
        "text": "variable used in a software module to represent data or program elements that are to be passed to the module by a calling module",
        "textJa": "呼び出し側モジュールによってモジュールに渡されるデータまたはプログラム要素を表すためにソフトウェア モジュールで使用される変数"
      }
    ],
    "confer": [
      "argument (3)"
    ]
  },
  {
    "number": "3.1640",
    "name": "formal qualification review (FQR)",
    "definitions": [
      {
        "text": "test, inspection, or analytical process by which a group of configuration items comprising a system is verified to have met specific contractual performance requirements",
        "textJa": "システムを構成する構成アイテムのグループが特定の契約上のパフォーマンス要件を満たしていることを検証するテスト、検査、または分析プロセス"
      }
    ],
    "confer": [
      "code review",
      "design review",
      "requirements review",
      "test readiness review"
    ]
  },
  {
    "number": "3.1641",
    "name": "formal requirements language",
    "definitions": [
      {
        "text": "artificial language used to represent a software requirement",
        "textJa": "ソフトウェア要件を表すために使用される人工言語"
      }
    ],
    "alias": [
      "verifiable requirements language"
    ],
    "note": "The resulting formal requirements can be proven \"correct\" through proof-of-correctness methods",
    "noteJa": "結果として得られる形式的要件は、正しさの証明方法によって「正しい」ことを証明できます。"
  },
  {
    "number": "3.1642",
    "name": "formal specification",
    "definitions": [
      {
        "text": "specification that is used to prove mathematically the validity of an implementation or to derive mathematically the implementation",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "実装の正当性を数学的に証明するため、または実装を数学的に導出するために使用される仕様"
      },
      {
        "text": "specification written in a formal notation, often for use in proof of correctness",
        "textJa": "正式な表記法で書かれた仕様。多くの場合、正確性の証明に使用されます。"
      },
      {
        "text": "specification written and approved in accordance with established standards",
        "textJa": "確立された規格に従って作成および承認された仕様"
      }
    ]
  },
  {
    "number": "3.1643",
    "name": "formal testing",
    "definitions": [
      {
        "text": "testing conducted in accordance with test plans and procedures that have been reviewed and approved by a customer, user, or designated level of management",
        "textJa": "顧客、ユーザー、または指定されたレベルの管理者によって検討および承認されたテスト計画および手順に従って実施されるテスト"
      }
    ],
    "confer": [
      "informal testing"
    ]
  },
  {
    "number": "3.1644",
    "name": "formalization",
    "definitions": [
      {
        "text": "precise description of the semantics of a language in terms of a formal language such as first order logic",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.63",
        "textJa": "一次論理などの形式言語による言語の意味論の正確な記述"
      }
    ]
  },
  {
    "number": "3.1645",
    "name": "formative construct",
    "definitions": [
      {
        "text": "construct that is formed from its observed measures in the relationship between a construct and its measures",
        "reference": "ISO/IEC 33003:2015 Information technology — Process assessment — Requirements for process measurement frameworks, 3.7",
        "textJa": "構成要素とその尺度の間の関係において、観察された尺度から形成される構成要素"
      }
    ],
    "note": "The construct is a consequence of its measures and each measure is a determinant of the construct.",
    "noteJa": "構成要素はその尺度の結果であり、各尺度は構成要素の決定要因です。"
  },
  {
    "number": "3.1646",
    "name": "forms design sheet",
    "definitions": [
      {
        "text": "layout chart, intended as an aid for the placing of rules and other pre-printed matter in the designing of forms, containing margin indicators and a network of lines indicating the locations of printed rules",
        "reference": "ISO 3535:1977 Forms design sheet and layout chart, 4.3",
        "textJa": "レイアウト チャート。フォームの設計においてルールやその他の事前印刷物を配置するための補助として意図されており、マージン インジケーターと印刷されたルールの位置を示す線のネットワークが含まれます。"
      }
    ]
  },
  {
    "number": "3.1647",
    "name": "forward pass",
    "definitions": [
      {
        "text": "a critical path method technique for calculating the early start and early finish dates by working forward through the schedule model from the project start date or a given point in time",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクトの開始日または特定の時点からスケジュール モデルを進めて、早期の開始日と早期終了日を計算するクリティカル パス手法手法"
      }
    ],
    "confer": [
      "schedule network analysis",
      "backward pass"
    ]
  },
  {
    "number": "3.1648",
    "name": "forward recovery",
    "definitions": [
      {
        "text": "reconstruction of a file to a given state by updating an earlier version, using data recorded in a chronological record of changes made to the file",
        "textJa": "ファイルに加えられた変更の時系列記録に記録されたデータを使用して、以前のバージョンを更新することによって、ファイルを特定の状態に再構築すること"
      },
      {
        "text": "type of recovery in which a system, program, database, or other system resource is restored to a new, not previously occupied state in which it can perform required functions",
        "textJa": "システム、プログラム、データベース、またはその他のシステム リソースを、必要な機能を実行できる、以前に占有されていない新しい状態に復元するリカバリのタイプ"
      }
    ]
  },
  {
    "number": "3.1649",
    "name": "FOSS",
    "definitions": [
      {
        "text": "free and open source software",
        "textJa": "無料のオープンソース ソフトウェア"
      }
    ]
  },
  {
    "number": "3.1650",
    "name": "four-address instruction",
    "definitions": [
      {
        "text": "computer instruction that contains four address fields",
        "textJa": "4 つのアドレス フィールドを含むコンピューター命令"
      }
    ],
    "confer": [
      "one-address instruction",
      "two-address instruction",
      "three-address instruction",
      "zero-address instruction"
    ],
    "example": "an instruction to add the contents of locations A, B, and C, and place the result in location D",
    "exampleJa": "場所 A、B、C の内容を加算し、その結果を場所 D に配置する命令"
  },
  {
    "number": "3.1651",
    "name": "four-plus-one address instruction",
    "definitions": [
      {
        "text": "computer instruction that contains five address fields, the fifth containing the address of the instruction to be executed next",
        "textJa": "5 つのアドレス フィールドを含むコンピューター命令。5 番目のフィールドには次に実行される命令のアドレスが含まれます。"
      }
    ],
    "confer": [
      "one-plus-one address instruction",
      "two-plus-one address instruction",
      "three-plus-one address instruction"
    ],
    "example": "an instruction to add the contents of locations A, B, and C, place the results in location D, then execute the instruction at location E",
    "exampleJa": "位置 A、B、および C の内容を追加し、結果を位置 D に配置し、位置 E で命令を実行する命令"
  },
  {
    "number": "3.1652",
    "name": "fourth-generation language (4GL)",
    "definitions": [
      {
        "text": "computer language designed to improve the productivity achieved by high-order (third-generation) language and, often, to make computing power available to non-programmer",
        "textJa": "高次 (第 3 世代) 言語によって達成される生産性を向上させ、多くの場合、プログラマー以外でも計算能力を利用できるように設計されたコンピューター言語"
      }
    ],
    "confer": [
      "machine language",
      "assembly language",
      "high-order language",
      "fifth-generation language"
    ],
    "note": "Features typically include an integrated database management system, query language, report generator, screen definition facility, graphics generator, decision support function, financial modeling, spreadsheet capability, and statistical analysis functions.",
    "noteJa": "通常、統合データベース管理システム、クエリ言語、レポート ジェネレーター、画面定義機能、グラフィック ジェネレーター、意思決定支援機能、財務モデリング、スプレッドシート機能、統計分析機能などの機能が含まれます。"
  },
  {
    "number": "3.1653",
    "name": "FP-EPA",
    "definitions": [
      {
        "text": "fixed price with economic price adjustment",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "経済価格調整を伴う固定価格"
      }
    ]
  },
  {
    "number": "3.1654",
    "name": "FPA",
    "definitions": [
      {
        "text": "function point analysis",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 4; ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "ファンクションポイント分析"
      }
    ]
  },
  {
    "number": "3.1655",
    "name": "FPA table",
    "definitions": [
      {
        "text": "an entity type that has a secondary function in the application (e.g., code tables, reference tables, entity types with constants, text, or decodings) and whose data can be maintained by the application to be counted or by a different application",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "アプリケーション内で二次的な機能を持つエンティティ タイプ (例: コード テーブル、参照テーブル、定数、テキスト、またはデコードを含むエンティティ タイプ) で、そのデータはカウント対象のアプリケーションまたは別のアプリケーションによって維持できます。"
      }
    ]
  },
  {
    "number": "3.1656",
    "name": "FPA tables EIF",
    "definitions": [
      {
        "text": "the external interface file that is counted for the set of all FPA tables identified in an application that are only used by the application to be counted, but that are maintained by a different application",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "アプリケーション内で識別されるすべての FPA テーブルのセットとしてカウントされる外部インターフェイス ファイル。カウント対象のアプリケーションによってのみ使用され、別のアプリケーションによって維持されます。"
      }
    ]
  },
  {
    "number": "3.1657",
    "name": "FPA tables ILF",
    "definitions": [
      {
        "text": "the internal logical file that is counted for the set of all identifiable and maintainable FPA tables in an application",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "アプリケーション内のすべての識別可能および保守可能な FPA テーブルのセットとしてカウントされる内部論理ファイル"
      }
    ]
  },
  {
    "number": "3.1658",
    "name": "FPGA",
    "definitions": [
      {
        "text": "field programmable gate array",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "フィールドプログラマブルゲートアレイ"
      }
    ]
  },
  {
    "number": "3.1659",
    "name": "FPIF",
    "definitions": [
      {
        "text": "fixed price incentive fee",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "定額インセンティブ料金"
      }
    ]
  },
  {
    "number": "3.1660",
    "name": "FQR",
    "definitions": [
      {
        "text": "formal qualification review",
        "textJa": "正式な資格審査"
      }
    ]
  },
  {
    "number": "3.1661",
    "name": "FRACAS",
    "definitions": [
      {
        "text": "failure reporting and corrective action system",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "障害報告および是正措置システム"
      }
    ]
  },
  {
    "number": "3.1662",
    "name": "frame",
    "definitions": [
      {
        "text": "mechanism for dividing a browser window into independent windows for displaying different content or different parts of the same content (document)",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.10",
        "textJa": "異なるコンテンツまたは同じコンテンツ (ドキュメント) の異なる部分を表示するためにブラウザ ウィンドウを独立したウィンドウに分割するメカニズム"
      }
    ]
  },
  {
    "number": "3.1663",
    "name": "framework",
    "definitions": [
      {
        "text": "reusable design (models and/or code) that can be refined (specialized) and extended to provide some portion of the overall functionality of many applications.",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.64",
        "textJa": "多くのアプリケーションの全体的な機能の一部を提供するために洗練 (特殊化) および拡張できる再利用可能な設計 (モデルおよび/またはコード)。"
      },
      {
        "text": "partially completed software subsystem that can be extended by appropriately instantiating some specific plug-in",
        "textJa": "特定のプラグインを適切にインスタンス化することで拡張できる、部分的に完成したソフトウェア サブシステム"
      }
    ]
  },
  {
    "number": "3.1664",
    "name": "free float",
    "definitions": [
      {
        "text": "the amount of time that a schedule activity can be delayed without delaying the early start date of any successor or violating a schedule constraint.",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "後続アクティビティの早期開始日を遅らせたり、スケジュール制約に違反したりすることなく、スケジュール アクティビティを遅延できる時間。"
      }
    ],
    "confer": [
      "total float"
    ]
  },
  {
    "number": "3.1665",
    "name": "freedom from risk",
    "definitions": [
      {
        "text": "degree to which a product or system mitigates the potential risk to economic status, human life, health, or the environment.",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.1.4",
        "textJa": "製品またはシステムが経済的地位、人命、健康、または環境に対する潜在的なリスクを軽減する度合い。"
      }
    ],
    "confer": [
      "risk"
    ]
  },
  {
    "number": "3.1666",
    "name": "front matter",
    "definitions": [
      {
        "text": "material that comes at the front of a printed book or manual, such as the title page and table of contents",
        "textJa": "タイトルページや目次など、印刷された本やマニュアルの先頭にある資料"
      }
    ]
  },
  {
    "number": "3.1667",
    "name": "frozen branch",
    "definitions": [
      {
        "text": "branch where no development takes place, either in preparation for a release or because active development has ceased on it",
        "textJa": "リリースの準備中、またはアクティブな開発が停止したため、開発が行われないブランチ"
      }
    ]
  },
  {
    "number": "3.1668",
    "name": "FRP",
    "definitions": [
      {
        "text": "full-rate production.",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "フルレート生産。"
      }
    ]
  },
  {
    "number": "3.1669",
    "name": "FRR",
    "definitions": [
      {
        "text": "flight readiness review.",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "飛行準備レビュー。"
      }
    ]
  },
  {
    "number": "3.1670",
    "name": "FS",
    "definitions": [
      {
        "text": "finish-to-start. [A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "終わりから始まりまで。 [プロジェクト管理知識体系ガイド (PMBOK® ガイド) — 第 5 版"
      }
    ]
  },
  {
    "number": "3.1671",
    "name": "FSM",
    "definitions": [
      {
        "text": "functional size measurement.",
        "reference": "ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 4; ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.11",
        "textJa": "機能的なサイズ測定。"
      }
    ]
  },
  {
    "number": "3.1672",
    "name": "FSM method",
    "definitions": [
      {
        "text": "a specific implementation of FSM defined by a set of rules.",
        "reference": "ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 3.4",
        "textJa": "一連のルールによって定義された FSM の特定の実装。"
      }
    ]
  },
  {
    "number": "3.1673",
    "name": "FSMM",
    "definitions": [
      {
        "text": "functional size measurement method.",
        "reference": "ISO/IEC 14143-6:2012 Information technology — Software measurement — Functional size measurement — Part 6: Guide for use of ISO/IEC 14143 series and related International Standards, 2",
        "textJa": "機能的なサイズの測定方法。"
      }
    ]
  },
  {
    "number": "3.1674",
    "name": "FTP",
    "definitions": [
      {
        "text": "File Transfer Protocol.",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 5",
        "textJa": "ファイル転送プロトコル。"
      }
    ]
  },
  {
    "number": "3.1675",
    "name": "FTR",
    "definitions": [
      {
        "text": "file type referenced.",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 4; ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "参照されるファイルの種類。"
      }
    ]
  },
  {
    "number": "3.1676",
    "name": "full duplex",
    "definitions": [
      {
        "text": "able to communicate data in both directions simultaneously",
        "textJa": "双方向で同時にデータ通信可能"
      }
    ],
    "confer": [
      "half duplex"
    ]
  },
  {
    "number": "3.1677",
    "name": "function",
    "definitions": [
      {
        "text": "defined objective or characteristic action of a system or component2. software module that performs a specific action, is invoked by the appearance of its name in an expression, receives input values, and returns a single value",
        "textJa": "システムまたはコンポーネントの定義された目的または特徴的なアクション2。特定のアクションを実行し、式内にその名前が出現することによって呼び出され、入力値を受け取り、単一の値を返すソフトウェア モジュール"
      },
      {
        "text": "part of an application that provides facilities for users to carry out their tasks",
        "reference": "ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.21",
        "textJa": "ユーザーがタスクを実行するための機能を提供するアプリケーションの一部"
      },
      {
        "text": "elementary unit of requirements and specifications defined and used for measurement purposes",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "測定目的で定義および使用される要件と仕様の基本単位"
      },
      {
        "text": "single-valued mapping",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.65",
        "textJa": "単一値のマッピング"
      },
      {
        "text": "transformation of inputs to outputs, by means of some mechanisms, and subject to certain controls, that is identified by a function name and modeled by a box",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.53",
        "textJa": "いくつかのメカニズムを使用し、関数名によって識別され、ボックスによってモデル化される特定の制御に従って、入力から出力への変換。"
      }
    ]
  },
  {
    "number": "3.1678",
    "name": "function name",
    "definitions": [
      {
        "text": "active verb or verb phrase that describes what is to be accomplished by a function",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.54",
        "textJa": "能動的動詞または機能によって達成されることを説明する動詞句"
      }
    ],
    "note": "A box takes as its box name the function name of the function represented by the box.",
    "noteJa": "ボックスは、そのボックスが表す関数の関数名をボックス名として受け取ります。"
  },
  {
    "number": "3.1679",
    "name": "function point (FP)",
    "definitions": [
      {
        "text": "a unit which expresses the size of an application or of a project",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "アプリケーションまたはプロジェクトのサイズを表す単位"
      },
      {
        "text": "unit of measure for functional size as defined within ISO/IEC 20926:2009",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.35",
        "textJa": "ISO/IEC 20926:2009 内で定義されている機能サイズの測定単位"
      },
      {
        "text": "a measure of the delivered software functionality",
        "reference": "IEEE 1045-1992, (R2002) IEEE Standard for Software Productivity Metrics, 3.2",
        "textJa": "提供されたソフトウェアの機能の尺度"
      }
    ]
  },
  {
    "number": "3.1680",
    "name": "function point analysis (FPA)",
    "definitions": [
      {
        "text": "a method used to acquire a measurement of the amount of functionality an application provides a user",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "アプリケーションがユーザーに提供する機能の量の測定値を取得するために使用される方法"
      },
      {
        "text": "a form of functional size measurement (FSM) that measures the functional size of software development, enhancement and maintenance activities associated with business applications, from the customer's point of view",
        "reference": "ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10",
        "textJa": "機能サイズ測定 (FSM) の一種で、ビジネス アプリケーションに関連するソフトウェア開発、機能拡張、保守活動の機能サイズを顧客の観点から測定します。"
      },
      {
        "text": "method for measuring functional size as defined in ISO/IEC 29026:2009",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.36",
        "textJa": "ISO/IEC 29026:2009 で定義されている機能サイズの測定方法"
      }
    ]
  },
  {
    "number": "3.1681",
    "name": "function point count",
    "definitions": [
      {
        "text": "activity of applying rules to measure the functional size of an application or project",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.37",
        "textJa": "アプリケーションまたはプロジェクトの機能サイズを測定するためにルールを適用するアクティビティ"
      },
      {
        "text": "the absolute sum of the number of function points of all the functions to be added to, changed in, or deleted from the project or the application to be counted",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "カウント対象となるプロジェクトまたはアプリケーションに追加、変更、削除されるすべての関数の関数ポイント数の絶対和"
      }
    ],
    "note": "Three types of function point count are application, development project, and enhancement project.",
    "noteJa": "機能ポイント数は、アプリケーション、開発プロジェクト、強化プロジェクトの3種類です。"
  },
  {
    "number": "3.1682",
    "name": "function point table",
    "definitions": [
      {
        "text": "a table used to allocate function points to functions, depending on the function type and the complexity established for the function",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "関数タイプと関数に対して確立された複雑さに応じて、関数ポイントを関数に割り当てるために使用されるテーブル"
      }
    ]
  },
  {
    "number": "3.1683",
    "name": "function type",
    "definitions": [
      {
        "text": "the five types of components of which an application consists, seen from the perspective of FPA",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "FPA の観点から見た、アプリケーションを構成する 5 種類のコンポーネント"
      },
      {
        "text": "type of base functional component identified in ISO/IEC 20926:2009",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.38",
        "textJa": "ISO/IEC 20926:2009 で識別される基本機能コンポーネントのタイプ"
      }
    ],
    "note": "The five function types identified in ISO/IEC 20926:2009 are External Input, External Output, External Inquiry, Internal Logical File and External Interface File.",
    "noteJa": "ISO/IEC 20926:2009 で特定されている 5 つの関数タイプは、外部入力、外部出力、外部問い合わせ、内部論理ファイル、および外部インターフェイス ファイルです。"
  },
  {
    "number": "3.1684",
    "name": "function-oriented design",
    "definitions": [
      {
        "text": "partitioning of a design into subsystems and modules, with each one handling one or more functions",
        "textJa": "設計をサブシステムとモジュールに分割し、それぞれが 1 つ以上の機能を処理すること"
      }
    ],
    "confer": [
      "object-oriented design",
      "data-structure-oriented design"
    ]
  },
  {
    "number": "3.1685",
    "name": "functional analysis",
    "definitions": [
      {
        "text": "systematic investigation of the functions of a real or planned system",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "実際のシステムまたは計画されたシステムの機能の体系的な調査"
      },
      {
        "text": "examination of a defined function to identify all the subfunctions necessary to accomplish that function, to identify functional relationships and interfaces (internal and external) and capture these in a functional architecture, to flow down upper-level performance requirements and to assign these requirements to lower-leve subfunctions",
        "textJa": "定義済みの機能を検査して、その機能を達成するために必要なすべてのサブ機能を特定し、機能関係とインターフェイス (内部および外部) を特定して機能アーキテクチャに取り込み、上位レベルのパフォーマンス要件をフローダウンして、これらの要件を下位レベルのサブ機能に割り当てます。"
      }
    ]
  },
  {
    "number": "3.1686",
    "name": "functional appropriateness",
    "definitions": [
      {
        "text": "degree to which the functions facilitate the accomplishment of specified tasks and objectives",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.1.3",
        "textJa": "機能が指定されたタスクや目的の達成を促進する度合い"
      }
    ],
    "example": "A user is only presented with the necessary steps to complete a task, excluding any unnecessary steps.",
    "note": "Functional appropriateness corresponds to suitability for the task.",
    "exampleJa": "ユーザーには、不必要なステップを除いて、タスクを完了するために必要なステップのみが表示されます。",
    "noteJa": "機能的適切性は、タスクへの適合性に対応します。"
  },
  {
    "number": "3.1687",
    "name": "functional architecture",
    "definitions": [
      {
        "text": "arrangement of functions and their subfunctions and interfaces (internal and external) that defines the execution sequencing, conditions for control or data flow, and the performance requirements to satisfy the requirements baseline",
        "textJa": "関数とそのサブ関数、および実行順序、制御またはデータ フローの条件、および要件ベースラインを満たすためのパフォーマンス要件を定義するインターフェイス (内部および外部) の配置。"
      },
      {
        "text": "hierarchical arrangement of functions, their internal and external (external to the aggregation itself) functional interfaces and external physical interfaces, their respective functional and performance requirements, and their design constraints",
        "textJa": "機能の階層的配置、その内部および外部 (アグリゲーション自体の外部) の機能インターフェイスと外部物理インターフェイス、それぞれの機能要件とパフォーマンス要件、および設計制約"
      }
    ]
  },
  {
    "number": "3.1688",
    "name": "functional baseline",
    "definitions": [
      {
        "text": "description of the system's performance (functional, interoperability, and interface characteristics) and the verification required to demonstrate the achievement of those specified characteristics",
        "reference": "IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.1",
        "textJa": "システムのパフォーマンス (機能、相互運用性、インターフェイス特性) の説明と、それらの指定された特性の達成を実証するために必要な検証"
      }
    ],
    "confer": [
      "allocated baseline",
      "developmental configuration",
      "product baseline"
    ]
  },
  {
    "number": "3.1689",
    "name": "functional cohesion",
    "definitions": [
      {
        "text": "type of cohesion in which the tasks performed by a software module all contribute to the performance of a single function",
        "textJa": "ソフトウェア モジュールによって実行されるタスクがすべて、単一の機能のパフォーマンスに寄与する凝集のタイプ"
      }
    ],
    "confer": [
      "coincidental cohesion",
      "communicational cohesion",
      "logical cohesion",
      "procedural cohesion",
      "sequential cohesion",
      "temporal cohesion"
    ]
  },
  {
    "number": "3.1690",
    "name": "functional completeness",
    "definitions": [
      {
        "text": "degree to which the set of functions covers all the specified tasks and user objectives",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.1.1",
        "textJa": "一連の機能が指定されたすべてのタスクとユーザーの目的をどの程度カバーしているか"
      }
    ]
  },
  {
    "number": "3.1691",
    "name": "functional complexity",
    "definitions": [
      {
        "text": "specific complexity rating assigned to a function using defined rules",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.32",
        "textJa": "定義されたルールを使用して関数に割り当てられる特定の複雑さの評価"
      }
    ]
  },
  {
    "number": "3.1692",
    "name": "functional configuration audit (FCA)",
    "definitions": [
      {
        "text": "audit conducted to verify that the development of a configuration item has been completed satisfactorily, that the item has achieved the performance and functional characteristics specified in the functional or allocated configuration identification, and that its operational and support documents are complete and satisfactory",
        "reference": "IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.1",
        "textJa": "構成アイテムの開発が満足に完了していること、そのアイテムが機能または割り当てられた構成識別で指定されたパフォーマンスと機能特性を達成していること、およびその運用およびサポート文書が完全で満足のいくものであることを検証するために行われる監査。"
      }
    ],
    "confer": [
      "configuration management",
      "physical configuration audit"
    ]
  },
  {
    "number": "3.1693",
    "name": "functional configuration identification",
    "definitions": [
      {
        "text": "in configuration management, the current approved technical documentation for a configuration item",
        "textJa": "構成管理では、構成アイテムについて現在承認されている技術文書"
      }
    ],
    "confer": [
      "allocated configuration identification",
      "product configuration identification functional baseline"
    ],
    "note": "It prescribes all necessary functional characteristics, the tests required to demonstrate achievement of specified functional characteristics, the necessary interface characteristics with associated configuration items, the configuration item's key functional characteristics and its key lower-level configuration items, if any, and design constraints",
    "noteJa": "必要なすべての機能特性、指定された機能特性の達成を実証するために必要なテスト、関連する構成アイテムとの必要なインターフェイス特性、構成アイテムの主要な機能特性とその主要な下位レベルの構成アイテム (存在する場合)、および設計制約を規定します。"
  },
  {
    "number": "3.1694",
    "name": "functional correctness",
    "definitions": [
      {
        "text": "degree to which a product or system provides the correct results with the needed degree of precision",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.1.2",
        "textJa": "製品またはシステムが必要な精度で正しい結果を提供する程度"
      }
    ]
  },
  {
    "number": "3.1695",
    "name": "functional decomposition",
    "definitions": [
      {
        "text": "type of modular decomposition in which a system is broken down into components that correspond to system functions and subfunctions",
        "textJa": "システムをシステム機能とサブ機能に対応するコンポーネントに分割するモジュール分解のタイプ"
      }
    ],
    "confer": [
      "hierarchical decomposition",
      "stepwise refinement"
    ]
  },
  {
    "number": "3.1696",
    "name": "functional design",
    "definitions": [
      {
        "text": "process of defining the working relationships among the components of a system",
        "textJa": "システムのコンポーネント間の動作関係を定義するプロセス"
      },
      {
        "text": "result of the process in (1)",
        "textJa": "(1)の処理結果"
      },
      {
        "text": "specification of the functions of the components of a system and of the working relationships among them",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "システムのコンポーネントの機能とコンポーネント間の動作関係の仕様"
      }
    ],
    "confer": [
      "architectural design"
    ]
  },
  {
    "number": "3.1697",
    "name": "functional domain",
    "definitions": [
      {
        "text": "class of software based on the characteristics of functional user requirements which are pertinent to FSM",
        "reference": "ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 3.5",
        "textJa": "FSM に関連する機能ユーザー要件の特性に基づくソフトウェアのクラス"
      },
      {
        "text": "categorized functions that are generally used together",
        "reference": "ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.16",
        "textJa": "一般的に一緒に使用される分類された機能"
      }
    ]
  },
  {
    "number": "3.1698",
    "name": "functional domain categorization (FDC)",
    "definitions": [
      {
        "text": "a process for identifying functional domains that conforms to the requirements of ISO/IEC TR 14143-5:2004, 5.2",
        "reference": "ISO/IEC TR 14143-5:2004 Information technology — Software measurement — Functional size measurement — Part 5: Determination of functional domains for use with functional size measurement, 3.2",
        "textJa": "ISO/IEC TR 14143-5:2004、5.2 の要件に準拠する機能ドメインを特定するプロセス"
      }
    ]
  },
  {
    "number": "3.1699",
    "name": "functional language",
    "definitions": [
      {
        "text": "programming language used to express programs as a sequence of functions and function calls",
        "textJa": "プログラムを一連の関数および関数呼び出しとして表現するために使用されるプログラミング言語"
      }
    ],
    "example": "LISP",
    "exampleJa": "LISP"
  },
  {
    "number": "3.1700",
    "name": "functional manager",
    "definitions": [
      {
        "text": "someone with management authority over an organizational unit within a functional organization. The manager of any group that actually makes a product or performs a service. Sometimes called a line manager",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "機能別組織内の組織単位に対する管理権限を持つ人。実際に製品を製造したりサービスを実行したりするグループのマネージャー。ラインマネージャーと呼ばれることもあります"
      }
    ],
    "alias": [
      "line manager"
    ]
  },
  {
    "number": "3.1701",
    "name": "functional organization",
    "definitions": [
      {
        "text": "a hierarchical organization where each employee has one clear superior, and staff are grouped by areas of specialization and managed by a person with expertise in that area",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "各従業員に明確な上司を1人設け、専門分野ごとにスタッフをグループ化し、その分野の専門知識を有する者が管理する階層型組織"
      }
    ]
  },
  {
    "number": "3.1702",
    "name": "functional process",
    "definitions": [
      {
        "text": "elementary component of a set of functional user requirements, comprising a unique, cohesive and independently executable set of data movements",
        "reference": "ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.10",
        "textJa": "一連の機能的ユーザー要件の基本コンポーネントであり、独自で一貫性があり、独立して実行可能なデータ移動のセットで構成されます。"
      },
      {
        "text": "an elementary component of a set of Functional User Requirements, comprising a unique, cohesive and independently executable set of data or data movements (functional services)",
        "reference": "ISO/IEC 29881:2010 Information technology — Software and systems engineering — FiSMA 1.1 functional size measurement method, A.11",
        "textJa": "一連の機能的ユーザー要件の基本コンポーネントであり、独自で一貫性があり、独立して実行可能なデータまたはデータ移動のセット (機能的サービス) で構成されます。"
      }
    ],
    "alias": [
      "functional process type",
      "transactional process"
    ],
    "note": "It is triggered by a data movement (an Entry) from a functional user that informs the piece of software that the functional user has identified a triggering event, and is complete when it has executed all that is required to be done in response to the triggering event.",
    "noteJa": "これは、機能ユーザーからのデータ移動 (エントリ) によってトリガーされ、機能ユーザーがトリガー イベントを識別したことをソフトウェアに通知し、トリガー イベントに応じて実行する必要があるすべての処理を実行すると完了します。"
  },
  {
    "number": "3.1703",
    "name": "functional product",
    "definitions": [
      {
        "text": "product capable of performing computations",
        "reference": "ISO/IEC TR 14759:1999 Software engineering — Mock up and prototype — A categorization of software mock up and prototype models and their use, 3.2 b)",
        "textJa": "計算を実行できる製品"
      }
    ]
  },
  {
    "number": "3.1704",
    "name": "functional requirement",
    "definitions": [
      {
        "text": "statement that identifies what results a product or process shall produce",
        "textJa": "製品またはプロセスがどのような結果を生み出すかを特定する声明"
      },
      {
        "text": "requirement that specifies a function that a system or system component shall perform",
        "reference": "IEEE 730-2014 IEEE Standard for Software Quality Assurance Processes, 3.2",
        "textJa": "システムまたはシステムコンポーネントが実行する機能を指定する要件"
      }
    ],
    "confer": [
      "nonfunctional requirement"
    ]
  },
  {
    "number": "3.1705",
    "name": "functional service",
    "definitions": [
      {
        "text": "base functional component (BFC)",
        "reference": "ISO/IEC 29881:2010 Information technology — Software and systems engineering — FiSMA 1.1 functional size measurement method, 3.6",
        "textJa": "基本機能コンポーネント (BFC)"
      },
      {
        "text": "service that must be implemented in the piece of software in order to fulfill functional user requirements",
        "reference": "ISO/IEC 29881:2010 Information technology — Software and systems engineering — FiSMA 1.1 functional size measurement method, A.9",
        "textJa": "ユーザーの機能要件を満たすためにソフトウェアに実装する必要があるサービス"
      }
    ]
  },
  {
    "number": "3.1706",
    "name": "functional size",
    "definitions": [
      {
        "text": "size of the software derived by quantifying the functional user requirements",
        "reference": "ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 3.6; ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.33",
        "textJa": "ユーザーの機能要件を定量化することで得られるソフトウェアのサイズ"
      }
    ],
    "alias": [
      "FS"
    ]
  },
  {
    "number": "3.1707",
    "name": "functional size measurement (FSM)",
    "definitions": [
      {
        "text": "the process of measuring functional size",
        "reference": "ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 3.7; ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.11",
        "textJa": "機能的なサイズを測定するプロセス"
      }
    ]
  },
  {
    "number": "3.1708",
    "name": "functional size measurement method (FSMM)",
    "definitions": [
      {
        "text": "specific implementation of FSM defined by a set of rules",
        "reference": "ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.12",
        "textJa": "一連のルールによって定義された FSM の特定の実装"
      }
    ],
    "alias": [
      "FSM method"
    ]
  },
  {
    "number": "3.1709",
    "name": "functional specification",
    "definitions": [
      {
        "text": "document that specifies the functions that a system or component must perform",
        "textJa": "システムまたはコンポーネントが実行する必要がある機能を指定する文書"
      }
    ],
    "note": "often part of a requirements specification",
    "noteJa": "多くの場合、要件仕様の一部です"
  },
  {
    "number": "3.1710",
    "name": "functional suitability",
    "definitions": [
      {
        "text": "degree to which a product or system provides functions that meet stated and implied needs when used under specified conditions",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.1",
        "textJa": "製品またはシステムが、指定された条件下で使用された場合に、明示的および黙示的なニーズを満たす機能を提供する度合い"
      }
    ],
    "note": "Functional suitability is only concerned with whether the functions meet stated and implied needs, not the functional specification.",
    "noteJa": "機能適合性は、機能仕様ではなく、明示的および暗黙的なニーズを機能が満たすかどうかのみを考慮します。"
  },
  {
    "number": "3.1711",
    "name": "functional system design",
    "definitions": [
      {
        "text": "specification of the functions of the components of a software system and of the working relationships between them",
        "reference": "ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.19",
        "textJa": "ソフトウェア システムのコンポーネントの機能とコンポーネント間の動作関係の仕様"
      }
    ]
  },
  {
    "number": "3.1712",
    "name": "functional testing",
    "definitions": [
      {
        "text": "testing that ignores the internal mechanism of a system or component and focuses solely on the outputs generated in response to selected inputs and execution conditions",
        "textJa": "システムまたはコンポーネントの内部メカニズムを無視し、選択された入力と実行条件に応じて生成される出力のみに焦点を当てるテスト"
      },
      {
        "text": "testing conducted to evaluate the compliance of a system or component with specified functional requirements",
        "textJa": "システムまたはコンポーネントが指定された機能要件に準拠しているかを評価するために実施されるテスト"
      }
    ],
    "alias": [
      "black-box testing"
    ]
  },
  {
    "number": "3.1713",
    "name": "functional unit",
    "definitions": [
      {
        "text": "entity of hardware or software, or both, capable of accomplishing a specified purpose",
        "reference": "ISO/IEC 2382:2015, Information technology—Vocabulary",
        "textJa": "指定された目的を達成できるハードウェアまたはソフトウェア、またはその両方の実体"
      }
    ]
  },
  {
    "number": "3.1714",
    "name": "functional user",
    "definitions": [
      {
        "text": "user that is a sender or an intended recipient of data in the Functional User Requirements of a piece of software",
        "reference": "ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.13",
        "textJa": "ソフトウェアの機能ユーザー要件におけるデータの送信者または意図された受信者であるユーザー"
      }
    ]
  },
  {
    "number": "3.1715",
    "name": "functional user requirements (FUR)",
    "definitions": [
      {
        "text": "subset of the user requirements specifying what the software shall do in terms of tasks and services",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.34",
        "textJa": "タスクとサービスに関してソフトウェアが何を行うかを指定するユーザー要件のサブセット"
      },
      {
        "text": "a subset of the user requirements describing what the software does in terms of tasks and services",
        "reference": "ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 3.8; ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.14",
        "textJa": "タスクとサービスに関してソフトウェアが何を行うかを説明するユーザー要件のサブセット"
      }
    ],
    "note": "Functional User Requirements include but are not limited to: data transfer (for example Input customer data, Send control signal); data transformation (for example Calculate bank interest, Derive average temperature); data storage (for example Store customer order, Record ambient temperature over time); data retrieval (for example List current employees, Retrieve aircraft position). User Requirements that are not Functional User Requirements include but are not limited to: quality constraints (for example usability, reliability, efficiency and portability); organizational constraints (for example locations for operation, target hardware and compliance to standards); environmental constraints (for example interoperability, security, privacy and safety); implementation constraints (for example development language, delivery schedule).",
    "noteJa": "機能的なユーザー要件には以下が含まれますが、これらに限定されません。 データ転送 (顧客データの入力、制御信号の送信など)。データ変換 (例: 銀行金利の計算、平均気温の導出)。データストレージ (例: 顧客の注文の保存、周囲温度の経時的な記録)。データの取得 (たとえば、現在の従業員のリスト、航空機の位置の取得)。機能的ユーザー要件ではないユーザー要件には、次のものが含まれますが、これらに限定されません。 品質制約 (たとえば、使いやすさ、信頼性、効率、移植性)。組織上の制約 (たとえば、運用の場所、ターゲット ハードウェア、標準への準拠)。環境上の制約 (相互運用性、セキュリティ、プライバシー、安全性など)。実装上の制約 (開発言語、納品スケジュールなど)。"
  },
  {
    "number": "3.1716",
    "name": "functionality",
    "definitions": [
      {
        "text": "capabilities of the various computational, user interface, input, output, data management, and other features provided by a product",
        "textJa": "製品によって提供されるさまざまな計算、ユーザー インターフェイス、入力、出力、データ管理、およびその他の機能の機能"
      }
    ],
    "note": "This characteristic is concerned with what the software does to fulfill needs. The software quality characteristic functionality can be used to specify or evaluate the suitability, accuracy, interoperability, security, and compliance of a function.",
    "noteJa": "この特性は、ソフトウェアがニーズを満たすために何を行うかに関係します。ソフトウェア品質特性機能を使用して、機能の適合性、精度、相互運用性、セキュリティ、およびコンプライアンスを指定または評価できます。"
  },
  {
    "number": "3.1717",
    "name": "funding limit reconciliation",
    "definitions": [
      {
        "text": "the process of comparing the planned expenditure of project funds against any limits on the commitment of funds for the project to identify any variances between the funding limits and the planned expenditures",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクト資金の計画支出をプロジェクトの資金コミットメントの制限と比較して、資金制限と計画支出の間の差異を特定するプロセス"
      }
    ]
  },
  {
    "number": "3.1718",
    "name": "FUR",
    "definitions": [
      {
        "text": "functional user requirement(s)",
        "reference": "ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 4; ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.14",
        "textJa": "機能的なユーザー要件"
      }
    ]
  },
  {
    "number": "3.1719",
    "name": "fuse ROM",
    "definitions": [
      {
        "text": "programmable ROM with written data based on a fuse connection state",
        "textJa": "ヒューズの接続状態に基づいてデータが書き込まれるプログラマブルROM"
      }
    ],
    "example": "If the normal state of the fuse means logic \"1\", the breaking state is \"0.\"",
    "exampleJa": "ヒューズの正常な状態が論理「1」を意味する場合、切断状態は「0」になります。"
  },
  {
    "number": "3.1720",
    "name": "future worth",
    "definitions": [
      {
        "text": "representation of a cash flow as a single instance at the end of the planning horizon",
        "textJa": "計画期間の終わりにおける単一のインスタンスとしてのキャッシュ フローの表現"
      }
    ],
    "confer": [
      "annual equivalent",
      "present worth"
    ]
  },
  {
    "number": "3.1721",
    "name": "Gantt chart",
    "definitions": [
      {
        "text": "a bar chart of schedule information where activities are listed on the vertical axis, dates are shown on the horizontal axis, and activity durations are shown as horizontal bars placed according to start and finish dates",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "スケジュール情報の棒グラフ。縦軸にアクティビティがリストされ、横軸に日付が表示され、アクティビティの期間が開始日と終了日に従って配置された水平棒として表示されます。"
      }
    ],
    "confer": [
      "bar chart"
    ]
  },
  {
    "number": "3.1722",
    "name": "garbage collection",
    "definitions": [
      {
        "text": "in computer resource management, a synonym for memory compaction (1)",
        "textJa": "コンピュータ リソース管理において、メモリ圧縮と同義語 (1)"
      }
    ]
  },
  {
    "number": "3.1723",
    "name": "GATES",
    "definitions": [
      {
        "text": "Stage-Gate methodology",
        "reference": "ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes Project management, 3",
        "textJa": "ステージゲート手法"
      }
    ]
  },
  {
    "number": "3.1724",
    "name": "general purpose input/output port (GPIO)",
    "definitions": [
      {
        "text": "generic pin (port) on a microcomputer whose function (whether it is an input or output pin) is not predefined and is user-controlle",
        "textJa": "機能 (入力ピンか出力ピンかどうか) が事前に定義されておらず、ユーザーが制御できるマイクロコンピューター上の汎用ピン (ポート)"
      }
    ]
  },
  {
    "number": "3.1725",
    "name": "general register",
    "definitions": [
      {
        "text": "register that stores both addresses and data",
        "textJa": "アドレスとデータの両方を格納するレジスタ"
      }
    ]
  },
  {
    "number": "3.1726",
    "name": "general system characteristics (GSCs)",
    "definitions": [
      {
        "text": "terminology for technical complexity adjustment factors",
        "reference": "ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10",
        "textJa": "技術的な複雑さの調整係数に関する用語"
      }
    ]
  },
  {
    "number": "3.1727",
    "name": "generality",
    "definitions": [
      {
        "text": "degree to which a system or component performs a broad range of functions",
        "textJa": "システムまたはコンポーネントが広範囲の機能を実行する度合い"
      }
    ],
    "confer": [
      "reusability"
    ]
  },
  {
    "number": "3.1728",
    "name": "generalization",
    "definitions": [
      {
        "text": "taxonomy in which instances of both entities represent the same real or abstract thing",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.66",
        "textJa": "両方の実体のインスタンスが同じ現実のものまたは抽象的なものを表す分類法"
      }
    ],
    "confer": [
      "categorization"
    ],
    "note": "One entity (the generic entity) represents the complete set of things and the other (category entity) represents a subtype or sub-classification of those things. The category entity can have one or more attributes, or relationships with instances of another entity, not shared by all generic entity instances. Each instance of the category entity is simultaneously an instance of the generic entity. [key style]",
    "noteJa": "1 つのエンティティ (一般エンティティ) は物事の完全なセットを表し、もう 1 つ (カテゴリ エンティティ) はそれらの物事のサブタイプまたは下位分類を表します。カテゴリ エンティティは、すべての汎用エンティティ インスタンスで共有されるわけではない、1 つ以上の属性、または別のエンティティのインスタンスとの関係を持つことができます。カテゴリ エンティティの各インスタンスは同時に汎用エンティティのインスタンスでもあります。 【キースタイル】"
  },
  {
    "number": "3.1729",
    "name": "generalization structure",
    "definitions": [
      {
        "text": "connection between a superclass and one of its more specific, immediate subclasses",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.69",
        "textJa": "スーパークラスと、そのより具体的な直接のサブクラスの 1 つとの間の接続"
      }
    ]
  },
  {
    "number": "3.1730",
    "name": "generalization taxonomy",
    "definitions": [
      {
        "text": "set of generalization structures with a common generic ancestor",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.70",
        "textJa": "共通のジェネリック祖先を持つ一般化構造のセット"
      }
    ],
    "alias": [
      "generalization hierarchy",
      "generalization network"
    ],
    "note": "In a generalization taxonomy every instance is fully described by one or more of the classes in the taxonomy. The structuring of classes as a generalization taxonomy determines the inheritance of responsibilities among classes.",
    "noteJa": "一般化分類では、すべてのインスタンスは分類内の 1 つ以上のクラスによって完全に記述されます。一般化分類法としてのクラスの構造化により、クラス間の責任の継承が決まります。"
  },
  {
    "number": "3.1731",
    "name": "generalize",
    "definitions": [
      {
        "text": "saying that a subclass s generalizes to a superclass C means that every instance of class s is also an instance of class C",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.66",
        "textJa": "サブクラス s がスーパークラス C に一般化されるということは、クラス s のすべてのインスタンスがクラス C のインスタンスでもあることを意味します。"
      }
    ],
    "note": "Generalization is fundamentally different from a relationship, which can associate distinct instances.",
    "noteJa": "一般化は、個別のインスタンスを関連付けることができる関係とは根本的に異なります。"
  },
  {
    "number": "3.1732",
    "name": "generally accepted",
    "definitions": [
      {
        "text": "knowledge to be included in the study material of a software engineering licensing exam that a graduate would pass after completing four years of work experience",
        "reference": "ISO/IEC TR 19759:2016, Software Engineering — Guide to the Software Engineering Body of Knowledge (SWEBOK)",
        "textJa": "卒業生が 4 年間の実務経験を経た後に合格するソフトウェア エンジニアリング ライセンス試験の教材に含まれる知識"
      }
    ]
  },
  {
    "number": "3.1733",
    "name": "generated address",
    "definitions": [
      {
        "text": "address that has been calculated during the execution of a computer program",
        "textJa": "コンピュータプログラムの実行中に計算されたアドレス"
      }
    ],
    "alias": [
      "synthetic address"
    ],
    "confer": [
      "absolute address",
      "effective address",
      "relative address",
      "indirect address"
    ]
  },
  {
    "number": "3.1734",
    "name": "generation",
    "definitions": [
      {
        "text": "act of defining and describing a methodology from a particular metamodel",
        "reference": "ISO/IEC 24744:2014 Software Engineering — Metamodel for development methodologies, 3.8",
        "textJa": "特定のメタモデルから方法論を定義および記述する行為"
      }
    ],
    "note": "Generating a methodology includes explaining the structural position and semantics of each methodology element using the selected metamodel. Thus, what methodology elements are possible, and how they relate to each other, are constrained by such a metamodel. Usually, method engineers perform generation, yielding a complete and usable methodology.",
    "noteJa": "方法論の生成には、選択したメタモデルを使用して各方法論要素の構造的位置とセマンティクスを説明することが含まれます。したがって、どのような方法論要素が可能か、そしてそれらがどのように相互に関係するかは、そのようなメタモデルによって制約されます。通常、メソッド エンジニアは生成を実行し、完全で使用可能な方法論を生成します。"
  },
  {
    "number": "3.1735",
    "name": "generic ancestor (of a class)",
    "definitions": [
      {
        "text": "superclass that is either an immediate superclass of the class or a generic ancestor of one of the superclasses of the class",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.71",
        "textJa": "クラスの直接のスーパークラス、またはクラスのスーパークラスのいずれかのジェネリック祖先であるスーパークラス"
      }
    ],
    "confer": [
      "reflexive ancestor"
    ]
  },
  {
    "number": "3.1736",
    "name": "generic entity",
    "definitions": [
      {
        "text": "entity whose instances are classified into one or more subtypes or subclassifications (category entities)",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.72",
        "textJa": "インスタンスが 1 つ以上のサブタイプまたは下位分類に分類されるエンティティ (カテゴリ エンティティ)"
      }
    ],
    "confer": [
      "superclass",
      "supertype"
    ],
    "note": "[key style]",
    "noteJa": "【キースタイル】"
  },
  {
    "number": "3.1737",
    "name": "generic practice",
    "definitions": [
      {
        "text": "activity that, when consistently performed, contributes to the achievement of a specific process attribute",
        "reference": "ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.3.6",
        "textJa": "一貫して実行されると、特定のプロセス属性の達成に貢献するアクティビティ"
      }
    ]
  },
  {
    "number": "3.1738",
    "name": "generic profile group",
    "definitions": [
      {
        "text": "profile group applicable to very small entities (VSEs) that do not develop critical systems or software products and have typical situational factors",
        "reference": "ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.28; ISO/IEC TR 29110-1:2016 Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 1: Overview, 2.9",
        "textJa": "重要なシステムやソフトウェア製品を開発しておらず、典型的な状況要因を持つ非常に小規模な事業体 (VSE) に適用されるプロファイル グループ"
      }
    ]
  },
  {
    "number": "3.1739",
    "name": "generic program unit",
    "definitions": [
      {
        "text": "software module that is defined in a general manner and that requires substitution of specific data, instructions, or both, in order to be used in a computer program",
        "textJa": "一般的な方法で定義され、コンピュータ プログラムで使用するために特定のデータ、命令、またはその両方を置き換える必要があるソフトウェア モジュール"
      }
    ],
    "confer": [
      "instantiation"
    ]
  },
  {
    "number": "3.1740",
    "name": "GFE",
    "definitions": [
      {
        "text": "government-furnished equipment",
        "reference": "IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.2",
        "textJa": "政府支給の設備"
      }
    ]
  },
  {
    "number": "3.1741",
    "name": "GFI",
    "definitions": [
      {
        "text": "government-furnished information",
        "reference": "IEEE 1517-2010 IEEE Standard for Information Technology — System and software life cycle processes — Reuse processes, 3.2",
        "textJa": "政府提供の情報"
      }
    ]
  },
  {
    "number": "3.1742",
    "name": "GIF",
    "definitions": [
      {
        "text": "General Interworking Framework",
        "reference": "ISO/IEC 14752:2000 Information technology — Open Distributed Processing — Protocol support for computational interactions, 4",
        "textJa": "一般的なインターワーキングフレームワーク"
      },
      {
        "text": "Graphics Interchange Format",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 5",
        "textJa": "グラフィックス交換フォーマット"
      }
    ]
  },
  {
    "number": "3.1743",
    "name": "GIOP",
    "definitions": [
      {
        "text": "General Inter-ORB Protocol",
        "reference": "ISO/IEC 19500-2:2012 Information technology — Object Management Group Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3",
        "textJa": "一般的な ORB 間プロトコル"
      }
    ]
  },
  {
    "number": "3.1744",
    "name": "glass box",
    "definitions": [
      {
        "text": "system or component whose internal contents or implementation are known",
        "textJa": "内部の内容や実装が既知であるシステムまたはコンポーネント"
      },
      {
        "text": "pertaining to an approach that treats a system or component as in (1)",
        "textJa": "システムまたはコンポーネントを (1) のように扱うアプローチに関するもの"
      }
    ],
    "alias": [
      "white box"
    ],
    "confer": [
      "black box"
    ]
  },
  {
    "number": "3.1745",
    "name": "global attribute",
    "definitions": [
      {
        "text": "condition when the attributes that describe the foreign keys are the same attributes (and attribute values) as those describing the associated candidate key",
        "reference": "ISO/IEC 15476-4:2005 Information technology — CDIF semantic metamodel — Part 4: Data models, 6.10",
        "textJa": "外部キーを記述する属性が、関連する候補キーを記述する属性 (および属性値) と同じである場合の条件"
      }
    ]
  },
  {
    "number": "3.1746",
    "name": "global compaction",
    "definitions": [
      {
        "text": "in microprogramming, compaction in which microoperations can be moved beyond the boundaries of the single-entry, single-exit sequential blocks in which they occ",
        "textJa": "マイクロプログラミングにおいて、マイクロ操作が実行される単一入口、単一出口の順次ブロックの境界を越えてマイクロ操作を移動できる圧縮。"
      }
    ],
    "confer": [
      "local compaction"
    ]
  },
  {
    "number": "3.1747",
    "name": "global data",
    "definitions": [
      {
        "text": "data that can be accessed by two or more non-nested modules of computer program without being explicitly passed as parameters between the modules",
        "textJa": "モジュール間でパラメーターとして明示的に渡されることなく、コンピュータ プログラムの 2 つ以上の入れ子になっていないモジュールからアクセスできるデータ"
      }
    ],
    "alias": [
      "common data"
    ],
    "confer": [
      "local data"
    ]
  },
  {
    "number": "3.1748",
    "name": "global label",
    "definitions": [
      {
        "text": "label associated with the net graph itself, rather than with an object of a net graph",
        "reference": "ISO/IEC 15909-2:2011 Software and system engineering — High-level Petri nets — Part 2: Transfer format, 4.1.4",
        "textJa": "ネット グラフのオブジェクトではなく、ネット グラフ自体に関連付けられたラベル"
      }
    ]
  },
  {
    "number": "3.1749",
    "name": "global navigation",
    "definitions": [
      {
        "text": "set of navigation links available on all pages of a website",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.11",
        "textJa": "Web サイトのすべてのページで利用可能なナビゲーション リンクのセット"
      }
    ]
  },
  {
    "number": "3.1750",
    "name": "global variable",
    "definitions": [
      {
        "text": "variable that can be accessed by two or more non-nested modules of a computer program without being explicitly passed as a parameter between the modules",
        "textJa": "モジュール間でパラメーターとして明示的に渡されることなく、コンピューター プログラムの 2 つ以上の入れ子になっていないモジュールからアクセスできる変数"
      }
    ],
    "confer": [
      "local variable"
    ]
  },
  {
    "number": "3.1751",
    "name": "globally unique identifier (GUID)",
    "definitions": [
      {
        "text": "16-byte string of characters that is generated in a manner that gives a high probability that the string is unique in any context",
        "reference": "ISO/IEC 19770-5:2015 Information technology — IT asset management — Part 5: Overview and vocabulary, 3.16",
        "textJa": "文字列がどのようなコンテキストでも一意である可能性が高い方法で生成される 16 バイトの文字列。"
      }
    ],
    "note": "GUID as an all capitalized term refers specifically to the 16-byte version. If the term is in lowercase (guid), it refers to a general algorithm that can use either a URI or a 16-byte-based identifie",
    "noteJa": "すべて大文字の GUID は、特に 16 バイト バージョンを指します。用語が小文字 (guid) の場合、URI または 16 バイトベースの ID を使用できる一般的なアルゴリズムを指します。"
  },
  {
    "number": "3.1752",
    "name": "glossary",
    "definitions": [
      {
        "text": "collection of the names and narrative descriptions of all terms that can be used for defined concepts within an environment",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.73",
        "textJa": "環境内で定義された概念に使用できるすべての用語の名前と説明のコレクション"
      },
      {
        "text": "set of definitions that includes arrow labels and box names used in an IDEF0 model",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.55",
        "textJa": "IDEF0 モデルで使用される矢印ラベルとボックス名を含む一連の定義"
      }
    ]
  },
  {
    "number": "3.1753",
    "name": "glossary page",
    "definitions": [
      {
        "text": "model page that contains definitions for the arrow labels and box names in a specific diagram",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.56",
        "textJa": "特定の図の矢印ラベルとボックス名の定義を含むモデル ページ"
      }
    ]
  },
  {
    "number": "3.1754",
    "name": "go to",
    "definitions": [
      {
        "text": "computer program statement that causes a jump",
        "textJa": "ジャンプを引き起こすコンピュータープログラムのステートメント"
      }
    ],
    "confer": [
      "call",
      "case",
      "if-then-else branch"
    ]
  },
  {
    "number": "3.1755",
    "name": "goal",
    "definitions": [
      {
        "text": "intended outcome",
        "reference": "ISO/IEC TR 25060:2010 Systems and software engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability: General framework for usability-related information, 2.7",
        "textJa": "意図された結果"
      },
      {
        "text": "intended outcome of user interaction with a product [ISO/IEC 25062:2006 Software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability test reports, 4.8] [SOURCE: ISO 9241-11",
        "textJa": "ユーザーと製品の対話によって意図された結果 [ISO/IEC 25062:2006 ソフトウェア エンジニアリング — ソフトウェア製品の品質要件および評価 (SQuaRE) — ユーザビリティ テスト レポート用の業界共通フォーマット (CIF)、4.8] [出典: ISO 9241-11"
      }
    ]
  },
  {
    "number": "3.1756",
    "name": "GOTS",
    "definitions": [
      {
        "text": "government-off-the-shel",
        "textJa": "政府の枠外"
      }
    ]
  },
  {
    "number": "3.1757",
    "name": "governance",
    "definitions": [
      {
        "text": "the process of establishing and enforcing strategic goals and objectives, organizational policies, and performance parameters",
        "reference": "Software Extension to the PMBOK® Guide Fifth Edition",
        "textJa": "戦略的目標と目標、組織ポリシー、およびパフォーマンスパラメータを確立および実行するプロセス"
      }
    ]
  },
  {
    "number": "3.1758",
    "name": "Government-off-the-Shelf",
    "definitions": [
      {
        "text": "software supplied by the government for reuse in another project",
        "textJa": "別のプロジェクトで再利用するために政府が提供するソフトウェア"
      }
    ],
    "alias": [
      "GOTS"
    ],
    "confer": [
      "COTS"
    ]
  },
  {
    "number": "3.1759",
    "name": "GPIO",
    "definitions": [
      {
        "text": "general-purpose input/output por",
        "textJa": "汎用入出力ポート"
      }
    ]
  },
  {
    "number": "3.1760",
    "name": "grade",
    "definitions": [
      {
        "text": "a category or rank used to distinguish items that have the same functional use (e.g., \"hammer\"), but do not share the same requirements for quality (e.g., different hammers may need to withstand different amounts of force).",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "同じ機能的用途（例：「ハンマー」）を持つアイテムを区別するために使用されるカテゴリーまたはランク。ただし、品質要件は同じではない（例：異なるハンマーは異なる量の力に耐える必要がある場合がある）。"
      }
    ]
  },
  {
    "number": "3.1761",
    "name": "granularity",
    "definitions": [
      {
        "text": "depth or level of detail at which data is collected",
        "textJa": "データが収集される深さまたは詳細レベル"
      }
    ]
  },
  {
    "number": "3.1762",
    "name": "graph",
    "definitions": [
      {
        "text": "diagram that represents the variation of a variable in comparison with that of one or more other variables",
        "textJa": "1 つまたは複数の他の変数と比較した変数の変動を表す図"
      },
      {
        "text": "diagram or other representation consisting of a finite set of nodes and internode connections called edges or arcs",
        "textJa": "ノードとエッジまたはアークと呼ばれるノード間接続の有限セットで構成される図またはその他の表現"
      }
    ],
    "example": "graph showing a bathtub curve",
    "exampleJa": "バスタブ曲線を示すグラフ"
  },
  {
    "number": "3.1763",
    "name": "graphical information",
    "definitions": [
      {
        "text": "information defining the graphical appearance of objects and labels of a net graph, which can be the position, size, line color, fill color, font, or line width",
        "reference": "ISO/IEC 15909-2:2011 Software and system engineering — High-level Petri nets — Part 2: Transfer format, 4.1.3",
        "textJa": "ネット グラフのオブジェクトとラベルのグラフィックの外観を定義する情報。位置、サイズ、線の色、塗りつぶしの色、フォント、または線の幅などです。"
      }
    ]
  },
  {
    "number": "3.1764",
    "name": "GraphicSymbol",
    "definitions": [
      {
        "text": "reference to a particular image or drawing for representing a particular software behavior concept instance",
        "reference": "IEEE 1175.3-2004 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying Software Behavior",
        "textJa": "特定のソフトウェア動作概念インスタンスを表すための特定の画像または図面への参照"
      }
    ]
  },
  {
    "number": "3.1765",
    "name": "Grosch's law",
    "definitions": [
      {
        "text": "guideline formulated by H. R. J. Grosch, stating that the computing power of a computer increases proportionally to the square of the cost of the computer",
        "textJa": "H. R. J. Grosch によって策定されたガイドラインで、コンピュータの計算能力はコンピュータのコストの 2 乗に比例して増加すると述べています。"
      }
    ],
    "confer": [
      "computer performance evaluation"
    ]
  },
  {
    "number": "3.1766",
    "name": "ground rules",
    "definitions": [
      {
        "text": "list of acceptable and unacceptable behaviors adopted by a project team to improve working relationships, effectiveness, and communication",
        "textJa": "仕事上の関係、効率性、コミュニケーションを改善するためにプロジェクト チームが採用する許容可能な行動と許容できない行動のリスト"
      },
      {
        "text": "expectations regarding acceptable behavior by project team members",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクト チームのメンバーによる許容可能な行動に関する期待"
      }
    ]
  },
  {
    "number": "3.1767",
    "name": "group",
    "definitions": [
      {
        "text": "number of model elements regarded as a unit formed by traceability relationships to a single distinct element",
        "reference": "ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4",
        "textJa": "単一の異なる要素へのトレーサビリティ関係によって形成される単位と見なされるモデル要素の数"
      }
    ]
  },
  {
    "number": "3.1768",
    "name": "group creativity techniques",
    "definitions": [
      {
        "text": "techniques that are used to generate ideas within a group of stakeholders",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "利害関係者のグループ内でアイデアを生み出すために使用されるテクニック"
      }
    ]
  },
  {
    "number": "3.1769",
    "name": "guarantee condition",
    "definitions": [
      {
        "text": "statement of the constraints that will be satisfied by output interaction occurrences and the next property state as a result of the occurrence of a particular behavior pattern",
        "reference": "IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.13",
        "textJa": "出力相互作用の発生と、特定の動作パターンの発生の結果としての次のプロパティの状態によって満たされる制約のステートメント"
      }
    ]
  },
  {
    "number": "3.1770",
    "name": "guard condition",
    "definitions": [
      {
        "text": "statement of the circumstances (input interaction occurrences and property state) that allow a stimulus to cause the occurrence of a particular behavior pattern",
        "reference": "IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.14",
        "textJa": "刺激が特定の行動パターンの発生を引き起こす状況（入力相互作用の発生と特性状態）の記述"
      }
    ]
  },
  {
    "number": "3.1771",
    "name": "GUI",
    "definitions": [
      {
        "text": "Graphical User Interface",
        "reference": "ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview",
        "textJa": "グラフィカルユーザーインターフェース"
      }
    ]
  },
  {
    "number": "3.1772",
    "name": "GUID",
    "definitions": [
      {
        "text": "globally unique identifier",
        "reference": "ISO/IEC 19770-5:2015 Information technology — IT asset management — Part 5: Overview and vocabulary, 3.16",
        "textJa": "グローバルに一意な識別子"
      }
    ]
  },
  {
    "number": "3.1773",
    "name": "guide",
    "definitions": [
      {
        "text": "document published by ISO or IEC giving rules, orientation, advice or recommendations relating to international standardization",
        "reference": "ISO/IEC TR 29110-1:2016 Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 1: Overview, 2.10",
        "textJa": "ISO または IEC によって発行され、国際標準化に関する規則、方向性、アドバイス、または推奨事項を規定する文書"
      }
    ],
    "confer": [
      "standard",
      "guideline"
    ],
    "note": "[ISO/IEC Directives, Part 2]",
    "noteJa": "[ISO/IEC 指令、パート 2]"
  },
  {
    "number": "3.1774",
    "name": "guideline",
    "definitions": [
      {
        "text": "an official recommendation or advice that indicates policies, standards, or procedures for how something should be accomplished",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "何かを達成する方法についてのポリシー、基準、または手順を示す公式の推奨事項またはアドバイス"
      }
    ],
    "confer": [
      "guide",
      "standard"
    ]
  },
  {
    "number": "3.1775",
    "name": "gull wing lead",
    "definitions": [
      {
        "text": "connector from the thin side of an integrated circuit package which extends out, down, and then out horizontally to allow it to be connected within a device",
        "textJa": "デバイス内で接続できるように、集積回路パッケージの薄い側から外側、下、そして水平方向に伸びるコネクタ。"
      }
    ],
    "note": "The bent shape is thought to resemble a bird wing.",
    "noteJa": "曲がった形状は鳥の翼に似ていると考えられています。"
  },
  {
    "number": "3.1776",
    "name": "hacker",
    "definitions": [
      {
        "text": "technically sophisticated computer enthusiast",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "技術的に洗練されたコンピューター愛好家"
      },
      {
        "text": "technically sophisticated computer enthusiast who uses his or her knowledge and means to gain unauthorized access to protected resources",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "技術的に洗練されたコンピュータ愛好家であり、自分の知識と手段を利用して、保護されたリソースへの不正アクセスを取得する"
      }
    ]
  },
  {
    "number": "3.1777",
    "name": "half duplex",
    "definitions": [
      {
        "text": "able to communicate data in both directions, but in only one direction at a time",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "データは両方向に通信できますが、一度に一方向のみです"
      }
    ],
    "confer": [
      "full duplex"
    ]
  },
  {
    "number": "3.1778",
    "name": "halt",
    "definitions": [
      {
        "text": "most commonly, a synonym for stop",
        "textJa": "最も一般的には、停止の同義語"
      },
      {
        "text": "less commonly, a synonym for pause",
        "textJa": "あまり一般的ではありませんが、一時停止の同義語"
      },
      {
        "text": "[HALT] highly accelerated life testing",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "[HALT]高加速寿命試験"
      }
    ]
  },
  {
    "number": "3.1779",
    "name": "hard copy",
    "definitions": [
      {
        "text": "permanent copy of a display image generated on an output unit such as a printer or a plotter, and which can be carried away",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "プリンタやプロッタなどの出力装置で生成され、持ち運ぶことができる表示イメージの永久コピー"
      }
    ]
  },
  {
    "number": "3.1780",
    "name": "hard failure",
    "definitions": [
      {
        "text": "failure that results in complete shutdown of a system",
        "textJa": "システムの完全なシャットダウンにつながる障害"
      }
    ],
    "confer": [
      "soft failure"
    ]
  },
  {
    "number": "3.1781",
    "name": "hardware",
    "definitions": [
      {
        "text": "physical equipment used to process, store, or transmit computer programs or data2. all or part of the physical components of an information system",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "コンピュータ プログラムまたはデータを処理、保存、または送信するために使用される物理装置2.情報システムの物理コンポーネントのすべてまたは一部"
      }
    ],
    "confer": [
      "software"
    ]
  },
  {
    "number": "3.1782",
    "name": "hardware configuration item (HCI)",
    "definitions": [
      {
        "text": "aggregation of hardware that is designated for configuration management and treated as a single entity in the configuration management process",
        "textJa": "構成管理用に指定され、構成管理プロセスにおいて単一のエンティティとして扱われるハードウェアの集合体"
      }
    ],
    "confer": [
      "software configuration item"
    ],
    "note": "An HCI exists where functional allocations have been made that clearly distinguish equipment functions from software functions and where the hardware has been established as a configuration item.",
    "noteJa": "HCI は、機器の機能とソフトウェアの機能を明確に区別して機能割り当てが行われ、ハードウェアが構成要素として確立されている場所に存在します。"
  },
  {
    "number": "3.1783",
    "name": "hardware description language (HDL)",
    "definitions": [
      {
        "text": "software programming language used to design and model hardware, especially digital logic circuits",
        "textJa": "ハードウェア、特にデジタル論理回路の設計とモデル化に使用されるソフトウェアプログラミング言語"
      }
    ],
    "alias": [
      "hardware design language"
    ],
    "example": "VHDL (IEEE 1076), Verilog (IEEE 1364)",
    "exampleJa": "VHDL (IEEE 1076)、Verilog (IEEE 1364)"
  },
  {
    "number": "3.1784",
    "name": "hardware engineering",
    "definitions": [
      {
        "text": "application of a systematic, disciplined, and quantifiable approach to design, implement, and maintain a tangible product by transforming a set of requirements that represent the collection of stakeholder needs, expectations, and constraints; using documented techniques and technology",
        "textJa": "利害関係者のニーズ、期待、制約の集まりを表す一連の要件を変換することにより、具体的な製品を設計、実装、維持するための体系的で規律ある定量化可能なアプローチの適用。文書化された手法とテクノロジーを使用する"
      }
    ],
    "confer": [
      "software engineering",
      "systems engineering"
    ]
  },
  {
    "number": "3.1785",
    "name": "hardware monitor",
    "definitions": [
      {
        "text": "device that measures or records specified events or characteristics of a computer system",
        "textJa": "コンピュータシステムの指定されたイベントまたは特性を測定または記録する装置"
      },
      {
        "text": "a software tool that records or analyzes hardware events during the execution of a computer program",
        "textJa": "コンピュータープログラムの実行中にハードウェアイベントを記録または分析するソフトウェアツール"
      }
    ],
    "example": "a device that counts the occurrences of various electrical events or measures the time between such events",
    "exampleJa": "さまざまな電気的イベントの発生をカウントしたり、そのようなイベント間の時間を測定したりする装置"
  },
  {
    "number": "3.1786",
    "name": "Harvard architecture",
    "definitions": [
      {
        "text": "computer architecture with physically separate communication paths for instructions and data",
        "textJa": "命令とデータ用に物理的に分離された通信パスを備えたコンピュータ アーキテクチャ"
      }
    ]
  },
  {
    "number": "3.1787",
    "name": "hazard",
    "definitions": [
      {
        "text": "intrinsic property or condition that has the potential to cause harm or damage",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1.11",
        "textJa": "危害や損害を引き起こす可能性のある固有の特性または状態"
      },
      {
        "text": "source of potential harm or a situation with a potential for harm in terms of human injury; damage to health, property, or the environment; or some combination of these",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1.11",
        "textJa": "潜在的な危害の原因、または人身傷害という点で危害が及ぶ可能性のある状況。健康、財産、環境への損害。またはこれらの組み合わせ"
      }
    ]
  },
  {
    "number": "3.1788",
    "name": "hazard identification",
    "definitions": [
      {
        "text": "process of recognizing that a hazard exists and defining its characteristics",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1.12",
        "textJa": "危険が存在することを認識し、その特徴を定義するプロセス"
      }
    ]
  },
  {
    "number": "3.1789",
    "name": "HCI",
    "definitions": [
      {
        "text": "human computer interface",
        "reference": "ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview",
        "textJa": "ヒューマンコンピュータインターフェース"
      },
      {
        "text": "hardware configuration item",
        "textJa": "ハードウェア構成アイテム"
      }
    ],
    "alias": [
      "HWCI"
    ]
  },
  {
    "number": "3.1790",
    "name": "HDD",
    "definitions": [
      {
        "text": "hardware design description",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.2",
        "textJa": "ハードウェア設計の説明"
      }
    ]
  },
  {
    "number": "3.1791",
    "name": "HDL",
    "definitions": [
      {
        "text": "hardware description language",
        "textJa": "ハードウェア記述言語"
      },
      {
        "text": "hardware design language",
        "textJa": "ハードウェア設計言語"
      }
    ],
    "confer": [
      "design language"
    ]
  },
  {
    "number": "3.1792",
    "name": "HDTV",
    "definitions": [
      {
        "text": "High Definition TV",
        "reference": "ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview",
        "textJa": "ハイビジョンテレビ"
      }
    ]
  },
  {
    "number": "3.1793",
    "name": "head",
    "definitions": [
      {
        "text": "forefront of a branch, which contains the evolving versions of the source tree",
        "textJa": "ブランチの最前線。ソース ツリーの進化するバージョンが含まれます。"
      }
    ],
    "note": "A release coming out of head will have the newest features but will also likely be unstable.",
    "noteJa": "突然リリースされるリリースには最新の機能が含まれますが、不安定になる可能性もあります。"
  },
  {
    "number": "3.1794",
    "name": "head action",
    "definitions": [
      {
        "text": "in a given activity, an action that has no predecessor",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.1.7",
        "textJa": "特定のアクティビティ内で、先行するものがないアクション"
      }
    ]
  },
  {
    "number": "3.1795",
    "name": "header",
    "definitions": [
      {
        "text": "block of comments placed at the beginning of a computer program or routine",
        "textJa": "コンピュータプログラムまたはルーチンの先頭に置かれるコメントのブロック"
      },
      {
        "text": "identification or control information placed at the beginning of a file or message",
        "textJa": "ファイルまたはメッセージの先頭に置かれる識別情報または制御情報"
      },
      {
        "text": "material repeated at the top of each page",
        "textJa": "各ページの上部に繰り返される資料"
      }
    ]
  },
  {
    "number": "3.1796",
    "name": "heading",
    "definitions": [
      {
        "text": "text that identifies the topic that will be covered in the following text",
        "textJa": "次のテキストで説明するトピックを識別するテキスト"
      }
    ]
  },
  {
    "number": "3.1797",
    "name": "health and safety risk mitigation",
    "definitions": [
      {
        "text": "degree to which a product or system mitigates the potential risk to people in the intended contexts of use",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.1.4.2",
        "textJa": "製品またはシステムが、意図された使用状況において人々に対する潜在的なリスクを軽減する程度"
      }
    ]
  },
  {
    "number": "3.1798",
    "name": "heavyweight process",
    "definitions": [
      {
        "text": "process with its own memory and multiple threads of control",
        "textJa": "独自のメモリと複数の制御スレッドを備えたプロセス"
      }
    ]
  },
  {
    "number": "3.1799",
    "name": "help system",
    "definitions": [
      {
        "text": "ancillary part of a program, or sometimes a separate program, that allows the user to view parts of the online documentation or help text on request",
        "textJa": "ユーザーが要求に応じてオンライン ドキュメントやヘルプ テキストの一部を表示できるようにする、プログラムの補助的な部分、または場合によっては別個のプログラム"
      }
    ],
    "confer": [
      "online documentation system"
    ]
  },
  {
    "number": "3.1800",
    "name": "hidden",
    "definitions": [
      {
        "text": "both private and protected",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.74",
        "textJa": "プライベートと保護の両方"
      }
    ],
    "confer": [
      "public",
      "private",
      "protected"
    ]
  },
  {
    "number": "3.1801",
    "name": "hierarchical decomposition",
    "definitions": [
      {
        "text": "type of modular decomposition in which a system is broken down into a hierarchy of components through a series of top-down refinement",
        "textJa": "一連のトップダウンの改良を通じてシステムをコンポーネントの階層に分割するモジュラー分解のタイプ"
      }
    ],
    "confer": [
      "functional decomposition",
      "stepwise refinement"
    ]
  },
  {
    "number": "3.1802",
    "name": "hierarchical modeling",
    "definitions": [
      {
        "text": "technique used in computer performance evaluation, in which a computer system is represented as a hierarchy of subsystems, the subsystems are analyzed to determine their performance characteristics, and the results are used to evaluate the performance of the overall system",
        "textJa": "コンピュータのパフォーマンス評価で使用される手法。コンピュータ システムがサブシステムの階層として表現され、サブシステムが分析されてそのパフォーマンス特性が決定され、その結果がシステム全体のパフォーマンスの評価に使用されます。"
      }
    ]
  },
  {
    "number": "3.1803",
    "name": "hierarchically consecutive",
    "definitions": [
      {
        "text": "unbroken unidirectional traversal of all nodes between two specified nodes in a tree",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.57",
        "textJa": "ツリー内の 2 つの指定されたノード間のすべてのノードの途切れることのない一方向の走査"
      }
    ]
  },
  {
    "number": "3.1804",
    "name": "hierarchy",
    "definitions": [
      {
        "text": "structure in which components are ranked into levels of subordination; each component has zero, one, or more subordinates; and no component has more than one superordinate component2. arrangement of model elements according to traceability relationships, where an element that owns or groups other elements is considered at a higher level than the owned (grouped) elements",
        "reference": "ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4",
        "textJa": "コンポーネントが従属レベルにランク付けされる構造。各コンポーネントには、0 個または 1 個以上の下位要素があります。また、複数の上位コンポーネントを持つコンポーネントはありません2。トレーサビリティ関係に従ったモデル要素の配置。他の要素を所有またはグループ化する要素は、所有される (グループ化された) 要素よりも高いレベルで考慮されます。"
      }
    ],
    "confer": [
      "hierarchical decomposition",
      "hierarchical modeling"
    ]
  },
  {
    "number": "3.1805",
    "name": "high level",
    "definitions": [
      {
        "text": "general; abstract",
        "textJa": "一般的な;抽象的な"
      }
    ]
  },
  {
    "number": "3.1806",
    "name": "high-level design",
    "definitions": [
      {
        "text": "process of defining the high-level concepts that guide low-level design and implementatio",
        "textJa": "下位レベルの設計と実装をガイドする上位レベルの概念を定義するプロセス"
      }
    ],
    "confer": [
      "architecture"
    ],
    "note": "High-level design typically involves organizing a system into subprograms and specifying the interfaces between them.",
    "noteJa": "一般に、高レベルの設計では、システムをサブプログラムに編成し、それらの間のインターフェイスを指定します。"
  },
  {
    "number": "3.1807",
    "name": "high-level net",
    "definitions": [
      {
        "text": "algebraic structure comprising a set of places; a set of transitions; a set of types; a function associating a type to each place, and a set of modes (a type) to each transition; pre-function imposing token demands (multisets of tokens) on places for each transition mode; post function determining output tokens (multisets of tokens) for places for each transition mode; and an initial marking",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.11",
        "textJa": "一連の場所を含む代数構造。一連のトランジション。タイプのセット。タイプを各場所に関連付け、モードのセット (タイプ) を各遷移に関連付ける関数。各遷移モードの場所にトークン要求 (トークンのマルチセット) を課す機能前。各遷移モードの場所の出力トークン (トークンのマルチセット) を決定するポスト関数。そしてイニシャルマーキング"
      }
    ]
  },
  {
    "number": "3.1808",
    "name": "high-level Petri Net graph",
    "definitions": [
      {
        "text": "net graph and its associated annotations comprising place types, arc annotations and transition conditions, and their corresponding definitions in a set of declarations, and an initial marking of the net",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.12",
        "textJa": "ネット グラフと、場所タイプ、アーク注釈、遷移条件で構成されるそれに関連する注釈、および一連の宣言内のそれらに対応する定義、およびネットの初期マーキング"
      }
    ]
  },
  {
    "number": "3.1809",
    "name": "high-order language (HOL)",
    "definitions": [
      {
        "text": "programming language that requires little knowledge of the computer on which a program will run, can be translated into several different machine languages, allows symbolic naming of operations and addresses, provides features designed to facilitate expression of data structures and program logic, and usually results in several machine instructions for each program statement",
        "textJa": "プログラムが実行されるコンピューターについての知識をほとんど必要としないプログラミング言語。いくつかの異なる機械語に翻訳でき、操作やアドレスに記号で名前を付けることができ、データ構造とプログラム ロジックの表現を容易にするように設計された機能を提供し、通常はプログラム ステートメントごとに複数の機械語命令が生成されます。"
      }
    ],
    "alias": [
      "high-level language",
      "higher order language",
      "third-generation language"
    ],
    "confer": [
      "assembly language",
      "fifth-generation language",
      "fourth-generation language",
      "machine language"
    ],
    "example": "Ada, COBOL, FORTRAN, ALGOL, PASCAL",
    "exampleJa": "Ada、COBOL、FORTRAN、ALGOL、PASCAL"
  },
  {
    "number": "3.1810",
    "name": "higher-level management",
    "definitions": [
      {
        "text": "person or persons who provide the policy and overall guidance for the process, but do not provide the direct day to-day monitoring and controlling of the proces",
        "textJa": "プロセスのポリシーと全体的なガイダンスを提供するが、プロセスの日常的な監視と制御を直接提供しない人"
      }
    ],
    "note": "Such persons belong to a level of management in the organization above the immediate level responsible for the process.",
    "noteJa": "このような人は、プロセスを担当する直属のレベルより上の組織内の管理レベルに属します。"
  },
  {
    "number": "3.1811",
    "name": "histogram",
    "definitions": [
      {
        "text": "a special form of bar chart used to describe the central tendency, dispersion, and shape of a statistical distribution",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "統計分布の中心傾向、分散、形状を説明するために使用される特別な形式の棒グラフ"
      }
    ]
  },
  {
    "number": "3.1812",
    "name": "historical information",
    "definitions": [
      {
        "text": "documents and data on prior projects including project files, records, correspondence, closed contracts, and closed projects",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクト ファイル、記録、通信、終了した契約、終了したプロジェクトなど、以前のプロジェクトに関する文書とデータ"
      }
    ]
  },
  {
    "number": "3.1813",
    "name": "HLL",
    "definitions": [
      {
        "text": "high-level language",
        "textJa": "高級言語"
      }
    ],
    "confer": [
      "high-order language"
    ]
  },
  {
    "number": "3.1814",
    "name": "HLPN",
    "definitions": [
      {
        "text": "High-level Petri Net",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.2.1",
        "textJa": "高度なペトリネット"
      }
    ]
  },
  {
    "number": "3.1815",
    "name": "HLPNG",
    "definitions": [
      {
        "text": "High-level Petri Net Graph",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.2.2",
        "textJa": "高レベルのペトリネットグラフ"
      }
    ]
  },
  {
    "number": "3.1816",
    "name": "HLPNS",
    "definitions": [
      {
        "text": "High-level Petri Net Schema",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets Part 1: Concepts, definitions and graphical notation, 2.2.3",
        "textJa": "高レベルのペトリネットスキーマ"
      }
    ]
  },
  {
    "number": "3.1817",
    "name": "HMI",
    "definitions": [
      {
        "text": "human-machine interfac",
        "textJa": "ヒューマンマシンインターフェース"
      }
    ],
    "confer": [
      "user interface"
    ]
  },
  {
    "number": "3.1818",
    "name": "HOL",
    "definitions": [
      {
        "text": "high-order language",
        "textJa": "高次言語"
      }
    ]
  },
  {
    "number": "3.1819",
    "name": "home page",
    "definitions": [
      {
        "text": "page of a website through which users typically enter the website, and whose URL is typically published or linked as the main web address of the site or organization",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.12",
        "textJa": "ユーザーが通常 Web サイトにアクセスする Web サイトのページで、その URL は通常、サイトまたは組織のメイン Web アドレスとして公開またはリンクされます。"
      }
    ],
    "alias": [
      "center page",
      "front page",
      "index page",
      "main page",
      "start page",
      "top page"
    ]
  },
  {
    "number": "3.1820",
    "name": "homogeneous redundancy",
    "definitions": [
      {
        "text": "in fault tolerance, realization of the same function with identical means",
        "textJa": "耐障害性において、同じ機能を同じ手段で実現すること"
      }
    ],
    "confer": [
      "diversity"
    ],
    "example": "use of two identical processors",
    "exampleJa": "2 つの同一のプロセッサの使用"
  },
  {
    "number": "3.1821",
    "name": "horizontal microinstruction",
    "definitions": [
      {
        "text": "microinstruction that specifies a set of simultaneous operations needed to carry out a given machine language instruction",
        "textJa": "特定の機械語命令を実行するために必要な一連の同時操作を指定するマイクロ命令"
      }
    ],
    "confer": [
      "diagonal microinstruction",
      "vertical microinstruction"
    ],
    "note": "Horizontal microinstructions are relatively long, often 64 bits or more, and are called 'horizontal' because the set of simultaneous operations that they specify are written on a single line, rather than being listed sequentially down the page.",
    "noteJa": "水平マイクロ命令は比較的長く、多くの場合 64 ビット以上で、指定する一連の同時操作がページの下に順番にリストされるのではなく、単一行に記述されるため、「水平」と呼ばれます。"
  },
  {
    "number": "3.1822",
    "name": "host machine",
    "definitions": [
      {
        "text": "computer on which a program or file is installed",
        "textJa": "プログラムまたはファイルがインストールされているコンピュータ"
      },
      {
        "text": "in a computer network, a computer that provides processing capabilities to users of the network",
        "textJa": "コンピュータ ネットワークにおいて、ネットワークのユーザーに処理機能を提供するコンピュータ"
      },
      {
        "text": "computer used to develop software intended for another computer",
        "textJa": "別のコンピュータ向けのソフトウェアを開発するために使用されるコンピュータ"
      },
      {
        "text": "computer used to emulate another computer",
        "textJa": "別のコンピュータをエミュレートするために使用されるコンピュータ"
      }
    ]
  },
  {
    "number": "3.1823",
    "name": "hostile backout",
    "definitions": [
      {
        "text": "backout done without prior arrangement by a committer other than the one who introduced the original change",
        "textJa": "元の変更を導入したコミッター以外のコミッターによって事前の取り決めなしに行われたバックアウト"
      }
    ],
    "note": "This is usually the opening shot in a commit war.",
    "noteJa": "これは通常、コミット戦争のオープニングショットです。"
  },
  {
    "number": "3.1824",
    "name": "housekeeping operation",
    "definitions": [
      {
        "text": "computer operation that establishes or reestablishes a set of initial conditions to facilitate the execution of a computer program",
        "textJa": "コンピュータープログラムの実行を容易にするために一連の初期条件を確立または再確立するコンピューター操作"
      }
    ],
    "alias": [
      "overhead operation"
    ],
    "example": "initializing storage areas, clearing flags, rewinding tapes, opening and closing files",
    "exampleJa": "ストレージ領域の初期化、フラグのクリア、テープの巻き戻し、ファイルの開閉"
  },
  {
    "number": "3.1825",
    "name": "HREF",
    "definitions": [
      {
        "text": "HTML reference designator",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 5",
        "textJa": "HTML参照指定子"
      }
    ]
  },
  {
    "number": "3.1826",
    "name": "HRS",
    "definitions": [
      {
        "text": "hardware requirements specification",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1",
        "textJa": "ハードウェア要件の仕様"
      }
    ]
  },
  {
    "number": "3.1827",
    "name": "HSI",
    "definitions": [
      {
        "text": "human systems integration",
        "reference": "ISO/IEC/IEEE 29148:2011 Systems and software engineering — Life cycle processes — Requirements engineering, 4.2",
        "textJa": "人間のシステム統合"
      }
    ]
  },
  {
    "number": "3.1828",
    "name": "HTML",
    "definitions": [
      {
        "text": "HyperText Markup Language",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 5",
        "textJa": "ハイパーテキストマークアップ言語"
      }
    ]
  },
  {
    "number": "3.1829",
    "name": "HTTP",
    "definitions": [
      {
        "text": "HyperText Transfer Protocol",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 5",
        "textJa": "ハイパーテキスト転送プロトコル"
      }
    ]
  },
  {
    "number": "3.1830",
    "name": "human resource management plan",
    "definitions": [
      {
        "text": "a component of the project or program management plan that describes how the roles and responsibilities, reporting relationships and staff management will be addressed and structured",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "役割と責任、報告関係、スタッフ管理がどのように対処され、構造化されるかを説明するプロジェクトまたはプログラム管理計画の構成要素。"
      }
    ],
    "alias": [
      "human resource plan"
    ]
  },
  {
    "number": "3.1831",
    "name": "human resource planning",
    "definitions": [
      {
        "text": "identification and documentation of project roles, responsibilities and reporting relationships, as well as estimation of required staff by time period and creation of a staffing management plan",
        "textJa": "プロジェクトの役割、責任、報告関係の特定と文書化、および期間ごとの必要なスタッフの見積もりと人員配置管理計画の作成"
      }
    ]
  },
  {
    "number": "3.1832",
    "name": "human systems engineering",
    "definitions": [
      {
        "text": "activities involved throughout the system life cycle that address the human element of system design (including usability, measures of effectiveness, measures of performance, and total ownership cost)",
        "textJa": "システム設計の人的要素 (ユーザビリティ、有効性の測定、パフォーマンスの測定、および総所有コストを含む) に対処する、システムのライフサイクル全体に関わる活動"
      }
    ],
    "note": "These activities include the definition and synthesis of manpower, personnel, training, human engineering, health hazards, and safety issues.",
    "noteJa": "これらの活動には、マンパワー、人員、トレーニング、人間工学、健康上の危険、および安全問題の定義と統合が含まれます。"
  },
  {
    "number": "3.1833",
    "name": "human systems integration (HSI)",
    "definitions": [
      {
        "text": "interdisciplinary technical and management process for integrating human considerations with and across all system elements, an essential enabler to systems engineering practice",
        "reference": "ISO/IEC/IEEE 29148:2011 Systems and software engineering — Life cycle processes — Requirements engineering, 4.1.11",
        "textJa": "人間の考慮事項をすべてのシステム要素に統合するための学際的な技術および管理プロセスであり、システム エンジニアリングの実践を可能にする重要な要素です。"
      }
    ]
  },
  {
    "number": "3.1834",
    "name": "human-centered design",
    "definitions": [
      {
        "text": "approach to system design and development that aims to make interactive systems more usable by focusing on the use of the system; applying human factors, ergonomics and usability knowledge and techniques",
        "reference": "ISO/IEC 25063:2014 Systems and software engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) Common Industry Format (CIF) for usability: Context of use description, 3.6",
        "textJa": "システムの使用に焦点を当て、対話型システムをより使いやすくすることを目的としたシステム設計および開発のアプローチ。ヒューマンファクター、人間工学、ユーザビリティの知識と技術を適用する"
      }
    ],
    "alias": [
      "user-centered design"
    ],
    "note": "The term \"human-centered design\" is used rather than \"user-centered design\" to emphasize that design impact a number of stakeholders, not just those typically considered as users. However, in practice, these terms are often used synonymously. Usable systems can provide a number of benefits including improved productivity, enhanced user well-being, avoidance of stress, increased accessibility, and reduced risk of harm.",
    "noteJa": "「ユーザー中心のデザイン」ではなく「人間中心のデザイン」という用語は、デザインが一般的にユーザーと見なされる人々だけでなく、多くの関係者に影響を与えることを強調するために使用されます。ただし、実際には、これらの用語は同義的に使用されることがよくあります。使用可能なシステムは、生産性の向上、ユーザーの幸福度の向上、ストレスの回避、アクセシビリティの向上、危害のリスクの軽減など、多くの利点をもたらします。"
  },
  {
    "number": "3.1835",
    "name": "Hurwicz criterion",
    "definitions": [
      {
        "text": "in decision making under uncertainty, a method which gives each decision a value which is a weighted sum of its worst and best possible outcomes",
        "textJa": "不確実性の下での意思決定において、各決定に、考えられる最悪の結果と最良の結果の加重合計である値を与える方法"
      }
    ],
    "confer": [
      "maximax rule",
      "maximin rule",
      "minimax regret rule"
    ],
    "note": "allows the decision maker to account for optimistic and pessimistic views",
    "noteJa": "意思決定者が楽観的な見方と悲観的な見方を考慮できるようにする"
  },
  {
    "number": "3.1836",
    "name": "HW",
    "definitions": [
      {
        "text": "hardware",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.2",
        "textJa": "ハードウェア"
      }
    ]
  },
  {
    "number": "3.1837",
    "name": "HWCI",
    "definitions": [
      {
        "text": "hardware configuration item",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "ハードウェア構成アイテム"
      }
    ]
  },
  {
    "number": "3.1838",
    "name": "hybrid computer",
    "definitions": [
      {
        "text": "computer that integrates analog computer components and digital computer components by interconnection of digital-to-analog converters and analog-to-digital converters",
        "reference": "ISO/IEC 2382:2015, Information technolo Vocabulary",
        "textJa": "デジタル/アナログコンバーターとアナログ/デジタルコンバーターを相互接続することにより、アナログコンピューターコンポーネントとデジタルコンピューターコンポーネントを統合したコンピューター"
      }
    ],
    "note": "A hybrid computer can use or produce analog data and discrete data.",
    "noteJa": "ハイブリッド コンピューターは、アナログ データと離散データを使用または生成できます。"
  },
  {
    "number": "3.1839",
    "name": "hybrid coupling",
    "definitions": [
      {
        "text": "type of coupling in which different subsets of the range of values that a data item can assume are used for different and unrelated purposes in different software modules",
        "textJa": "データ項目が想定できる値の範囲の異なるサブセットが、異なるソフトウェア モジュールで異なる無関係な目的に使用される結合のタイプ。"
      }
    ],
    "confer": [
      "common-environment coupling",
      "content coupling",
      "control coupling",
      "data coupling",
      "pathological coupling"
    ]
  },
  {
    "number": "3.1840",
    "name": "I/O",
    "definitions": [
      {
        "text": "input/output",
        "textJa": "入出力"
      }
    ]
  },
  {
    "number": "3.1841",
    "name": "I/O task-structuring criteria",
    "definitions": [
      {
        "text": "category of the task-structuring criteria addressing how device interface objects are mapped to I/O tasks and when an I/O task is activated",
        "textJa": "デバイス インターフェイス オブジェクトが I/O タスクにどのようにマップされるか、および I/O タスクがいつアクティブ化されるかを指定するタスク構造基準のカテゴリ。"
      }
    ]
  },
  {
    "number": "3.1842",
    "name": "I2C",
    "definitions": [
      {
        "text": "inter-integrated circuit bu",
        "textJa": "集積回路間ユニット"
      }
    ],
    "alias": [
      "IIC"
    ]
  },
  {
    "number": "3.1843",
    "name": "IAP",
    "definitions": [
      {
        "text": "in-application programming",
        "textJa": "アプリケーション内プログラミング"
      }
    ]
  },
  {
    "number": "3.1844",
    "name": "IBa",
    "definitions": [
      {
        "text": "issue benchmarks activity",
        "reference": "ISO/IEC 29155-2:2013: Systems and software engineering — Information technology project performance benchmarking framework — Part 2: Requirements for benchmarking, 4",
        "textJa": "ベンチマーク活動を発行する"
      }
    ]
  },
  {
    "number": "3.1845",
    "name": "IBD",
    "definitions": [
      {
        "text": "information-based domain",
        "reference": "ISO/IEC 24744:2014 Software Engineering — Metamodel for development methodologies, 4.2",
        "textJa": "情報基盤領域"
      }
    ]
  },
  {
    "number": "3.1846",
    "name": "ICD",
    "definitions": [
      {
        "text": "initial capabilities document",
        "reference": "IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2",
        "textJa": "初期機能ドキュメント"
      }
    ]
  },
  {
    "number": "3.1847",
    "name": "ICE",
    "definitions": [
      {
        "text": "in-circuit emulato",
        "textJa": "インサーキットエミュレート"
      }
    ]
  },
  {
    "number": "3.1848",
    "name": "ICOM",
    "definitions": [
      {
        "text": "input, control, output, and mechanism",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.2",
        "textJa": "入力、制御、出力、機構"
      }
    ]
  },
  {
    "number": "3.1849",
    "name": "ICOM code",
    "definitions": [
      {
        "text": "expression in one diagram that unambiguously identifies an arrow segment in another diagram",
        "reference": "IEEE 1320.1- 1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.58",
        "textJa": "別の図の矢印セグメントを明確に識別する、ある図の式"
      }
    ],
    "alias": [
      "arrow reference"
    ],
    "note": "An ICOM code is used to associate a boundary arrow of a child diagram with an arrow attached to an ancestral box.",
    "noteJa": "ICOM コードは、子ダイアグラムの境界矢印を祖先ボックスに付加された矢印に関連付けるために使用されます。"
  },
  {
    "number": "3.1850",
    "name": "ICOM label",
    "definitions": [
      {
        "text": "arrow label attached without a squiggle directly to the arrowhead of an output boundary arrow or to the arrowtail of an input, control, or mechanism boundary arrow",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.59",
        "textJa": "波線なしで出力境界矢印の矢尻、または入力、コントロール、またはメカニズム境界矢印の矢尻に直接取り付けられた矢印ラベル"
      }
    ],
    "note": "An ICOM label associates a boundary arrow of a child diagram with an arrow label of an arrow attached to an ancestral box.",
    "noteJa": "ICOM ラベルは、子ダイアグラムの境界矢印を祖先ボックスに付けられた矢印の矢印ラベルに関連付けます。"
  },
  {
    "number": "3.1851",
    "name": "icon",
    "definitions": [
      {
        "text": "graphic displayed on the screen that represents a function of the computer system",
        "reference": "ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.22",
        "textJa": "コンピュータシステムの機能を表す画面に表示されるグラフィック"
      }
    ]
  },
  {
    "number": "3.1852",
    "name": "ICS",
    "definitions": [
      {
        "text": "Implementation Conformance Statement",
        "reference": "ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview",
        "textJa": "実装適合性宣言"
      }
    ]
  },
  {
    "number": "3.1853",
    "name": "ICT",
    "definitions": [
      {
        "text": "information and communication technology",
        "reference": "ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 5",
        "textJa": "情報通信技術"
      }
    ]
  },
  {
    "number": "3.1854",
    "name": "ICWG",
    "definitions": [
      {
        "text": "Interface Control Working Group",
        "reference": "ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes — Project management, 5",
        "textJa": "インターフェース制御ワーキンググループ"
      }
    ],
    "note": "Depending on the size and complexity of a project, can be a group of people, a single person or a function",
    "noteJa": "プロジェクトの規模と複雑さに応じて、グループ、個人、または機能のいずれかになります。"
  },
  {
    "number": "3.1855",
    "name": "IDD",
    "definitions": [
      {
        "text": "interface design document",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.2",
        "textJa": "インターフェース設計書"
      }
    ]
  },
  {
    "number": "3.1856",
    "name": "IDE",
    "definitions": [
      {
        "text": "integrated development environment",
        "textJa": "統合開発環境"
      }
    ]
  },
  {
    "number": "3.1857",
    "name": "idea/mind mapping",
    "definitions": [
      {
        "text": "technique used to consolidate ideas created through individual brainstorming sessions into a single map to reflect commonality and differences in understanding, and to generate new ideas",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "個々のブレインストーミング セッションを通じて作成されたアイデアを 1 つのマップに統合して、理解の共通点と相違点を反映し、新しいアイデアを生み出すために使用される手法"
      }
    ],
    "alias": [
      "idea mapping",
      "mind mapping"
    ]
  },
  {
    "number": "3.1858",
    "name": "ideal time",
    "definitions": [
      {
        "text": "a best-case estimate of the time needed for a developer or team to complete a task or deliver a feature",
        "reference": "Softwar Extension to the PMBOK® Guide Fifth Edition",
        "textJa": "開発者またはチームがタスクを完了するか、機能を提供するのに必要な時間の最良の場合の推定値"
      }
    ]
  },
  {
    "number": "3.1859",
    "name": "IDEF0 model",
    "definitions": [
      {
        "text": "abstractly, a hierarchical set of IDEF0 diagrams that depict, for a specific purpose and from a specific viewpoint, the functions of a system or subject area, along with supporting glossary, text, and For Exposition Only (FEO) information",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.60",
        "textJa": "抽象的には、サポートする用語集、テキスト、および説明専用 (FEO) 情報とともに、特定の目的および特定の視点から、システムまたは対象領域の機能を描写する IDEF0 図の階層セット。"
      }
    ],
    "note": "Concretely, a set of model pages that include at least an A-0 context diagram and an A0 decomposition diagram, a glossary or specific glossary pages, one or more text pages to accompany each diagram, and FEO pages and model pages of other types as needed.",
    "noteJa": "具体的には、少なくとも A-0 コンテキスト図と A0 分解図、用語集または特定の用語集ページ、各図に付随する 1 つ以上のテキスト ページ、および必要に応じて FEO ページと他のタイプのモデル ページを含むモデル ページのセット。"
  },
  {
    "number": "3.1860",
    "name": "IDEF1X model",
    "definitions": [
      {
        "text": "et of one or more IDEF1X views, often represented as view diagrams that depict the underlying semantics of the views, along with definitions of the concepts used in the views",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.75",
        "textJa": "1 つ以上の IDEF1X ビュー。多くの場合、ビューの基礎となるセマンティクスとビューで使用される概念の定義を示すビュー図として表されます。"
      }
    ]
  },
  {
    "number": "3.1861",
    "name": "identifier",
    "definitions": [
      {
        "text": "unambiguous name, in a given naming context",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 12.2",
        "textJa": "特定のネーミングコンテキストにおける明確な名前"
      },
      {
        "text": "name, address, label, or distinguishing index of an object in a computer program",
        "textJa": "コンピュータプログラム内のオブジェクトの名前、アドレス、ラベル、または識別インデックス"
      },
      {
        "text": "within an IDEF0 model, a model name, a box name, or an arrow label",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.61",
        "textJa": "IDEF0 モデル内、モデル名、ボックス名、または矢印ラベル"
      }
    ]
  },
  {
    "number": "3.1862",
    "name": "identify risks",
    "definitions": [
      {
        "text": "the process of determining which risks may affect the project and documenting their characteristics",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "どのリスクがプロジェクトに影響を与える可能性があるかを判断し、その特徴を文書化するプロセス"
      }
    ]
  },
  {
    "number": "3.1863",
    "name": "identify stakeholders",
    "definitions": [
      {
        "text": "the process of identifying the people, groups or organizations that could impact or be impacted by a decision, activity or outcome of the project, analyzing and documenting relevant information regarding their interests, involvement, interdependencies, influence, and potential impact on project success",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクトの意思決定、活動、結果に影響を与える可能性がある、または影響を受ける可能性のある人、グループ、または組織を特定し、その関心、関与、相互依存関係、プロジェクトの成功に対する影響、および潜在的な影響に関する関連情報を分析および文書化するプロセス"
      }
    ]
  },
  {
    "number": "3.1864",
    "name": "identifying relationship",
    "definitions": [
      {
        "text": "specific (not many-to-many) relationship in which every attribute in the primary key of the parent entity i contained in the primary key of the child entity",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.79",
        "textJa": "親エンティティの主キーのすべての属性が子エンティティの主キーに含まれる特定の (多対多ではない) 関係"
      }
    ],
    "confer": [
      "nonidentifying relationship [key style]"
    ]
  },
  {
    "number": "3.1865",
    "name": "identity",
    "definitions": [
      {
        "text": "inherent property of an instance that distinguishes it from all other instances",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.80",
        "textJa": "他のすべてのインスタンスと区別する、インスタンスの固有のプロパティ"
      }
    ],
    "note": "Identity is intrinsic to the instance and independent of the instance's property values or the classes to which the instance belongs.",
    "noteJa": "ID はインスタンスに固有のものであり、インスタンスのプロパティ値やインスタンスが属するクラスには依存しません。"
  },
  {
    "number": "3.1866",
    "name": "identity-style view",
    "definitions": [
      {
        "text": "view produced using the identity-style modeling constructs",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.81",
        "textJa": "アイデンティティスタイルのモデリング構造を使用して生成されたビュー"
      }
    ]
  },
  {
    "number": "3.1867",
    "name": "IDL",
    "definitions": [
      {
        "text": "Interface Definition Language",
        "reference": "ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview",
        "textJa": "インターフェース定義言語"
      }
    ]
  },
  {
    "number": "3.1868",
    "name": "idle",
    "definitions": [
      {
        "text": "pertaining to a system or component that is operational and in service, but not in use",
        "textJa": "稼働中でサービス中であるが、使用されていないシステムまたはコンポーネントに関するもの"
      }
    ],
    "confer": [
      "busy",
      "down",
      "up"
    ]
  },
  {
    "number": "3.1869",
    "name": "idle time",
    "definitions": [
      {
        "text": "period of time during which a system or component is operational and in service, but not in use",
        "textJa": "システムまたはコンポーネントが稼働およびサービス中であるが、使用されていない期間"
      }
    ],
    "alias": [
      "standby time"
    ],
    "confer": [
      "busy time",
      "down time",
      "set-up time",
      "up time"
    ]
  },
  {
    "number": "3.1870",
    "name": "IEC",
    "definitions": [
      {
        "text": "International Electrotechnical Commission",
        "reference": "ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes — Project management, 5",
        "textJa": "国際電気標準会議"
      }
    ]
  },
  {
    "number": "3.1871",
    "name": "IEEE",
    "definitions": [
      {
        "text": "Institute of Electrical and Electronics Engineers",
        "reference": "ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes — Project management, 3",
        "textJa": "電気電子学会"
      }
    ]
  },
  {
    "number": "3.1872",
    "name": "IETF",
    "definitions": [
      {
        "text": "Internet Engineering Task Force",
        "textJa": "インターネットエンジニアリングタスクフォース"
      }
    ]
  },
  {
    "number": "3.1873",
    "name": "if-then-else",
    "definitions": [
      {
        "text": "single-entry, single-exit two-way branch that defines a condition, specifies the processing to be performed if the condition is met and, optionally, if it is not, and returns control in both instances to the statement immediately following the overall construct",
        "textJa": "条件を定義する単一入口、単一出口の双方向分岐。条件が満たされた場合と、オプションで条件が満たされていない場合に実行される処理を指定し、両方のインスタンスの制御を構造全体の直後のステートメントに戻します。"
      }
    ],
    "confer": [
      "case",
      "jump",
      "go to",
      "dyadic selective construct",
      "monadic selective construct"
    ]
  },
  {
    "number": "3.1874",
    "name": "IFB",
    "definitions": [
      {
        "text": "invitation for bid",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "入札の招待状"
      }
    ]
  },
  {
    "number": "3.1875",
    "name": "iff",
    "definitions": [
      {
        "text": "if and only if",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.2.4",
        "textJa": "もし、そしてその場合に限り"
      }
    ]
  },
  {
    "number": "3.1876",
    "name": "IFPUG",
    "definitions": [
      {
        "text": "International Function Point Users Group",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009",
        "textJa": "国際ファンクションポイント利用者グループ"
      }
    ],
    "note": "membership governed, non-profit organization committed to promoting and supporting function point analysis and other software measurement techniques. The IFPUG maintains the definition of the direct descendent of the Albrecht 1984 FPA method",
    "noteJa": "メンバーシップによって管理される非営利団体で、ファンクション ポイント分析やその他のソフトウェア測定技術の促進とサポートに取り組んでいます。 IFPUG は、Albrecht 1984 FPA メソッドの直接の子孫の定義を維持しています。"
  },
  {
    "number": "3.1877",
    "name": "IIOP",
    "definitions": [
      {
        "text": "Internet Inter-ORB Protocol",
        "reference": "ISO/IEC 19500-2:2012 Information technology — Object Management Group Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3",
        "textJa": "インターネット ORB 間プロトコル"
      }
    ]
  },
  {
    "number": "3.1878",
    "name": "IIOP-IOR",
    "definitions": [
      {
        "text": "Internet Inter-ORB Protocol — Interoperable Object Reference",
        "reference": "ISO/IEC 14753:1999 Information technology Open Distributed Processing — Interface references and binding, 4",
        "textJa": "インターネット ORB 間プロトコル — 相互運用可能なオブジェクト リファレンス"
      }
    ]
  },
  {
    "number": "3.1879",
    "name": "ILF",
    "definitions": [
      {
        "text": "internal logical file",
        "reference": "ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 4; ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "内部論理ファイル"
      }
    ]
  },
  {
    "number": "3.1880",
    "name": "illustration",
    "definitions": [
      {
        "text": "graphic element set apart from the main body of text and normally cited within the main text.",
        "reference": "ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.23",
        "textJa": "テキストの本文とは別に設定され、通常は本文内で引用されるグラフィック要素。"
      }
    ],
    "note": "used as the generic term for tables, figures, exhibits, screen captures, flow charts, diagrams, drawings, icons, and other graphic elements",
    "noteJa": "表、図、展示物、スクリーン キャプチャ、フローチャート、図、図面、アイコン、およびその他のグラフィック要素の総称として使用されます。"
  },
  {
    "number": "3.1881",
    "name": "illustrative product",
    "definitions": [
      {
        "text": "non-functional product",
        "reference": "ISO/IEC TR 14759:1999 Software engineering — Mock up and prototype — A categorization of software mock up and prototype models and their use, 3.2 c)",
        "textJa": "機能しない製品"
      }
    ]
  },
  {
    "number": "3.1882",
    "name": "image processing",
    "definitions": [
      {
        "text": "use of a data processing system to create, scan, analyze, enhance, interpret, or display images",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "画像の作成、スキャン、分析、強化、解釈、または表示のためのデータ処理システムの使用"
      }
    ]
  },
  {
    "number": "3.1883",
    "name": "immediate data",
    "definitions": [
      {
        "text": "data contained in the address field of a computer instruction",
        "textJa": "コンピュータ命令のアドレスフィールドに含まれるデータ"
      }
    ],
    "confer": [
      "direct address",
      "indirect address",
      "n-level address",
      "immediate instruction"
    ]
  },
  {
    "number": "3.1884",
    "name": "immediate instruction",
    "definitions": [
      {
        "text": "computer instruction whose address fields contain the values of the operands rather than the operands' addresses",
        "textJa": "アドレスフィールドにオペランドのアドレスではなくオペランドの値が含まれるコンピュータ命令"
      }
    ],
    "confer": [
      "direct instruction",
      "indirect instruction",
      "absolute instruction",
      "effective instruction",
      "immediate data"
    ]
  },
  {
    "number": "3.1885",
    "name": "immunity",
    "definitions": [
      {
        "text": "degree to which a product or system is resistant to attack",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.6",
        "textJa": "製品またはシステムの攻撃に対する耐性の程度"
      }
    ],
    "confer": [
      "integrity"
    ]
  },
  {
    "number": "3.1886",
    "name": "immutable class",
    "definitions": [
      {
        "text": "class for which the set of instances is fixed; its instances do not come and go over time",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.82",
        "textJa": "インスタンスのセットが固定されているクラス。そのインスタンスは時間の経過とともに現れたり消えたりすることはありません"
      }
    ],
    "confer": [
      "mutable class",
      "value class"
    ]
  },
  {
    "number": "3.1887",
    "name": "IMP",
    "definitions": [
      {
        "text": "integrated master plan",
        "reference": "IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.2",
        "textJa": "統合マスタープラン"
      }
    ]
  },
  {
    "number": "3.1888",
    "name": "impact analysis",
    "definitions": [
      {
        "text": "identification of all system and software products that a change request affects and development of an estimate of the resources needed to accomplish the change",
        "textJa": "変更要求が影響するすべてのシステムおよびソフトウェア製品の特定と、変更を達成するために必要なリソースの見積もりの​​作成"
      }
    ],
    "note": "This includes determining the scope of the changes to plan and implement work, accurately estimating the resources needed to perform the work, and analyzing the requested changes' cost and benefits.",
    "noteJa": "これには、作業を計画および実装するための変更の範囲を決定すること、作業を実行するために必要なリソースを正確に見積もること、要求された変更のコストと利点を分析することが含まれます。"
  },
  {
    "number": "3.1889",
    "name": "imperative construct",
    "definitions": [
      {
        "text": "sequence of one or more steps not involving branching or iteration",
        "textJa": "分岐や反復を含まない 1 つ以上のステップのシーケンス"
      }
    ]
  },
  {
    "number": "3.1890",
    "name": "implementable standard",
    "definitions": [
      {
        "text": "template for a technology object",
        "reference": "ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 9.1.1",
        "textJa": "テクノロジーオブジェクトのテンプレート"
      }
    ]
  },
  {
    "number": "3.1891",
    "name": "implementation",
    "definitions": [
      {
        "text": "process of translating a design into hardware components, software components, or both",
        "textJa": "設計をハードウェア コンポーネント、ソフトウェア コンポーネント、またはその両方に変換するプロセス"
      },
      {
        "text": "result of the process in (1)3. definition that provides the information needed to create an object and allow the object to participate in providing an appropriate set of services.",
        "reference": "ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.2.8",
        "textJa": "（１）の処理結果３．オブジェクトを作成し、オブジェクトが適切なサービスのセットの提供に参加できるようにするために必要な情報を提供する定義。"
      },
      {
        "text": "installation and customization of packaged software",
        "textJa": "パッケージソフトのインストールとカスタマイズ"
      },
      {
        "text": "construction",
        "textJa": "工事"
      },
      {
        "text": "system development phase at the end of which the hardware, software and procedures of the system become operational",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "システム開発段階。システムのハードウェア、ソフトウェア、および手順が完了すると運用可能になります。"
      },
      {
        "text": "process of instantiation whose validity can be subject to test",
        "reference": "ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 9.1.2",
        "textJa": "有効性をテストすることができるインスタンス化のプロセス"
      },
      {
        "text": "(documentation) activity during which user documentation is created according to the design, tested, and revised",
        "reference": "ISO/IEC/IEEE 26512:2011 Systems and software engineering — Requirements for acquirers and suppliers of user documentation, 4.16",
        "textJa": "(ドキュメント) ユーザードキュメントが設計に従って作成され、テストされ、改訂されるアクティビティ"
      },
      {
        "text": "software life cycle process that contains activities of requirements analysis, design, coding, integration, testing, installation, and support for acceptance of software products",
        "reference": "ISO/IEC 90003:2014 Software engineering — Guidelines for the application of ISO 9001:2008 to computer software, 3.5",
        "textJa": "要件分析、設計、コーディング、統合、テスト、インストール、およびソフトウェア製品の受け入れサポートの活動を含むソフトウェア ライフ サイクル プロセス"
      }
    ],
    "confer": [
      "coding"
    ]
  },
  {
    "number": "3.1892",
    "name": "implementation phase",
    "definitions": [
      {
        "text": "period of time in the software life cycle during which a software product is created from design documentation and debugged",
        "textJa": "ソフトウェア ライフ サイクルのうち、ソフトウェア製品が設計ドキュメントから作成され、デバッグされる期間"
      }
    ]
  },
  {
    "number": "3.1893",
    "name": "implementation requirement",
    "definitions": [
      {
        "text": "requirement that specifies or constrains the coding or construction of a system or system component",
        "textJa": "システムまたはシステムコンポーネントのコーディングまたは構築を指定または制約する要件"
      }
    ],
    "confer": [
      "design requirement",
      "functional requirement",
      "interface requirement",
      "performance requirement",
      "physical requirement"
    ]
  },
  {
    "number": "3.1894",
    "name": "implementer",
    "definitions": [
      {
        "text": "organization that performs implementation tasks",
        "reference": "ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes, 4.15",
        "textJa": "実装タスクを実行する組織"
      }
    ],
    "confer": [
      "developer"
    ]
  },
  {
    "number": "3.1895",
    "name": "implied addressing",
    "definitions": [
      {
        "text": "method of addressing in which the operation field of a computer instruction implies the address of the operands",
        "textJa": "コンピュータ命令の演算フィールドがオペランドのアドレスを意味するアドレス指定方法"
      }
    ],
    "confer": [
      "direct address",
      "indirect address",
      "one-ahead addressing",
      "relative address",
      "repetitive addressing"
    ],
    "example": "If a computer has only one accumulator, an instruction that refers to the accumulator needs no address information describing it.",
    "exampleJa": "コンピュータにアキュムレータが 1 つしかない場合、アキュムレータを参照する命令にはそれを記述するアドレス情報は必要ありません。"
  },
  {
    "number": "3.1896",
    "name": "implied needs",
    "definitions": [
      {
        "text": "needs that have not been stated but are actual needs",
        "reference": "ISO/IEC 25000:2014 Systems and software Engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Guide to SQuaRE, 4.12",
        "textJa": "明示されていないが実際のニーズであるニーズ"
      }
    ],
    "example": "needs not stated but implied by other stated needs and needs not stated because they are considered to be evident or obvious.",
    "note": "Some implied needs only become evident when the system or software product is used in particular conditions.",
    "exampleJa": "ニーズは述べられていないが、他の述べられているニーズによって暗示されており、ニーズは明白または自明であると考えられているために述べられていない。",
    "noteJa": "暗黙のニーズの中には、システムまたはソフトウェア製品が特定の条件で使用された場合にのみ明らかになるものもあります。"
  },
  {
    "number": "3.1897",
    "name": "import process",
    "definitions": [
      {
        "text": "process of incorporating the content of a transfer file into a target environment",
        "reference": "ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.1",
        "textJa": "転送ファイルの内容をターゲット環境に組み込むプロセス"
      }
    ]
  },
  {
    "number": "3.1898",
    "name": "importer",
    "definitions": [
      {
        "text": "agent of the import process",
        "reference": "ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.1",
        "textJa": "輸入手続きの代理人"
      }
    ]
  },
  {
    "number": "3.1899",
    "name": "imposed date",
    "definitions": [
      {
        "text": "a fixed date imposed on a schedule activity or schedule milestone, usually in the form of a \"start no earlier than\" and \"finish no later than\" date",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "スケジュールアクティビティまたはスケジュールマイルストーンに課せられる固定日付。通常は「次の日付までに開始」および「次の日付までに終了」の形式で表されます。"
      }
    ]
  },
  {
    "number": "3.1900",
    "name": "impossible zone",
    "definitions": [
      {
        "text": "in a range of estimates, the region that is impossible under any circumstances to achieve",
        "textJa": "さまざまな推定の範囲内で、いかなる状況下でも達成することは不可能な領域"
      }
    ],
    "note": "For example, it is impossible to drive a car 500 miles in less than one hour, so the one-hour outcome for a 50 mile car trip is in the impossible zone for the estimate of how long it will take to drive 500 miles.",
    "noteJa": "たとえば、500 マイルの車を 1 時間未満で運転することは不可能であるため、50 マイルの車旅行の 1 時間の結果は、500 マイルの運転にかかる時間の見積もりでは不可能な領域にあります。"
  },
  {
    "number": "3.1901",
    "name": "improvability",
    "definitions": [
      {
        "text": "inherent ability of an organization to support continual process improvement",
        "reference": "ISO/IEC TR 33014:2013 Information technology — Process assessment — Guide for process improvement, 3.3",
        "textJa": "継続的なプロセス改善をサポートする組織の固有の能力"
      }
    ]
  },
  {
    "number": "3.1902",
    "name": "IMS",
    "definitions": [
      {
        "text": "integrated master schedule",
        "reference": "IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.2",
        "textJa": "統合されたマスタースケジュール"
      }
    ]
  },
  {
    "number": "3.1903",
    "name": "in-application programming (IAP)",
    "definitions": [
      {
        "text": "capability of a microcontroller unit to fetch new program code and reprogram itself while the system is operating",
        "textJa": "システムの動作中に新しいプログラム コードをフェッチして自身を再プログラムするマイクロコントローラー ユニットの機能"
      }
    ],
    "confer": [
      "in-system programming"
    ]
  },
  {
    "number": "3.1904",
    "name": "in-circuit emulator (ICE)",
    "definitions": [
      {
        "text": "hardware device used to debug the software of an embedded system",
        "textJa": "組み込みシステムのソフトウェアをデバッグするために使用されるハードウェア デバイス"
      }
    ]
  },
  {
    "number": "3.1905",
    "name": "in-system programming (ISP)",
    "definitions": [
      {
        "text": "capability of a microcontroller unit to allow the user to download new code (reprogram the unit), activated by restarting the unit",
        "textJa": "ユーザーが新しいコードをダウンロード (ユニットを再プログラム) できるようにするマイクロコントローラー ユニットの機能。ユニットを再起動することで有効になります。"
      },
      {
        "text": "a set of financial incentives related to cost, schedule, or technical performance of the seller",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "売り手のコスト、スケジュール、または技術的パフォーマンスに関連する一連の金銭的インセンティブ"
      }
    ],
    "confer": [
      "in-application programming incentive fee"
    ]
  },
  {
    "number": "3.1906",
    "name": "incident",
    "definitions": [
      {
        "text": "anomalous or unexpected event, set of events, condition, or situation at any time during the life cycle of a project, product, service, or system",
        "reference": "ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.22; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.21",
        "textJa": "プロジェクト、製品、サービス、またはシステムのライフサイクル中の任意の時点における、異常または予期しないイベント、一連のイベント、状態、または状況"
      },
      {
        "text": "unplanned interruption to a service or a reduction in the quality of a service at a specific time",
        "textJa": "特定の時間におけるサービスの計画外の中断またはサービスの品質の低下"
      }
    ],
    "confer": [
      "software test incident"
    ]
  },
  {
    "number": "3.1907",
    "name": "incident report",
    "definitions": [
      {
        "text": "documentation of the occurrence, nature, and status of an incident",
        "reference": "ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.18",
        "textJa": "インシデントの発生、性質、ステータスの文書化"
      }
    ],
    "confer": [
      "test incident report"
    ]
  },
  {
    "number": "3.1908",
    "name": "incipient failure",
    "definitions": [
      {
        "text": "failure that is about to occur",
        "textJa": "これから起こりそうな失敗"
      }
    ]
  },
  {
    "number": "3.1909",
    "name": "include",
    "definitions": [
      {
        "text": "in UML, a relationship from a base use case to an included use case specifying how the behavior defined for the included use case can be inserted into the behavior defined for the base use case",
        "textJa": "UML において、基本ユース ケースから含まれるユース ケースへの関係。含まれるユース ケースに対して定義された動作を、基本ユース ケースに対して定義された動作にどのように挿入できるかを指定します。"
      },
      {
        "text": "[information] having either the information or a reference to the information present in the document",
        "reference": "ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.12",
        "textJa": "[情報] 文書内に存在する情報または情報への参照のいずれかを含む"
      }
    ]
  },
  {
    "number": "3.1910",
    "name": "income function",
    "definitions": [
      {
        "text": "objective function that characterizes the income generated by different values of the decision variable",
        "textJa": "決定変数のさまざまな値によって生成される収入を特徴付ける目的関数"
      }
    ],
    "confer": [
      "cost function"
    ]
  },
  {
    "number": "3.1911",
    "name": "incomplete process",
    "definitions": [
      {
        "text": "process that is not performed or is performed only partially",
        "textJa": "実行されない、または部分的にのみ実行されるプロセス"
      }
    ],
    "note": "One or more of the specific goals of the process are not satisfied.",
    "noteJa": "プロセスの特定の目標の 1 つ以上が満たされていません。"
  },
  {
    "number": "3.1912",
    "name": "inconsistency ratio",
    "definitions": [
      {
        "text": "in analytic hierarchy process (AHP), a function that measures how consistently the decision analyst assigned the values to the pair-wise comparison",
        "textJa": "分析階層プロセス (AHP) において、意思決定アナリストが一対比較にどの程度一貫して値を割り当てたかを測定する関数"
      }
    ]
  },
  {
    "number": "3.1913",
    "name": "increment",
    "definitions": [
      {
        "text": "a tested, deliverable version of a software product that provides new or modified capabilities",
        "reference": "Software Extension to the PMBOK® Guide Fifth Edition",
        "textJa": "新しい機能または変更された機能を提供するソフトウェア製品のテスト済みの配布可能なバージョン"
      }
    ]
  },
  {
    "number": "3.1914",
    "name": "incremental analysis",
    "definitions": [
      {
        "text": "consideration of the relative differences between alternatives",
        "textJa": "選択肢間の相対的な違いの考慮"
      }
    ],
    "note": "If the incremental benefit of a second alternative over the first is more than the incremental investment between them, the second alternative is a better investment than the first.",
    "noteJa": "最初の選択肢に対する 2 番目の選択肢の増分利益が、それらの間の増分投資よりも大きい場合、2 番目の選択肢は最初の選択肢よりも優れた投資となります。"
  },
  {
    "number": "3.1915",
    "name": "incremental benefit",
    "definitions": [
      {
        "text": "additional income from one alternative compared to another",
        "textJa": "ある選択肢から別の選択肢と比べて追加の収入が得られる"
      }
    ],
    "note": "If Alternative A generates $10,000 and Alternative B generates $12,000, the incremental benefit between A and B is $2 000.",
    "noteJa": "代替案 A が 10,000 ドルを生成し、代替案 B が 12,000 ドルを生成した場合、A と B の間の増分利益は 2,000 ドルになります。"
  },
  {
    "number": "3.1916",
    "name": "incremental compiler",
    "definitions": [
      {
        "text": "compiler that completes as much of the translation of each source statement as possible during the input or scanning of the source statement",
        "textJa": "ソース ステートメントの入力またはスキャン中に、各ソース ステートメントの翻訳を可能な限り完了するコンパイラ"
      }
    ],
    "alias": [
      "conversational compiler",
      "interactive compiler",
      "online compiler"
    ],
    "note": "Typically used for online computer program development and checkout.",
    "noteJa": "通常、オンラインのコンピューター プログラムの開発とチェックアウトに使用されます。"
  },
  {
    "number": "3.1917",
    "name": "incremental development",
    "definitions": [
      {
        "text": "software development technique in which requirements definition, design, implementation, and testing occur in an overlapping, iterative (rather than sequential) manner, resulting in incremental completion of the overall software product",
        "textJa": "要件の定義、設計、実装、およびテストが (順次ではなく) 重複して反復的に行われ、結果としてソフトウェア製品全体が段階的に完成するソフトウェア開発手法"
      }
    ],
    "confer": [
      "waterfall model",
      "data structure-centered design",
      "input-process-output",
      "modular decomposition",
      "object-orien design"
    ]
  },
  {
    "number": "3.1918",
    "name": "incremental investment",
    "definitions": [
      {
        "text": "avoidable additional investment between one alternative and another",
        "textJa": "ある代替案と別の代替案の間で回避可能な追加投資"
      }
    ],
    "note": "If Alternative A costs $10 000 and Alternative B costs $12 000, the incremental investment between A and B is $2000.",
    "noteJa": "代替案 A のコストが 10,000 ドル、代替案 B のコストが 12,000 ドルの場合、A と B の間の増分投資は 2,000 ドルとなります。"
  },
  {
    "number": "3.1919",
    "name": "incremental life cycle",
    "definitions": [
      {
        "text": "a project life cycle where the project scope is generally determined early in the project lifecycle, but time and cost estimates are routinely modified as the project team understanding of the product increases. Iterations develop the product through a series of repeated cycles, while increments successively add to the functionality of the product",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクト ライフ サイクル。通常、プロジェクトのスコープはプロジェクト ライフサイクルの早い段階で決定されますが、プロジェクト チームの製品に対する理解が深まるにつれて、時間とコストの見積もりが定期的に変更されます。イテレーションでは、一連の繰り返されるサイクルを通じて製品が開発され、段階的に製品の機能が追加されます。"
      }
    ],
    "confer": [
      "iterative life cycle"
    ]
  },
  {
    "number": "3.1920",
    "name": "incremental productivity",
    "definitions": [
      {
        "text": "productivity computed periodically during development",
        "textJa": "開発中に定期的に計算される生産性"
      }
    ]
  },
  {
    "number": "3.1921",
    "name": "independence",
    "definitions": [
      {
        "text": "of software quality assurance (SQA), situation in which SQA is free from technical, managerial, and financial influences, intentional or unintentional",
        "reference": "IEEE 730-2014 IEEE Standard for Software Quality Assurance Processes, 3.2",
        "textJa": "ソフトウェア品質保証 (SQA) の状況、SQA が意図的か非意図的かにかかわらず、技術的、経営的、財務的影響を受けない状況"
      }
    ]
  },
  {
    "number": "3.1922",
    "name": "independent",
    "definitions": [
      {
        "text": "performed by an organization free from control by the supplier, developer, operator, or maintainer",
        "textJa": "サプライヤー、開発者、オペレーター、または保守担当者の制御を受けない組織によって実行される"
      }
    ]
  },
  {
    "number": "3.1923",
    "name": "independent entity",
    "definitions": [
      {
        "text": "entity for which each instance can be uniquely identified without determining its relationship to another entity",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.84",
        "textJa": "別のエンティティとの関係を判断することなく、各インスタンスを一意に識別できるエンティティ"
      }
    ],
    "alias": [
      "identifier-independent entity"
    ],
    "confer": [
      "dependent entity [key style]"
    ]
  },
  {
    "number": "3.1924",
    "name": "independent estimates",
    "definitions": [
      {
        "text": "a process of using a third party to obtain and analyze information to support prediction of cost, schedule or other items",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "第三者を利用してコスト、スケジュール、その他の項目の予測をサポートする情報を取得および分析するプロセス"
      }
    ]
  },
  {
    "number": "3.1925",
    "name": "independent evaluator",
    "definitions": [
      {
        "text": "individual or organization that performs an evaluation independently from developers and acquirers",
        "reference": "ISO/IEC 25040:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — Evaluation process, 4.30",
        "textJa": "開発者や買収者から独立して評価を行う個人または組織"
      }
    ],
    "note": "The individual or organization acting as developer or acquirer for the target system to be evaluated cannot become the independent evaluator for the system. The independent evaluator can be an organization.",
    "noteJa": "評価対象システムの開発者または取得者として活動する個人または組織は、システムの独立した評価者になることはできません。独立した評価者は組織である場合があります。"
  },
  {
    "number": "3.1926",
    "name": "independent state class",
    "definitions": [
      {
        "text": "state class that is not a dependent state class",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.85",
        "textJa": "依存状態クラスではない状態クラス"
      }
    ],
    "confer": [
      "dependent state class"
    ]
  },
  {
    "number": "3.1927",
    "name": "independent verification and validation (IV&V)",
    "definitions": [
      {
        "text": "verification and validation performed by an organization that is technically, managerially, and financially independent of the development organization",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1",
        "textJa": "開発組織から技術的、管理的、財務的に独立した組織によって実行される検証と検証"
      }
    ]
  },
  {
    "number": "3.1928",
    "name": "indexed address",
    "definitions": [
      {
        "text": "address that must be added to the contents of an index register to obtain the address of the storage location to be accessed",
        "textJa": "アクセスする記憶場所のアドレスを取得するためにインデックス レジスタの内容に追加する必要があるアドレス"
      }
    ],
    "confer": [
      "offset (2)",
      "relative address",
      "self-relative address"
    ]
  },
  {
    "number": "3.1929",
    "name": "indicative function point count",
    "definitions": [
      {
        "text": "an indication denoting the estimated size of an application or project, based exclusively on a conceptual data model or a data model in the third normal-form",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "概念的なデータ モデルまたは第 3 正規形のデータ モデルのみに基づいて、アプリケーションまたはプロジェクトの推定サイズを示す指標"
      }
    ]
  },
  {
    "number": "3.1930",
    "name": "indicator",
    "definitions": [
      {
        "text": "measure that provides an estimate or evaluation of specified attributes derived from a model with respect to defined information needs",
        "reference": "ISO/IEC/IEEE 15939:2017 Systems and software engineering — Measurement process, 3.10; ISO/IEC 25000:2014 Systems and software Engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Guide to SQuaRE, 4.13",
        "textJa": "定義された情報ニーズに関してモデルから導出された指定された属性の推定または評価を提供する尺度"
      },
      {
        "text": "device or variable that can be set to a prescribed state based on the results of a process or the occurrence of a specified condition",
        "textJa": "プロセスの結果または指定された条件の発生に基づいて、所定の状態に設定できるデバイスまたは変数"
      }
    ],
    "example": "a flag or semaphore",
    "exampleJa": "フラグまたはセマフォ"
  },
  {
    "number": "3.1931",
    "name": "indicator value",
    "definitions": [
      {
        "text": "numerical or categorical result assigned to an indicator",
        "reference": "ISO/IEC/IEEE 15939:2017 Systems and software engineering — Measurement process, 3.11",
        "textJa": "インジケーターに割り当てられた数値またはカテゴリの結果"
      }
    ]
  },
  {
    "number": "3.1932",
    "name": "indigenous error",
    "definitions": [
      {
        "text": "computer program error that has not been purposely inserted as part of an error-seeding proces",
        "textJa": "エラーシーディングプロセスの一部として意図的に挿入されていないコンピュータープログラムエラー"
      }
    ]
  },
  {
    "number": "3.1933",
    "name": "indirect address",
    "definitions": [
      {
        "text": "address that identifies the storage location of another address",
        "textJa": "別のアドレスの保存場所を識別するアドレス"
      }
    ],
    "alias": [
      "multilevel address"
    ],
    "confer": [
      "direct address",
      "immediate data",
      "indirect instruction",
      "n-level address"
    ],
    "note": "The designated storage location can contain the address of the desired operand or another indirect address; the chain of addresses eventually leads to the operand.",
    "noteJa": "指定された記憶場所には、目的のオペランドのアドレスまたは別の間接アドレスを含めることができます。アドレスのチェーンは最終的にオペランドにつながります。"
  },
  {
    "number": "3.1934",
    "name": "indirect instruction",
    "definitions": [
      {
        "text": "computer instruction that contains indirect addresses for its operands",
        "textJa": "オペランドの間接アドレスを含むコンピュータ命令"
      }
    ],
    "confer": [
      "direct instruction",
      "immediate instruction",
      "absolute instruction",
      "effective instruction"
    ]
  },
  {
    "number": "3.1935",
    "name": "indirect labor",
    "definitions": [
      {
        "text": "human effort that is not directly associated with the units being produced",
        "textJa": "生産される単位に直接関係しない人間の努力"
      }
    ],
    "confer": [
      "direct labor"
    ]
  },
  {
    "number": "3.1936",
    "name": "indirect measure",
    "definitions": [
      {
        "text": "measure of an attribute that is derived from measures of one or more other attributes",
        "textJa": "1 つ以上の他の属性の尺度から導出される属性の尺度"
      }
    ],
    "note": "An external measure of an attribute of a computing system (such as the response time to user input) is an indirect measure of attributes of the software as the measure will be influenced by attributes of the computing environment as well as attributes of the software.",
    "noteJa": "コンピューティング システムの属性の外部尺度 (ユーザー入力に対する応答時間など) は、ソフトウェアの属性だけでなくコンピューティング環境の属性にも影響を受けるため、ソフトウェアの属性の間接的な尺度です。"
  },
  {
    "number": "3.1937",
    "name": "indirect user",
    "definitions": [
      {
        "text": "person who receives output from a system, but does not interact with the system",
        "reference": "ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.3.6",
        "textJa": "システムから出力を受け取るが、システムと対話しない人"
      }
    ],
    "confer": [
      "direct user",
      "secondary user"
    ]
  },
  {
    "number": "3.1938",
    "name": "inductive assertion method",
    "definitions": [
      {
        "text": "a proof of correctness technique in which assertions are written describing program inputs, outputs, and intermediate conditions, a set of theorems is developed relating satisfaction of the input assertions to satisfaction of the output assertions, and the theorems are proved or disproved using proof by induction",
        "reference": "ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual",
        "textJa": "プログラムの入力、出力、および中間条件を記述するアサーションを記述し、入力アサーションの満足度を出力アサーションの満足度に関連付ける一連の定理を開発し、帰納法による証明を使用して定理が証明または反証される、正しさの証明手法。"
      }
    ]
  },
  {
    "number": "3.1939",
    "name": "infant mortality",
    "definitions": [
      {
        "text": "set of failures that occur during the early-failure period of a system or componen",
        "textJa": "システムまたはコンポーネントの初期故障期間中に発生する一連の故障"
      }
    ]
  },
  {
    "number": "3.1940",
    "name": "influence diagram",
    "definitions": [
      {
        "text": "a graphical representation of situations showing causal influences, time ordering of events, and other relationships among variables and outcomes",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "因果関係の影響、出来事の時間的順序、変数と結果間のその他の関係を示す状況のグラフィック表現"
      }
    ]
  },
  {
    "number": "3.1941",
    "name": "influencer",
    "definitions": [
      {
        "text": "persons or groups that are not directly related to the acquisition or use of the product, but, who can affect the course of the project, positively or negatively, due to their position in the customer organization",
        "textJa": "製品の取得や使用には直接関係しないが、顧客組織内での立場により、プロジェクトの進行にプラスまたはマイナスの影響を与える可能性がある個人またはグループ"
      }
    ],
    "confer": [
      "stakeholder"
    ]
  },
  {
    "number": "3.1942",
    "name": "informal testing",
    "definitions": [
      {
        "text": "testing conducted in accordance with test plans and procedures that have not been reviewed and approved by a customer, user, or designated level of management",
        "textJa": "顧客、ユーザー、または指定されたレベルの管理者によってレビューおよび承認されていないテスト計画および手順に従って実施されたテスト"
      }
    ],
    "confer": [
      "formal testing"
    ]
  },
  {
    "number": "3.1943",
    "name": "information",
    "definitions": [
      {
        "text": "knowledge that is exchangeable amongst users, about things, facts, concepts, and so on, in a universe of discourse",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 3.2.6",
        "textJa": "言説の世界において、物事、事実、概念などについて、ユーザー間で交換可能な知識"
      },
      {
        "text": "In information processing, knowledge concerning objects, such as facts, events, things, processes, or ideas, including concepts, that within a certain context has a particular meaning",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "情報処理において、特定の文脈内で特定の意味を持つ、概念を含む事実、出来事、物、プロセス、またはアイデアなどのオブジェクトに関する知識。"
      }
    ],
    "note": "Although information will necessarily have a representation form to make it communicable, it is the interpretation of this representation (the meaning) that is relevant in the first place.",
    "noteJa": "情報を伝達可能にするためには必然的に表現形式が必要になりますが、そもそも重要なのはこの表現の解釈（意味）です。"
  },
  {
    "number": "3.1944",
    "name": "information analysis",
    "definitions": [
      {
        "text": "systematic investigation of information and its flow in a real or planned system",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "実際のシステムまたは計画されたシステムにおける情報とそのフローの体系的な調査"
      }
    ]
  },
  {
    "number": "3.1945",
    "name": "information architecture",
    "definitions": [
      {
        "text": "(human-centered) structure of an information space and the semantics for accessing required task objects, system objects and other information",
        "reference": "ISO/IEC TR 25060:2010 Systems and software engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability: General framework for usability-related information, 2.8",
        "textJa": "情報空間の（人間中心の）構造と、必要なタスク オブジェクト、システム オブジェクト、その他の情報にアクセスするためのセマンティクス"
      }
    ],
    "note": "The appropriate combination of organization, labeling, navigation schemes and retrieval mechanisms within an information space will facilitate task completion and efficient access to content.",
    "noteJa": "情報空間内の編成、ラベル付け、ナビゲーション スキーム、検索メカニズムを適切に組み合わせることで、タスクの完了とコンテンツへの効率的なアクセスが容易になります。"
  },
  {
    "number": "3.1946",
    "name": "information content",
    "definitions": [
      {
        "text": "set of metamodel and model instances found in a CDIF transfer",
        "reference": "ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2",
        "textJa": "CDIF 転送で見つかったメタモデルとモデル インスタンスのセット"
      }
    ]
  },
  {
    "number": "3.1947",
    "name": "information design",
    "definitions": [
      {
        "text": "process of developing content that meets the needs of the audience",
        "reference": "ISO/IEC/IEEE 26511:2011 Systems and software engineering — Requirements for managers of user documentation, 4.11",
        "textJa": "視聴者のニーズを満たすコンテンツを開発するプロセス"
      }
    ]
  },
  {
    "number": "3.1948",
    "name": "information gathering techniques",
    "definitions": [
      {
        "text": "repeatable processes used to assemble and organize data across a spectrum of sources",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "さまざまなソースにわたってデータを組み立て、整理するために使用される反復可能なプロセス"
      }
    ]
  },
  {
    "number": "3.1949",
    "name": "information hiding",
    "definitions": [
      {
        "text": "software development technique in which each module's interfaces reveal as little as possible about the module's inner workings and other modules are prevented from using information about the module that is not in the module's interface specification2. containment of a design or implementation decision in a single module so that the decision is hidden from other modules",
        "textJa": "各モジュールのインターフェースがモジュールの内部動作についてできる限り明らかにしないようにし、他のモジュールがモジュールのインターフェース仕様にないモジュールに関する情報を使用しないようにするソフトウェア開発手法。設計または実装の決定を単一のモジュールに含めて、その決定が他のモジュールから隠されるようにすること"
      }
    ],
    "confer": [
      "encapsulation"
    ]
  },
  {
    "number": "3.1950",
    "name": "information item",
    "definitions": [
      {
        "text": "separately identifiable body of information that is produced, stored, and delivered for human use",
        "reference": "ISO/IEC 30103:2015 Software and Systems Engineering - Lifecycle Processes - Framework for Product Quality Achievement, 3.3; ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.23; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.22; ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.11",
        "textJa": "人間が使用する目的で生成、保存、配信される、個別に識別可能な情報本体"
      },
      {
        "text": "separately identifiable body of information that is produced and stored for human use during a system or software life cycle",
        "reference": "ISO/IEC 25063:2014 Systems and software engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) Common Industry Format (CIF) for usability: Context of use description",
        "textJa": "システムまたはソフトウェアのライフサイクル中に人間が使用するために生成および保存される、個別に識別可能な情報の本体"
      }
    ],
    "confer": [
      "information product"
    ],
    "note": "An information item can be produced in several versions during a system, software, or service life cycle.",
    "noteJa": "情報項目は、システム、ソフトウェア、またはサービスのライフ サイクル中に複数のバージョンで作成されることがあります。"
  },
  {
    "number": "3.1951",
    "name": "information item content",
    "definitions": [
      {
        "text": "information included in an information item, associated with a system, product or service, to satisfy a requirement or need",
        "reference": "ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.13",
        "textJa": "要件またはニーズを満たすために、システム、製品、またはサービスに関連付けられた情報アイテムに含まれる情報"
      }
    ]
  },
  {
    "number": "3.1952",
    "name": "information item type",
    "definitions": [
      {
        "text": "group of information items consistent with a pre-arranged set of generic criteria",
        "reference": "ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.14",
        "textJa": "事前に取り決められた一連の一般的な基準と一致する情報項目のグループ"
      }
    ],
    "alias": [
      "generic document type"
    ],
    "example": "A 'plan' is the information item type for all plans and 'report' is the information item type for all reports.",
    "exampleJa": "「プラン」はすべてのプランの情報項目タイプであり、「レポート」はすべてのレポートの情報項目タイプです。"
  },
  {
    "number": "3.1953",
    "name": "information management",
    "definitions": [
      {
        "text": "in an information processing system, the functions of controlling the acquisition, analysis, retention, retrieval, and distribution of information",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "情報処理システムにおいて、情報の取得、分析、保存、検索、配布などを制御する機能。"
      }
    ]
  },
  {
    "number": "3.1954",
    "name": "information management system",
    "definitions": [
      {
        "text": "facilities, processes and procedures used to collect, store and distribute information between producers and consumers of information in physical or electronic format",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "物理的または電子形式の情報の作成者と利用者の間で情報を収集、保存、配布するために使用される施設、プロセス、および手順"
      }
    ]
  },
  {
    "number": "3.1955",
    "name": "information need",
    "definitions": [
      {
        "text": "insight necessary to manage objectives, goals, risks, and problems",
        "reference": "ISO/IEC/IEEE 15939:2017 Systems and software engineering — Measurement process, 3.12; ISO/IEC 25000:2014 Systems and software Engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Guide to SQuaRE, 4.14",
        "textJa": "目的、目標、リスク、問題を管理するために必要な洞察"
      }
    ]
  },
  {
    "number": "3.1956",
    "name": "information processing",
    "definitions": [
      {
        "text": "systematic performance of operations upon information, which includes data processing and can include operations such as data communication and office automation",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "情報に対する操作の体系的な実行。これにはデータ処理が含まれ、データ通信やオフィス オートメーションなどの操作が含まれる場合があります。"
      }
    ],
    "note": "The term information processing is not a synonym for data processing",
    "noteJa": "情報処理という用語はデータ処理と同義ではありません"
  },
  {
    "number": "3.1957",
    "name": "information processing requirements",
    "definitions": [
      {
        "text": "the set of functions required by the commissioning user of the application software product (excluding any technical and quality requirements)",
        "reference": "ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 1.1",
        "textJa": "アプリケーションソフトウェア製品のコミッショニングユーザーが必要とする一連の機能（技術的および品質的要件を除く）"
      }
    ],
    "confer": [
      "software"
    ]
  },
  {
    "number": "3.1958",
    "name": "information processing system",
    "definitions": [
      {
        "text": "one or more data processing systems and devices, such as office and communication equipment, that perform information processing",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "情報処理を実行する 1 つまたは複数のデータ処理システムおよびデバイス (オフィス機器や通信機器など)"
      }
    ]
  },
  {
    "number": "3.1959",
    "name": "information product",
    "definitions": [
      {
        "text": "one or more indicators and their associated interpretations that address an information need",
        "reference": "ISO/IEC/IEEE 15939:2017 Systems and software engineering — Measurement process, 3.13",
        "textJa": "情報ニーズに対応する 1 つ以上の指標とそれに関連する解釈"
      }
    ],
    "confer": [
      "information item"
    ],
    "example": "a comparison of a measured defect rate to planned defect rate along with an assessment of whether or not the difference indicates a problem",
    "exampleJa": "測定された不良率と計画された不良率の比較と、その差が問題を示しているかどうかの評価"
  },
  {
    "number": "3.1960",
    "name": "information provisioning",
    "definitions": [
      {
        "text": "collection of all the infrastructure tools, software applications, non-automated elements, data sets, user documentation, and organizational structures which serve to supply information to the business",
        "reference": "ISO/IEC 16350- 2015 Information technology — Systems and software engineering — Application management, 4.20",
        "textJa": "ビジネスに情報を提供するすべてのインフラストラクチャ ツール、ソフトウェア アプリケーション、非自動化要素、データ セット、ユーザー ドキュメント、および組織構造のコレクション"
      }
    ]
  },
  {
    "number": "3.1961",
    "name": "information radiator",
    "definitions": [
      {
        "text": "a large and frequently updated display of project information that is continually visible to the project team and other stakeholders",
        "reference": "Software Extension to the PMBOK® Guide Fifth Edition",
        "textJa": "プロジェクト チームや他の利害関係者が継続的に閲覧できる、プロジェクト情報が頻繁に更新される大規模な表示"
      }
    ],
    "example": "burndown charts, cumulative flow diagrams, parking lot diagrams",
    "exampleJa": "バーンダウン チャート、累積フロー図、駐車場図"
  },
  {
    "number": "3.1962",
    "name": "information retrieval (IR)",
    "definitions": [
      {
        "text": "actions, methods, and procedures for obtaining information on a given subject from stored data",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "保存されたデータから特定の主題に関する情報を取得するためのアクション、方法、および手順"
      }
    ]
  },
  {
    "number": "3.1963",
    "name": "information security",
    "definitions": [
      {
        "text": "preservation of confidentiality, integrity and accessibility of information",
        "textJa": "情報の機密性、完全性、およびアクセス可能性の維持"
      }
    ],
    "note": "In addition, other properties such as authenticity, accountability, non-repudiation and reliability can also be involved.",
    "noteJa": "さらに、信頼性、説明責任、否認防止、信頼性などの他の特性も関係する可能性があります。"
  },
  {
    "number": "3.1964",
    "name": "information security incident",
    "definitions": [
      {
        "text": "single or a series of unwanted or unexpected information security events that have a significant probability of compromising business operations and threatening information security",
        "textJa": "事業運営を侵害し、情報セキュリティを脅かす可能性が高い、単一または一連の望ましくない、または予期しない情報セキュリティ イベント"
      }
    ],
    "note": "[ISO/IEC 27000:2009]",
    "noteJa": "[ISO/IEC 27000:2009]"
  },
  {
    "number": "3.1965",
    "name": "information system",
    "definitions": [
      {
        "text": "information processing system, together with associated organizational resources such as human, technical, and financial resources, which provides and distributes information",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "情報を提供および配布する情報処理システムと、人的、技術的、財政的リソースなどの関連組織リソース"
      },
      {
        "text": "all of the functions (input, output, transport, processing, and storage) of an application, databases, technical facilities, and manual procedures which support business processes",
        "reference": "ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.21",
        "textJa": "ビジネスプロセスをサポートするアプリケーション、データベース、技術的設備、および手動手順のすべての機能 (入力、出力、転送、処理、および保管)"
      },
      {
        "text": "one or more computer systems and communication systems together with associated organizational resources such as human, technical, and financial resources that provide and distribute information",
        "reference": "ISO/IEC 25024:2015 Systems and software engineering - Systems and software Quality Requirements and Evaluation (SQuaRE) - Measurement of data, 4.24",
        "textJa": "1 つ以上のコンピュータ システムおよび通信システムと、情報を提供および配布する人的、技術的、財政的リソースなどの関連する組織リソース"
      }
    ],
    "confer": [
      "application"
    ]
  },
  {
    "number": "3.1966",
    "name": "information technology",
    "definitions": [
      {
        "text": "resources required to acquire, process, store and disseminate information",
        "textJa": "情報の取得、処理、保存、配布に必要なリソース"
      }
    ],
    "alias": [
      "IT"
    ],
    "note": "includes Communication Technology (CT) and the composite term Information and Communication Technology (ICT)",
    "noteJa": "通信技術 (CT) と情報通信技術 (ICT) の複合用語が含まれます。"
  },
  {
    "number": "3.1967",
    "name": "information technology project",
    "definitions": [
      {
        "text": "temporary endeavor undertaken to create or change a unique information technology product, system, or service",
        "reference": "ISO/IEC 29155-1:2011 Systems and software engineering — Information technology project performance benchmarking framework — Part 1: Concepts and definitions, 2.7",
        "textJa": "独自の情報技術製品、システム、またはサービスを作成または変更するために行われる一時的な取り組み"
      }
    ],
    "alias": [
      "IT project"
    ]
  },
  {
    "number": "3.1968",
    "name": "information viewpoint",
    "definitions": [
      {
        "text": "viewpoint on an ODP system and its environment that focuses on the semantics of information and information processing",
        "reference": "ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 4.1.1.2",
        "textJa": "情報と情報処理のセマンティクスに焦点を当てた ODP システムとその環境に関する視点"
      }
    ]
  },
  {
    "number": "3.1969",
    "name": "Information-based domain (IBD)",
    "definitions": [
      {
        "text": "realm of activity for which information is the most valuable asset",
        "reference": "ISO/IEC 24744:2014 Software Engineering — Metamodel for development methodologies, 3.1",
        "textJa": "情報が最も価値のある資産となる活動の領域"
      }
    ],
    "note": "Information creation, manipulation, and dissemination are the most important activities within information based domains. Typical information-based domains are software and systems engineering, business process reengineering, and knowledge management",
    "noteJa": "情報の作成、操作、配布は、情報ベースの領域内で最も重要な活動です。典型的な情報ベースのドメインは、ソフトウェアおよびシステム エンジニアリング、ビジネス プロセス リエンジニアリング、ナレッジ マネジメントです。"
  },
  {
    "number": "3.1970",
    "name": "infrastructure",
    "definitions": [
      {
        "text": "hardware and software environment to support computer system and software design, development, and modification",
        "textJa": "コンピュータシステムおよびソフトウェアの設計、開発、変更をサポートするハードウェアおよびソフトウェア環境"
      }
    ],
    "alias": [
      "ecosystem"
    ]
  },
  {
    "number": "3.1971",
    "name": "inheritance",
    "definitions": [
      {
        "text": "semantic notion by which the responsibilities (properties and constraints) of a subclass are considered to include the responsibilities of a superclass, in addition to its own, specifically declared responsibilities",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.86",
        "textJa": "サブクラスの責任 (プロパティと制約) には、明確に宣言された独自の責任に加えて、スーパークラスの責任も含まれるとみなされる意味概念"
      }
    ]
  },
  {
    "number": "3.1972",
    "name": "inherited attribute",
    "definitions": [
      {
        "text": "attribute that is a characteristic of a class by virtue of being an attribute of a generic ancestor",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.87",
        "textJa": "ジェネリック祖先の属性であるため、クラスの特性である属性"
      },
      {
        "text": "attribute that is a characteristic of a category entity by virtue of being an attribute in its generic entity or a generic ancestor entity",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.87",
        "textJa": "汎用エンティティまたは汎用祖先エンティティの属性であるため、カテゴリ エンティティの特性である属性"
      }
    ]
  },
  {
    "number": "3.1973",
    "name": "inherited error",
    "definitions": [
      {
        "text": "error carried forward from a previous step in a sequential process",
        "textJa": "シーケンシャルプロセスの前のステップから繰り越されたエラー"
      }
    ]
  },
  {
    "number": "3.1974",
    "name": "initial Ent",
    "definitions": [
      {
        "text": "Ent that is referenced by later Ents",
        "reference": "ISO/IEC 19770-3:2016, Information technology — IT asset management — Part 3: Entitlement schema, 3.1.14",
        "textJa": "後の Ent によって参照される Ent"
      }
    ],
    "alias": [
      "initial entitlement schema"
    ],
    "note": "The initial Ent is typically a record of the first transaction between software licensor and end customer. An initial Ent is a type of primary Ent.",
    "noteJa": "通常、最初の Ent は、ソフトウェア ライセンサーと最終顧客の間の最初のトランザクションの記録です。初期 Ent は、主 Ent の一種です。"
  },
  {
    "number": "3.1975",
    "name": "initial function point count",
    "definitions": [
      {
        "text": "a function point count carried out at the beginning of a project",
        "reference": "ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis",
        "textJa": "プロジェクトの開始時に実行される機能ポイントのカウント"
      }
    ]
  },
  {
    "number": "3.1976",
    "name": "initial investment",
    "definitions": [
      {
        "text": "investment required just to start an activity",
        "textJa": "活動を始めるだけでも投資が必要"
      }
    ],
    "alias": [
      "first cost"
    ]
  },
  {
    "number": "3.1977",
    "name": "initial marking (of the net)",
    "definitions": [
      {
        "text": "set of initial place markings given with the high-level net definition",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.14.1",
        "textJa": "高レベルのネット定義で指定された初期位置マーキングのセット"
      }
    ]
  },
  {
    "number": "3.1978",
    "name": "initial marking of a place",
    "definitions": [
      {
        "text": "special marking of a place, defined with the high-level net",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.14.2",
        "textJa": "ハイレベルネットで定義された場所の特別なマーキング"
      }
    ]
  },
  {
    "number": "3.1979",
    "name": "initial program loader",
    "definitions": [
      {
        "text": "bootstrap loader used to load that part of an operating system needed to load the remainder of the operating system",
        "textJa": "オペレーティング システムの残りの部分をロードするために必要なオペレーティング システムの部分をロードするために使用されるブートストラップ ローダー"
      }
    ]
  },
  {
    "number": "3.1980",
    "name": "initial risk",
    "definitions": [
      {
        "text": "estimated risk before applying risk reduction measures",
        "reference": "ISO/IEC 15026-3:2015 Systems and software engineering — Systems and software assurance — Part 3: System integrity levels, 3.6",
        "textJa": "リスク低減措置を適用する前の推定リスク"
      }
    ]
  },
  {
    "number": "3.1981",
    "name": "initialization section",
    "definitions": [
      {
        "text": "optional list of unconditional actions to be executed sequentially before the first condition is examined",
        "reference": "ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.13",
        "textJa": "最初の条件が検査される前に連続して実行される無条件アクションのオプションのリスト"
      }
    ],
    "note": "It can be written in the row which follows that of the table heading.",
    "noteJa": "表の見出しの次の行に記述できます。"
  },
  {
    "number": "3.1982",
    "name": "initialize",
    "definitions": [
      {
        "text": "to set a variable, register, or other storage location to a starting value",
        "textJa": "変数、レジスタ、またはその他の記憶場所を開始値に設定する"
      }
    ],
    "confer": [
      "clear",
      "reset"
    ]
  },
  {
    "number": "3.1983",
    "name": "initiating object",
    "definitions": [
      {
        "text": "object causing a communication",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.4.1",
        "textJa": "コミュニケーションを引き起こすオブジェクト"
      }
    ]
  },
  {
    "number": "3.1984",
    "name": "initiating process group",
    "definitions": [
      {
        "text": "those processes performed to define a new project or a new phase of an existing project by obtaining authorization to start the project or phase",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクトまたはフェーズを開始するための承認を取得することによって、新しいプロジェクトまたは既存のプロジェクトの新しいフェーズを定義するために実行されるプロセス。"
      }
    ]
  },
  {
    "number": "3.1985",
    "name": "initiator",
    "definitions": [
      {
        "text": "person or organization that has both the ability and authority to start a project",
        "textJa": "プロジェクトを開始する能力と権限の両方を持つ個人または組織"
      }
    ]
  },
  {
    "number": "3.1986",
    "name": "injection slot",
    "definitions": [
      {
        "text": "point where the recoverability of the system under test (SUT) is tested by injecting a disturbance while a workload is being run",
        "reference": "ISO/IEC 25045:2010 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — Evaluation module for recoverability, 4.3",
        "textJa": "ワークロードの実行中に外乱を注入することによって、テスト対象システム (SUT) の回復可能性がテストされるポイント"
      }
    ]
  },
  {
    "number": "3.1987",
    "name": "inline code",
    "definitions": [
      {
        "text": "sequence of computer instructions that is physically contiguous with the instructions that logically precede and follow it",
        "textJa": "論理的に前後の命令と物理的に連続している一連のコンピュータ命令"
      }
    ]
  },
  {
    "number": "3.1988",
    "name": "inner cardinality",
    "definitions": [
      {
        "text": "number of allowed instances of the relationship from the viewpoint of a single instance of the data object planning a role",
        "reference": "ISO/IEC 15476-4:2005 Information technology — CDIF semantic metamodel — Part 4: Data models, 6.6.2",
        "textJa": "役割を計画するデータオブジェクトの単一インスタンスの観点から見た、関係の許可されるインスタンスの数"
      }
    ],
    "confer": [
      "outer cardinality"
    ]
  },
  {
    "number": "3.1989",
    "name": "input",
    "definitions": [
      {
        "text": "data received from an external source",
        "textJa": "外部ソースから受信したデータ"
      },
      {
        "text": "pertaining to a device, process, or channel involved in receiving data from an external source",
        "textJa": "外部ソースからのデータ受信に関与するデバイス、プロセス、またはチャネルに関するもの"
      },
      {
        "text": "to receive data from an external source",
        "textJa": "外部ソースからデータを受信する"
      },
      {
        "text": "to provide data from an external source",
        "textJa": "外部ソースからデータを提供するため"
      },
      {
        "text": "loosely, input data",
        "textJa": "大まかに入力データ"
      },
      {
        "text": "in an IDEF0 model, that which is transformed by a function into output",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.62",
        "textJa": "IDEF0 モデルでは、関数によって出力に変換されるもの"
      },
      {
        "text": "any item, whether internal or external to the project that is required by a process before that process proceeds. May be an output from a predecessor process",
        "reference": "A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition",
        "textJa": "プロジェクトの内部または外部に関係なく、プロセスが続行する前にプロセスで必要とされる任意の項目。先行プロセスからの出力である可能性があります"
      },
      {
        "text": "data entered into an information processing system or any of its parts for storage or processing",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "保存または処理のために情報処理システムまたはその一部に入力されるデータ"
      },
      {
        "text": "process of entering data into an information-processing system or any of its parts for storage or processing",
        "reference": "ISO/IEC 2382:2015, Information technology — Vocabulary",
        "textJa": "保存または処理のために情報処理システムまたはその一部にデータを入力するプロセス"
      }
    ]
  },
  {
    "number": "3.1990",
    "name": "input arc (of a transition)",
    "definitions": [
      {
        "text": "arc directed from a place to the transition",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.1.1",
        "textJa": "ある場所からトランジションに向かう弧"
      }
    ]
  },
  {
    "number": "3.1991",
    "name": "input argument",
    "definitions": [
      {
        "text": "designation given to an operation argument that will always have a value at the invocation of the operation",
        "textJa": "操作の呼び出し時に常に値を持つ操作引数に与えられる指定"
      }
    ],
    "confer": [
      "output argument"
    ]
  },
  {
    "number": "3.1992",
    "name": "input arrow",
    "definitions": [
      {
        "text": "arrow or arrow segment that expresses IDEF0 input",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.63",
        "textJa": "IDEF0 入力を表す矢印または矢印セグメント"
      }
    ],
    "note": "That is, an object type set whose instances are transformed by a function into output. The arrowhead of an input arrow is attached to the left side of a box.",
    "noteJa": "つまり、そのインスタンスが関数によって出力に変換されるオブジェクト タイプ セットです。入力矢印の矢頭はボックスの左側に取り付けられます。"
  },
  {
    "number": "3.1993",
    "name": "input assertion",
    "definitions": [
      {
        "text": "logical expression specifying one or more conditions that program inputs must satisfy in order to be valid",
        "textJa": "プログラム入力が有効であるために満たさなければならない 1 つ以上の条件を指定する論理式"
      }
    ],
    "confer": [
      "loop assertion",
      "output assertion",
      "inductive assertion",
      "method"
    ]
  },
  {
    "number": "3.1994",
    "name": "input loopback",
    "definitions": [
      {
        "text": "loopback of output from one function to be input for another function in the same diagram",
        "reference": "IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.64",
        "textJa": "同じダイアグラム内の別の関数の入力となる、ある関数からの出力のループバック"
      }
    ]
  },
  {
    "number": "3.1995",
    "name": "input place (of a transition)",
    "definitions": [
      {
        "text": "place connected to the transition by an input arc",
        "reference": "ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.20.1",
        "textJa": "入力アークによってトランジションに接続された場所"
      }
    ]
  },
  {
    "number": "3.1996",
    "name": "input primitive",
    "definitions": [
      {
        "text": "effort to develop software products, expressed in units of staff-hour",
        "textJa": "ソフトウェア製品の開発にかかる労力（スタッフ時間単位で表す）"
      }
    ]
  },
  {
    "number": "3.1997",
    "name": "input routine",
    "definitions": [
      {
        "text": "those activities required to obtain the logical record to be processed next",
        "textJa": "次に処理される論理レコードを取得するために必要なアクティビティ"
      }
    ],
    "note": "If there are no more logical records to be processed, the end-of-input condition becomes tru",
    "noteJa": "処理する論理レコードがもうない場合、入力終了条件は true になります。"
  },
  {
    "number": "3.1998",
    "name": "input-process-output",
    "definitions": [
      {
        "text": "software design technique that consists of identifying the steps involved in each process to be performed and identifying the inputs to and outputs from each step",
        "textJa": "実行される各プロセスに含まれるステップを特定し、各ステップへの入力と各ステップからの出力を特定することで構成されるソフトウェア設計手法"
      }
    ],
    "confer": [
      "data structure-centered design",
      "input-process-output chart",
      "modular decomposition",
      "object-oriented desi rapid prototyping"
    ],
    "note": "A refinement called hierarchical input-process-output identifies the steps, inputs, and outputs at both general and detailed levels of detail",
    "noteJa": "階層的な入力-プロセス-出力と呼ばれる改良により、一般的な詳細レベルと詳細な詳細レベルの両方でステップ、入力、出力が識別されます。"
  },
  {
    "number": "3.1999",
    "name": "input-process-output chart (IPO chart)",
    "definitions": [
      {
        "text": "diagram of a software system or module, consisting of a rectangle on the left listing inputs, a rectangle in the center listing processing steps, a rectangle on the right listing outputs, and arrows connecting inputs to processing steps and processing steps to outputs",
        "textJa": "ソフトウェア システムまたはモジュールの図。入力をリストする左側の四角形、処理ステップをリストする中央の四角形、出力をリストする右側の四角形、および入力と処理ステップおよび処理ステップと出力を接続する矢印で構成されます。"
      }
    ],
    "confer": [
      "block diagram",
      "box diagram",
      "bubble chart",
      "flowchart",
      "graph",
      "structure chart"
    ]
  },
  {
    "number": "3.2110",
    "name": "introduction",
    "definitions": [
      {
        "text": "of an <X>, instantiating not achieved by an action of objects in the model",
        "reference": "ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.19",
        "textJa": "<X> のインスタンス化は、モデル内のオブジェクトのアクションによっては達成されません"
      }
    ],
    "confer": [
      "creation"
    ]
  },
  {
    "number": "3.2205",
    "name": "level",
    "definitions": [
      {
        "text": "designation of the coverage and detail of a view",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.100",
        "textJa": "ビューの範囲と詳細の指定"
      }
    ],
    "note": "There are multiple levels of view; each is intended to be distinct, specified in terms of the modeling constructs to be used.",
    "noteJa": "複数のレベルのビューがあります。それぞれは別個のものであることが意図されており、使用されるモデリング構造の観点から指定されます。"
  },
  {
    "number": "3.2564",
    "name": "N/A",
    "definitions": [
      {
        "text": "not applicable",
        "reference": "IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.2",
        "textJa": "適用できない"
      },
      {
        "text": "not available",
        "textJa": "利用不可"
      }
    ]
  },
  {
    "number": "3.2630",
    "name": "not printable",
    "definitions": [
      {
        "text": "not a <GeneralPrintableChar>, \", #,], <EscapeCharacter> or <WhiteSpace>",
        "reference": "ISO/IEC 15475-3:2002 Information technology — CDIF transfer format — Part 3: Encoding ENCODING.1, 7.2.11",
        "textJa": "<GeneralPrintableChar>、\"、#,]、<EscapeCharacter>、または <WhiteSpace> ではありません。"
      }
    ]
  },
  {
    "number": "3.2633",
    "name": "note",
    "definitions": [
      {
        "text": "helpful hint or other information that assists the user by emphasizing or supplementing important points of the main text",
        "reference": "ISO/IEC 26513:2009 Systems and software engineering — Requirements for testers and reviewers of user documentation, 3.24",
        "textJa": "本文の重要な点を強調または補足することでユーザーを支援する役立つヒントまたはその他の情報"
      },
      {
        "text": "body of free text that describes some general comment or specific constraint about a portion of a model",
        "reference": "IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.126",
        "textJa": "モデルの一部に関する一般的なコメントまたは特定の制約を説明するフリーテキストの本文"
      }
    ],
    "confer": [
      "warning",
      "caution"
    ]
  }
]